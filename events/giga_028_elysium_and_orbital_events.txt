namespace = giga_elysium

# unemployment makes cottage industries
planet_event = {
	id = giga_elysium.001
	hide_window = yes

	mean_time_to_happen = { years = 5 }

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		has_planet_flag = has_orbital_elysium
		has_modifier = giga_elysium_host_planet
		is_under_colonization = no
		owner = { is_country_type = default }
		num_pops >= 5
		num_unemployed >= 5
		OR = {
			AND = {
				owner = { is_gestalt = no }
				count_owned_pop = {
					limit = {
						is_unemployed = yes
						is_shackled_robot = no
						NOR = {
							has_living_standard = { type = living_standard_utopian }
							has_living_standard = { type = living_standard_good }
							has_living_standard = { type = living_standard_shared_burden }
						}
					}
					count >= 5
				}
			}
			AND = {
				owner = { is_gestalt = yes }
				count_owned_pop = {
					limit = {
						is_unemployed = yes
						NOT = { has_living_standard = { type = living_standard_organic_trophy } }
					}
					count >= 5
				}
			}
		}
	}

	immediate = {
		add_deposit = d_giga_elysium_cottage_industry

		if = {
			limit = {
				owner = { not = { has_country_flag = giga_elysium_cottage_industry_message } }
			}

			# send full notification message
			owner = {
				set_country_flag = giga_elysium_cottage_industry_message
				country_event = {
					id = giga_elysium.002
					scopes = {
						from = root
					}
				}
			}
		}
		else = {
			# send little notification
			create_message = {
				type = GIGA_ELYSIUM_COTTAGE_INDUSTRY
				localization = MESSAGE_GIGA_ELYSIUM_COTTAGE_INDUSTRY
				days = 30
				target = this

				variable = {
					type = name
					localization = SYSTEM
					scope = solar_system
				}

				variable = {
					type = name
					localization = PLANET
					scope = this
				}
			}
		}
	}
}

# cottege industry notification
country_event = {
	id = giga_elysium.002
	title = giga_elysium.002.name
	picture = GFX_evt_galactic_market
	show_sound = event_default
	location = from
	is_triggered_only = yes

	desc = {
		trigger = {
			is_gestalt = no
		}
		text = giga_elysium.002.desc
	}
	desc = {
		trigger = {
			is_hive_empire = yes
		}
		text = giga_elysium.002.desc.hive
	}
	desc = {
		trigger = {
			is_machine_empire = yes
		}
		text = giga_elysium.002.desc.machine
	}

	option = {
		name = ACKNOWLEDGED

		tooltip = {
			from = {
				add_deposit = d_giga_elysium_cottage_industry
			}
		}
	}
}

# overcrowding makes housing
planet_event = {
	id = giga_elysium.003
	hide_window = yes

	mean_time_to_happen = { years = 5 }

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		has_planet_flag = has_orbital_elysium
		has_modifier = giga_elysium_host_planet
		is_under_colonization = no
		owner = { is_country_type = default }
		num_pops >= 5
		free_housing <= -5
	}

	immediate = {
		if = {
			limit = {
				count_deposit = {
					limit = {
						is_deposit_type = d_giga_elysium_livestock_pens
					}
					count < value:giga_elysium_pen_pops
				}
			}

			# LIVESTOCK PEN

			add_deposit = d_giga_elysium_livestock_pens

			if = {
				limit = {
					owner = { not = { has_country_flag = giga_elysium_livestock_pens_message } }
				}

				# send full notification message
				owner = {
					set_country_flag = giga_elysium_livestock_pens_message
					country_event = {
						id = giga_elysium.005
						scopes = {
							from = root
						}
					}
				}
			}
			else = {
				# send little notification
				create_message = {
					type = GIGA_ELYSIUM_LIVESTOCK_PENS
					localization = MESSAGE_GIGA_ELYSIUM_LIVESTOCK_PENS
					days = 30
					target = this

					variable = {
						type = name
						localization = SYSTEM
						scope = solar_system
					}

					variable = {
						type = name
						localization = PLANET
						scope = this
					}
				}
			}
		}
		else = {
			# SLUMS

			add_deposit = d_giga_elysium_slums

			if = {
				limit = {
					owner = { not = { has_country_flag = giga_elysium_slums_message } }
				}

				# send full notification message
				owner = {
					set_country_flag = giga_elysium_slums_message
					country_event = {
						id = giga_elysium.004
						scopes = {
							from = root
						}
					}
				}
			}
			else = {
				# send little notification
				create_message = {
					type = GIGA_ELYSIUM_SLUMS
					localization = MESSAGE_GIGA_ELYSIUM_SLUMS
					days = 30
					target = this

					variable = {
						type = name
						localization = SYSTEM
						scope = solar_system
					}

					variable = {
						type = name
						localization = PLANET
						scope = this
					}
				}
			}
		}
	}
}

# slums notification
country_event = {
	id = giga_elysium.004
	title = giga_elysium.004.name
	picture = GFX_evt_spy_network
	show_sound = event_default
	location = from
	is_triggered_only = yes

	desc = {
		trigger = {
			is_gestalt = no
		}
		text = giga_elysium.004.desc
	}
	desc = {
		trigger = {
			is_hive_empire = yes
		}
		text = giga_elysium.004.desc.hive
	}
	desc = {
		trigger = {
			is_machine_empire = yes
		}
		text = giga_elysium.004.desc.machine
	}

	option = {
		name = ACKNOWLEDGED

		tooltip = {
			from = {
				add_deposit = d_giga_elysium_slums
			}
		}
	}
}

# livestock pens notification
country_event = {
	id = giga_elysium.005
	title = giga_elysium.005.name
	picture = GFX_evt_ship_offloading_cargo
	show_sound = event_default
	location = from
	is_triggered_only = yes

	desc = {
		trigger = {
			is_gestalt = no
		}
		text = giga_elysium.005.desc
	}
	desc = {
		trigger = {
			is_hive_empire = yes
		}
		text = giga_elysium.005.desc.hive
	}
	desc = {
		trigger = {
			is_machine_empire = yes
		}
		text = giga_elysium.005.desc.machine
	}

	option = {
		name = ACKNOWLEDGED

		tooltip = {
			from = {
				add_deposit = d_giga_elysium_livestock_pens
			}
		}
	}
}

# decommissioned
country_event = {
	id = giga_elysium.006
	title = giga_elysium.006.name
	picture = GFX_evt_atmospheric_entry
	show_sound = event_default
	location = fromfrom
	is_triggered_only = yes

	desc = {
		trigger = {
			is_gestalt = no
			is_egalitarian = no
			is_cooperative = no
		}
		text = giga_elysium.006.desc
	}
	desc = {
		trigger = {
			or = {
				is_egalitarian = yes
				is_cooperative = yes
				has_valid_civic = civic_machine_servitor
			}
		}
		text = giga_elysium.006.desc.egal
	}
	desc = {
		trigger = {
			is_gestalt = yes
			not = { has_valid_civic = civic_machine_servitor }
		}
		text = giga_elysium.006.desc.gestalt
	}

	option = {
		default_hide_option = yes
		name = ACKNOWLEDGED
	}

	option = {
		name = giga_elysium.006.good

		trigger = {
			or = {
				is_egalitarian = yes
				is_cooperative = yes
				has_valid_civic = civic_machine_servitor
			}
		}
	}
}

#########################################################################################
# Monthly update

country_event = {
	id = giga_elysium.100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_owned_planet = {
			is_planet_class = pc_giga_elysium
			exists = orbit
		}
	}

	immediate =  {
		every_owned_planet = {
			limit = {
				is_planet_class = pc_giga_elysium
				exists = orbit
			}
			orbit = {
				if = {
					limit = {
						exists = owner
						exists = controller
						owner = { is_same_empire = root }
						controller = { is_same_empire = root }
					}

					set_variable = {
						which = giga_elysium_stability
						value = prev.modifier:giga_elysium_host_stability_add
					}

					set_variable = {
						which = giga_elysium_output
						value = prev.modifier:giga_elysium_host_jobs_produces_mult
					}
						
					set_variable = {
						which = giga_elysium_admin
						value = prev.value:giga_elysium_admin_calc
					}

					set_variable = {
						which = giga_elysium_amenities
						value = prev.value:giga_elysium_amenities_calc
					}

					if = {
						limit = {
							owner = {
								has_valid_civic = civic_dystopian_society
							}
						}

						set_variable = {
							which = giga_elysium_dystopian_stability
							value = prev.value:giga_elysium_dystopian_stability_calc
						}
					}

					prev = {
						if = {
							limit = {
								has_modifier = giga_elysium_no_host
							}
							remove_modifier = giga_elysium_no_host
						}

						# AI resettlement down to the planet, even if normal auto-resettle wouldn't do anything
						if = {
							limit = {
								root = { is_ai = yes }
								num_unemployed > 3
							}
							random_owned_pop = {
								limit = {
									is_unemployed = yes
								}
								resettle_pop = {
									pop = this
									planet = prev.orbit
								}
							}
						}
					}
				}
				else = {
					set_variable = {
						which = giga_elysium_stability
						value = 0
					}

					set_variable = {
						which = giga_elysium_output
						value = 0
					}
	
					set_variable = {
						which = giga_elysium_admin
						value = 0
					}

					set_variable = {
						which = giga_elysium_dystopian_stability
						value = 0
					}

					prev = {
						if = {
							limit = {
								not = { has_modifier = giga_elysium_no_host }
							}
							add_modifier = { modifier = giga_elysium_no_host }
						}
					}
				}
				
			}
		}
	}
}

#########################################################################################
# Capital upgrade building addon

planet_event = {
	id = giga_elysium.101
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		has_planet_flag = has_orbital_elysium
		has_modifier = giga_elysium_host_planet

		not = {
			has_building = building_giga_elysium_host_booster
		}

		or = {
			last_building_changed = building_giga_elysium_host_major_capital
			last_building_changed = building_giga_elysium_host_hive_major_capital
			last_building_changed = building_giga_elysium_host_machine_major_capital
		}
	}

	immediate = {
		add_building = building_giga_elysium_host_booster
	}
}

#########################################################################################
# Necrophage ascension

planet_event = {
	id = giga_elysium.1000
	hide_window = yes
	is_triggered_only = yes

	pre_triggers = {
		has_owner = yes
	}

	trigger = {
		has_planet_flag = has_orbital_elysium
		has_modifier = giga_elysium_host_planet
		owner = {
			has_origin = origin_necrophage
			has_trait = trait_necrophage
		}
		num_assigned_jobs = {
			job = necro_apprentice
			value >= 1
		}
	}

	immediate = {
		set_timed_planet_flag = {
			flag = necrophage_alert_timer
			days = 2880
		}
		set_saved_date = {
			key = necrophage_elevation_timer
			days_from_present = 3600
			expires = 3600
		}
		random_owned_pop = {
			limit = {
				is_same_species = owner_species
				has_trait = trait_necrophage
			}
			species = { save_event_target_as = necrophage_pop_species }
		}
		every_owned_pop = {
			limit = { has_job = necro_apprentice }
			root.owner = {
				if = {
					limit = { has_ascension_perk = ap_become_the_crisis }
					complete_crisis_objective = crisobj_purge_pops
				}
			}
			root = {
				change_variable = {
					which = var_necrophaged_pops
					value = 1
				}
				if = {
					limit = {
						exists = event_target:necrophage_pop_species
					}
					create_pop = {
						species = event_target:necrophage_pop_species
					}
				}
				else = {
					create_pop = {
						species = owner_species
					}
				}
				if = {
					limit = {
						last_created_pop = {
							NOT = { ideal_planet_class = root }
						}
						NOR = {
							uses_district_set = habitat
							uses_district_set = ring_world
							uses_district_set = city_world
							uses_district_set = hive_world
							uses_district_set = machine_world
							is_planet_class = pc_gaia
							is_planet_class = pc_relic
						}
						owner = {
							has_technology = tech_glandular_acclimation
							NOT = { ideal_planet_class = root }
						}
					}
					last_created_pop = {
						modify_species = {
							ideal_planet_class = root
						}
					}
				}
			}
			every_country = {
				limit = {
					has_communications = root.owner
					NOT = { is_country = root.owner }
					NOT = { is_same_species = prev }
					NOT = { has_ai_personality_behaviour = purger }
					NOT = { has_origin = origin_necrophage }
					NOT = { has_ethic = ethic_gestalt_consciousness }
					NOR = {
						has_valid_civic = civic_death_cult
						has_valid_civic = civic_death_cult_corporate
					}
					OR = {
						is_country_type = default
						has_ai_personality = awakened_fallen_empire_xenophile
					}
					has_intel_level = {
						who = FROM
						category = economy
						level >= 2
					}
				}
				add_opinion_modifier = { who = root.owner modifier = opinion_necrophage }
			}
			every_country = {
				limit = {
					has_communications = root.owner
					NOT = { is_country = root.owner }
					is_same_species = prev
					has_intel_level = {
						who = FROM
						category = economy
						level >= 1 #lower because you'd hear from a friend of a friend
					}
				}
				add_opinion_modifier = { who = root.owner modifier = opinion_necrophage_our_species }
			}
			kill_pop = yes
		}
		create_message = {
			type = MESSAGE_NECROPHAGE_POPS_NECROPHAGED
			localization = MESSAGE_NECROPHAGE_POPS_NECROPHAGED
			days = 30
			target = this
			variable = {
				type = name
				localization = PLANET
				scope = this
			}
			variable = {
				type = variable
				varname = var_necrophaged_pops
				localization = VALUE
				scope = this
			}
		}
		if = {
			limit = {
				owner = {
					OR = {
						has_active_tradition = tr_harmony_unity_of_self
						has_active_tradition = tr_synchronicity_unity_of_mind
					}
				}
			}
			owner = {
				add_monthly_resource_mult = {
					resource = unity
					value = 1.5
					min = 5
					max = 100
				}
			}
		}
		set_variable = {
			which = var_necrophaged_pops
			value = 0
		}
	}
}

# make sure reassigned pops end up as zombies
planet_event = { 
	id = giga_elysium.1001
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		fromfrom = { 
			is_organic_species = yes
			NOT = { has_trait = trait_zombie }
		}
		owner = { has_valid_civic = civic_permanent_employment }
		has_modifier = giga_elysium_host_planet
		num_assigned_jobs = {
			job = reassigner
			value > 0
		}
	}

	immediate = {
		fromfrom = {
			make_pop_zombie = yes
		}
	}
	after = {
		fromfrom = {
			clear_pop_category = yes #To make sure that the zombie pop does not spawn as a non worker strata
		}
	}
}

#################################################################################################################################
#################################################################################################################################
#################################################################################################################################

namespace = giga_orbital

# monthly update
country_event = {
	id = giga_orbital.001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_planet_within_border = {
			is_planet_class = pc_giga_orbital
		}
	}

	immediate = {
		every_system_within_border = {
			if = {
				limit = {
					exists = star
					any_system_planet = {
						is_planet_class = pc_giga_orbital
					}
				}
				random_system_planet = {
					limit = {
						is_planet_class = pc_giga_orbital
					}
					save_event_target_as = orbital
				}

				star = {
					if = {
						limit = {
							exists = event_target:orbital
							event_target:orbital = {
								is_colony = yes
								exists = owner
								exists = controller
								owner = {
									is_same_empire = root
								}
								controller = {
									is_same_empire = root
								}
							}
						}
						# set values
						set_variable = {
							which = giga_system_resettlement
							value = event_target:orbital.value:giga_system_resettlement_calc
						}
						set_variable = {
							which = giga_system_bio_trophy_bonus
							value = event_target:orbital.value:giga_system_bio_trophy_bonus_calc
						}
						set_variable = {
							which = giga_system_habitat_amenities
							value = event_target:orbital.value:giga_system_habitat_amenities_calc
						}
					}
					else = {
						# clear values
						if = {
							limit = {
								is_variable_set = giga_system_resettlement
							}
							clear_variable = giga_system_resettlement
						}
						if = {
							limit = {
								is_variable_set = giga_system_bio_trophy_bonus
							}
							clear_variable = giga_system_bio_trophy_bonus
						}
						if = {
							limit = {
								is_variable_set = giga_system_habitat_amenities
							}
							clear_variable = giga_system_habitat_amenities
						}
					}
				}
			}
		}
	}
}

# yearly update
country_event = {
	id = giga_orbital.002
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_planet_within_border = {
			or = {
				has_deposit = d_giga_orbital_effects
				is_planet_class = pc_giga_orbital
			}
		}
	}

	immediate = {
		# remove deposit from any planets which shouldn't have it
		every_planet_within_border = {
			limit = {
				has_deposit = d_giga_orbital_effects
				solar_system = {
					not = {
						any_system_planet = {
							is_planet_class = pc_giga_orbital
						}
					}
				}
			}
			remove_deposit = d_giga_orbital_effects
		}

		# add deposit to planets which should have it
		every_planet_within_border = {
			limit = {
				is_planet_class = pc_giga_orbital
			}

			solar_system = {
				every_system_planet = {
					limit = {
						is_colony = yes
						not = {
							has_deposit = d_giga_orbital_effects
						}
					}

					add_deposit = d_giga_orbital_effects
				}
			}
		}
	}
}

#########################################################################################
# Void dweller start system adjustment (adding asteroids for some sweet orbital action)

country_event = {
	id = giga_orbital.100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = origin_void_dwellers
		capital_scope = {
			solar_system = {
				count_system_planet = {
					count < 4
					limit = {
						is_asteroid = yes
						is_moon = no
					}
				}
			}
		}
	}

	immediate = {
		capital_scope = {
			solar_system = {
				add_asteroid_belt = {
					radius = 370
					type = icy_asteroid_belt
				}
				while = {
					count <= 8
					spawn_planet = {
						class = pc_ice_asteroid
						orbit_distance = 370
						#orbit_angle = { min = 0 max = 360 }

						init_effect = {
							clear_deposits = yes
							random_list = {
								1 = { set_name = "giga_generic_asteroid_1" set_planet_flag = random_asteroid_name_1 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_1 } } } }
								1 = { set_name = "giga_generic_asteroid_2" set_planet_flag = random_asteroid_name_2 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_2 } } } }
								1 = { set_name = "giga_generic_asteroid_3" set_planet_flag = random_asteroid_name_3 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_3 } } } }
								1 = { set_name = "giga_generic_asteroid_4" set_planet_flag = random_asteroid_name_4 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_4 } } } }
								1 = { set_name = "giga_generic_asteroid_5" set_planet_flag = random_asteroid_name_5 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_5 } } } }
								1 = { set_name = "giga_generic_asteroid_6" set_planet_flag = random_asteroid_name_6 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_6 } } } }
								1 = { set_name = "giga_generic_asteroid_7" set_planet_flag = random_asteroid_name_7 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_7 } } } }
								1 = { set_name = "giga_generic_asteroid_8" set_planet_flag = random_asteroid_name_8 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_8 } } } }
								1 = { set_name = "giga_generic_asteroid_9" set_planet_flag = random_asteroid_name_9 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_9 } } } }
								1 = { set_name = "giga_generic_asteroid_10" set_planet_flag = random_asteroid_name_10 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_10 } } } }
								1 = { set_name = "giga_generic_asteroid_11" set_planet_flag = random_asteroid_name_11 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_11 } } } }
								1 = { set_name = "giga_generic_asteroid_12" set_planet_flag = random_asteroid_name_12 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_12 } } } }
								1 = { set_name = "giga_generic_asteroid_13" set_planet_flag = random_asteroid_name_13 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_13 } } } }
								1 = { set_name = "giga_generic_asteroid_14" set_planet_flag = random_asteroid_name_14 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_14 } } } }
								1 = { set_name = "giga_generic_asteroid_15" set_planet_flag = random_asteroid_name_15 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_15 } } } }
								1 = { set_name = "giga_generic_asteroid_16" set_planet_flag = random_asteroid_name_16 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_16 } } } }
								1 = { set_name = "giga_generic_asteroid_17" set_planet_flag = random_asteroid_name_17 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_17 } } } }
								1 = { set_name = "giga_generic_asteroid_18" set_planet_flag = random_asteroid_name_18 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_18 } } } }
								1 = { set_name = "giga_generic_asteroid_19" set_planet_flag = random_asteroid_name_19 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_19 } } } }
								1 = { set_name = "giga_generic_asteroid_20" set_planet_flag = random_asteroid_name_20 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_20 } } } }
								1 = { set_name = "giga_generic_asteroid_21" set_planet_flag = random_asteroid_name_21 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_21 } } } }
								1 = { set_name = "giga_generic_asteroid_22" set_planet_flag = random_asteroid_name_22 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_22 } } } }
								1 = { set_name = "giga_generic_asteroid_23" set_planet_flag = random_asteroid_name_23 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_23 } } } }
								1 = { set_name = "giga_generic_asteroid_24" set_planet_flag = random_asteroid_name_24 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_24 } } } }
								1 = { set_name = "giga_generic_asteroid_25" set_planet_flag = random_asteroid_name_25 modifier = { factor = 0 solar_system = { any_system_planet = { has_planet_flag = random_asteroid_name_25 } } } }
							}
						}
					}
				}
				
			}
		}
		
	}
}