namespace = giga_katcivilwar

country_event = {
	id = giga_katcivilwar.1000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			country_event = { id = giga_katcivilwar.1001 days = 2 }
		}
		random_country = {
			limit = { is_ai = no }
			country_event = { id = giga_katcivilwar.1003 days = 720 random = 360 } #CHANGE TO A FEW YEARS
		}
		# event_target:global_event_country = {
		# 	country_event = { id = giga_katcivilwar.1004 days = 360 random = 720 } #CHANGE TO A FEW YEARS
		# }
		set_global_flag = katzen_civil_war_ongoing
		set_global_flag = katzen_civil_war_happened
		event_target:giga_jublio_system = {
			if = {
				limit = { has_owner = yes }
				if = {
					limit = { owner = { NOT = { is_country = event_target:katzen_civil_war_socialist } } }
					add_claims = {
						who = event_target:katzen_civil_war_socialist
						num_of_claims = 3
						show_notification = yes
					}
				}
				if = {
					limit = { owner = { NOT = { is_country = event_target:katzen_civil_war_junta } } }
					add_claims = {
						who = event_target:katzen_civil_war_junta
						num_of_claims = 3
						show_notification = yes
					}
				}
				if = {
					limit = { owner = { NOT = { is_country = event_target:katzen_civil_war_republic } } }
					add_claims = {
						who = event_target:katzen_civil_war_republic
						num_of_claims = 3
						show_notification = yes
					}
				}
			}
		}
		if = {
			limit = {
				event_target:katzen_civil_war_socialist = {
					exists = THIS
				}
			}
			event_target:katzen_civil_war_socialist = {
				if = {
					limit = { event_target:katzen_civil_war_republic = { exists = THIS } }
					declare_war = {
						target = event_target:katzen_civil_war_republic
						attacker_war_goal = "wg_katzen_conquest"
						name = "Katzenburgerkrieg"
					}
				}
				if = {
					limit = { event_target:katzen_civil_war_junta = { exists = THIS } }
					declare_war = {
						target = event_target:katzen_civil_war_junta
						attacker_war_goal = "wg_katzen_conquest"
						name = "Katzenburgerkrieg"
					}
				}
				if = {
					limit = { event_target:katzen_civil_war_realm = { exists = THIS } }
					declare_war = {
						target = event_target:katzen_civil_war_realm
						attacker_war_goal = "wg_katzen_conquest"
						name = "Katzenburgerkrieg"
					}
				}
			}
		}
		if = {
			limit = {
				event_target:katzen_civil_war_junta = {
					exists = THIS
				}
			}
			event_target:katzen_civil_war_junta = {
				if = {
					limit = { event_target:katzen_civil_war_republic = { exists = THIS } }
					declare_war = {
						target = event_target:katzen_civil_war_republic
						attacker_war_goal = "wg_katzen_conquest"
						name = "Katzenburgerkrieg"
					}
				}
				if = {
					limit = { event_target:katzen_civil_war_realm = { exists = THIS } }
					declare_war = {
						target = event_target:katzen_civil_war_realm
						attacker_war_goal = "wg_katzen_conquest"
						name = "Katzenburgerkrieg"
					}
				}
			}
		}
		if = {
			limit = {
				event_target:katzen_civil_war_republic = {
					exists = THIS
				}
			}
			event_target:katzen_civil_war_republic = {
				if = {
					limit = { event_target:katzen_civil_war_realm = { exists = THIS } }
					declare_war = {
						target = event_target:katzen_civil_war_realm
						attacker_war_goal = "wg_katzen_conquest"
						name = "Katzenburgerkrieg"
					}
				}
			}
		}
	}
}

#theyre at it again
country_event = {
	id = giga_katcivilwar.1001
	title = "giga_katcivilwar.1001.name"
	desc = "giga_katcivilwar.1001.desc"

	picture = GFX_evt_ground_combat
	show_sound = event_air_raid_siren

	is_triggered_only = yes

	option = {
		name = giga_katcivilwar.1001.a
	}
}

#monthly event that just replaces the leaders if they're gone
event = {
	id = giga_katcivilwar.1002
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_global_flag = katzen_civil_war_happened
	}

	immediate = {
		if = {
			limit = { event_target:katzen_civil_war_junta = { exists = THIS } }
			event_target:katzen_civil_war_junta = {
				if = {
					limit = {
						ruler = { NOT = { has_leader_flag = elwin } }
						any_owned_leader = {
							has_leader_flag = elwin
						}
					}
					set_leader = event_target:katzen_junta_ruler
				}
				else_if = {
					limit = {
						ruler = { NOT = { has_leader_flag = elwin } }
						NOT = {
							any_owned_leader = {
								has_leader_flag = elwin
							}
						}
					}
					create_leader = {
						class = official
						species = event_target:flusion_katzens
						name = "Elwin"
						gender = female
						skill = 5
						traits = {
							trait = katzen_trait_elite
						}
						effect = {
							set_leader_flag = elwin
							save_global_event_target_as = katzen_junta_ruler
						}
					}
					set_leader = event_target:katzen_junta_ruler
				}
			}
		}
		if = {
			limit = { event_target:katzen_civil_war_socialist = { exists = THIS } }
			event_target:katzen_civil_war_socialist = {
				if = {
					limit = {
						ruler = { NOT = { has_leader_flag = katlinin } }
						any_owned_leader = {
							has_leader_flag = katlinin
						}
					}
					set_leader = event_target:katzen_sks_ruler
				}
				else_if = {
					limit = {
						ruler = { NOT = { has_leader_flag = katlinin } }
						NOT = {
							any_owned_leader = {
								has_leader_flag = katlinin
							}
						}
					}
					create_leader = {
						class = official
						species = event_target:flusion_katzens
						name = "Meowkhail Katlinin"
						gender = male
						skill = 5
						traits = {
							trait = katzen_trait_elite
						}
						effect = {
							set_leader_flag = katlinin
							save_global_event_target_as = katzen_sks_ruler
						}
					}
					set_leader = event_target:katzen_sks_ruler
				}
			}
		}
		if = {
			limit = { event_target:katzen_civil_war_realm = { exists = THIS } }
			event_target:katzen_civil_war_realm = {
				if = {
					limit = {
						ruler = { NOT = { has_leader_flag = sergeant_tt } }
						any_owned_leader = {
							has_leader_flag = sergeant_tt
						}
					}
					set_leader = event_target:katzen_realm_ruler
				}
				else_if = {
					limit = {
						ruler = { NOT = { has_leader_flag = sergeant_tt } }
						NOT = {
							any_owned_leader = {
								has_leader_flag = sergeant_tt
							}
						}
					}
					create_leader = {
						class = official
						species = event_target:flusion_katzens
						name = "Kitti Luft"
						gender = female
						skill = 4
						traits = {
							trait = katzen_trait_elite
						}
						effect = {
							set_leader_flag = sergeant_tt
							save_event_target_as = katzen_realm_ruler
						}
					}
					set_leader = event_target:katzen_realm_ruler
				}
			}
		}
		if = {
			limit = { event_target:katzen_civil_war_republic = { exists = THIS } }
			event_target:katzen_civil_war_republic = {
				if = {
					limit = {
						ruler = { NOT = { has_leader_flag = chancellor_kibbles } }
						any_owned_leader = {
							has_leader_flag = chancellor_kibbles
						}
					}
					set_leader = event_target:katzen_republic_ruler
				}
				else_if = {
					limit = {
						ruler = { NOT = { has_leader_flag = chancellor_kibbles } }
						NOT = {
							any_owned_leader = {
								has_leader_flag = chancellor_kibbles
							}
						}
					}
					create_leader = {
						class = official
						species = event_target:flusion_katzens
						name = "Kibbles"
						gender = male
						skill = 4
						traits = {
							trait = katzen_trait_elite
						}
						effect = {
							set_leader_flag = chancellor_kibbles
							save_global_event_target_as = katzen_republic_ruler
						}
					}
					set_leader = event_target:katzen_republic_ruler
				}
			}
		}
	}
}

#Kibbles asks for support
country_event = {
	id = giga_katcivilwar.1003
	title = "giga_katcivilwar.1003.name"
	desc = "giga_katcivilwar.1003.desc"

	picture = GFX_evt_signing
	show_sound = event_conversation

	is_triggered_only = yes

	trigger = {
		exists = event_target:katzen_civil_war_republic
		is_country_type = default
		has_global_flag = katzen_civil_war_ongoing
		NOR = {
			has_valid_civic = civic_fanatic_purifiers
			has_valid_civic = civic_hive_devouring_swarm
			has_valid_civic = civic_machine_terminator
			has_ethic = ethic_fanatic_authoritarian
			is_at_war_with = event_target:katzen_civil_war_republic
		}
	}

	option = {
		name = giga_katcivilwar.1003.a
		allow = {
			resource_stockpile_compare = {
				resource = alloys
				value >= 5000
			}
			resource_stockpile_compare = {
				resource = energy
				value >= 15000
			}
		}
		add_resource = {
			energy = -15000
			alloys = -5000
		}
		event_target:katzen_civil_war_republic = {
			add_modifier = {
				modifier = helped_kibbles_high
				days = 3600
			}
			add_opinion_modifier = {
				who = ROOT
				modifier = opinion_helped_kibbles
			}
		}
	}

	option = {
		name = giga_katcivilwar.1003.b
		allow = {
			resource_stockpile_compare = {
				resource = alloys
				value >= 2500
			}
			resource_stockpile_compare = {
				resource = energy
				value >= 7500
			}
		}
		add_resource = {
			energy = -7500
			alloys = -2500
		}
		event_target:katzen_civil_war_republic = {
			add_modifier = {
				modifier = helped_kibbles_low
				days = 3600
			}
			add_opinion_modifier = {
				who = ROOT
				modifier = opinion_helped_kibbles
			}
		}
	}

	option = {
		name = giga_katcivilwar.1003.c
	}
}

# country_event = { #Search for potential targets
# 	id = giga_katcivilwar.1004
# 	hide_window = yes
# 	is_triggered_only = yes

# 	trigger = {
# 		has_global_flag = katzen_civil_war_ongoing
# 		exists = event_target:katzen_civil_war_socialist
# 		event_target:katzen_civil_war_socialist = { has_federation = no }
# 	}

# 	immediate = {
# 		if = {
# 			limit = {
# 				any_country = { #A player matches the criteria!
# 					is_ai = no
# 					NOR = {
# 						has_country_flag = rejected_katlinin_alliance
# 						is_at_war_with = event_target:katzen_civil_war_socialist
# 					}
# 					OR = {
# 						has_ethic = ethic_fanatic_egalitarian
# 						has_ethic = ethic_egalitarian
# 						has_valid_civic = civic_shared_burden
# 					}
# 				}
# 			}
# 			random_country = {
# 				limit = {
# 					is_ai = no
# 					NOR = {
# 						has_country_flag = rejected_katlinin_alliance
# 						is_at_war_with = event_target:katzen_civil_war_socialist
# 					}
# 					OR = {
# 						has_ethic = ethic_fanatic_egalitarian
# 						has_ethic = ethic_egalitarian
# 						has_valid_civic = civic_shared_burden
# 					}
# 				}
# 				country_event = { id = giga_katcivilwar.1005 }
# 			}
# 		}
# 		else_if = {
# 			limit = {
# 				any_country = {
# 					is_ai = yes
# 					ehof_default_country = yes
# 					NOR = {
# 						has_country_flag = rejected_katlinin_alliance
# 						is_at_war_with = event_target:katzen_civil_war_socialist
# 						#is_country_type = ehof_traders
# 						is_country_type = compound_empire
# 						is_country_type = creators
# 						has_authority = auth_corporate
# 					}
# 					OR = {
# 						has_ethic = ethic_fanatic_egalitarian
# 						has_ethic = ethic_egalitarian
# 						has_valid_civic = civic_shared_burden
# 					}
# 				}
# 			}
# 			random_country = {
# 				limit = {
# 					is_ai = yes
# 					ehof_default_country = yes
# 					NOR = {
# 						has_country_flag = rejected_katlinin_alliance
# 						is_at_war_with = event_target:katzen_civil_war_socialist
# 						#is_country_type = ehof_traders
# 						is_country_type = compound_empire
# 						is_country_type = creators
# 						has_authority = auth_corporate
# 					}
# 					OR = {
# 						has_ethic = ethic_fanatic_egalitarian
# 						has_ethic = ethic_egalitarian
# 						has_valid_civic = civic_shared_burden
# 					}
# 				}
# 				country_event = { id = giga_katcivilwar.1005 }
# 			}
# 		}
# 	}
# }

# #Catlinin offers alliance
# country_event = {
# 	id = giga_katcivilwar.1005
# 	title = "giga_katcivilwar.1005.name"
# 	desc = "giga_katcivilwar.1005.desc"

# 	picture = GFX_evt_announcement
# 	show_sound = event_radio_chatter

# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_katcivilwar.1005.a"
# 		ai_chance = {
# 			factor = 100
# 		}
# 		if = {
# 			limit = { has_federation = yes }
# 			event_target:katzen_civil_war_socialist = {
# 				join_alliance = {
# 					who = ROOT
# 					override_requirements = yes
# 				}
# 				set_country_flag = ai_no_leave_fed
# 			}
# 			every_federation_ally = {
# 				limit = { NOT = { has_country_flag = katzen_civil_war_socialist } }
# 				join_war = event_target:katzen_civil_war_socialist
# 			}
# 		}
# 		else = {
# 			join_alliance = {
# 				who = event_target:katzen_civil_war_socialist
# 				name = "Galaktisches Katzinternationale"
# 				override_requirements = yes
# 			}
# 			event_target:katzen_civil_war_socialist = { set_country_flag = ai_no_leave_fed }
# 			join_war = event_target:katzen_civil_war_socialist
# 			federation = {
# 				save_global_event_target_as = catlinin_federation
# 			}
# 		}
# 		# add_opinion_modifier = {
# 		# 	who = event_target:katzen_civil_war_socialist
# 		# 	modifier = opinion_communist_ally
# 		# }
# 		add_trust = {
# 			amount = 50
# 			who = event_target:katzen_civil_war_socialist
# 		}
# 		event_target:katzen_civil_war_socialist = {
# 			add_trust = {
# 				amount = 50
# 				who = ROOT
# 			}
# 			# add_opinion_modifier = {
# 			# 	who = ROOT
# 			# 	modifier = opinion_communist_ally
# 			# }
# 		}
# 		hidden_effect = {
# 			federation = {
# 				add_cohesion = 100
# 				add_federation_experience = 5000
# 			}
# 		}
# 	}

# 	option = {
# 		name = "giga_katcivilwar.1005.b"
# 		allow = { is_ai = no }
# 		hidden_effect = {
# 			set_country_flag = rejected_katlinin_alliance
# 			event_target:global_event_country = {
# 				country_event = { id = giga_katcivilwar.1005 days = 30 }
# 			}
# 		}
# 	}
# }

country_event = {
	id = giga_katcivilwar.1010
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = katzen_civil_war_ongoing
		has_country_flag = katzen_civil_war_faction
	}

	immediate = {
		every_system_within_border = {
			starbase = { set_owner = from }
		}
		event_target:global_event_country = {
			country_event = { id = giga_katcivilwar.1011 days = 10 } #check
		}
	}
}

country_event = {
	id = giga_katcivilwar.1011
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { #only 1 left
				count_country = {
					limit = { has_country_flag = katzen_civil_war_faction }
					count = 1
				}
				has_global_flag = katzen_civil_war_ongoing
			}
			remove_global_flag = katzen_civil_war_ongoing
			random_country = {
				limit = { is_ai = no }
				save_event_target_as = playernation
			}
			if = {
				limit = {
					any_country = { #katlinin won
						has_country_flag = katzen_civil_war_socialist
					}
				}
				every_country = {
					country_event = { id = giga_katcivilwar.1012 }
				}
				event_target:katzen_civil_war_socialist = {
					set_name = "Sozialistisches Katzimperium"
					set_leader = event_target:katzen_sks_ruler
					every_planet_within_border = {
						katzen_clear_capitals = yes
						add_building = building_giga_katzen_capital
					}
					add_modifier = {
						modifier = pangalactic_federation
					}
					force_add_civic = civic_reunited_imperium_socialist
					change_country_flag = {
						icon={
							category="flusionian"
							file="catlinin_flag.dds"
						}
						background={
							category="backgrounds"
							file="inverted_v.dds"
						}
						colors={
							"red"
							"burgundy"
							"null"
							"null"
						}
					}
					every_country = {
						limit = {
							has_country_flag = katzen_splinter_state
							is_subject = no
							NOT = { is_in_federation_with = event_target:katzen_civil_war_socialist }
							NOT = { has_defensive_pact = event_target:playernation }
							NAND = {
								has_federation = yes
								any_federation_ally = {
									is_ai = no
								}
							}
						}
						event_target:katzen_civil_war_socialist = {
							declare_war = {
								target = PREV
								attacker_war_goal = "wg_katzen_conquest"
								name = "Rückgewinnungskrieg"
							}
						}
					}
				}
			}
			if = {
				limit = {
					any_country = { #kibbles won
						has_country_flag = katzen_civil_war_republic
					}
				}
				every_country = {
					country_event = { id = giga_katcivilwar.1013 }
				}
				event_target:katzen_civil_war_republic = {
					set_name = "Große Katzenrepublik"
					set_leader = event_target:katzen_republic_ruler
					every_planet_within_border = {
						katzen_clear_capitals = yes
						add_building = building_giga_katzen_capital
					}
					add_modifier = {
						modifier = pangalactic_federation
					}
					force_add_civic = civic_reunited_imperium_republic
					change_country_flag = {
						icon={
							category="flusionian"
							file="kibbles_flag.dds"
						}
						background={
							category="backgrounds"
							file="triangle_split.dds"
						}
						colors={
							"light_green"
							"teal"
							"null"
							"null"
						}
					}
				}
			}
			if = {
				limit = {
					any_country = { #elwin won (oh no)
						has_country_flag = katzen_civil_war_junta
					}
				}
				every_country = {
					country_event = { id = giga_katcivilwar.1014 }
				}
				event_target:katzen_civil_war_junta = {
					set_name = "Neu-Katzimperium"
					set_leader = event_target:katzen_junta_ruler
					every_planet_within_border = {
						katzen_clear_capitals = yes
						add_building = building_giga_katzen_capital
					}
					add_modifier = {
						modifier = pangalactic_federation
					}
					every_system = {
						limit = {
							owner = {
								NOT = { is_country = event_target:katzen_civil_war_junta }
							}
							any_system_planet = {
								is_colony = yes
								any_owned_pop = {
									is_species = event_target:flusion_katzens
								}
							}
						}
						add_claims = { #Claim all systems with Katzen pops
							who = event_target:katzen_civil_war_junta
							num_of_claims = 2
							show_notification = yes
						}
					}
					force_add_civic = civic_reunited_imperium_junta
					change_country_flag = {
						icon={
							category="flusionian"
							file="elwin_flag.dds"
						}
						background={
							category="backgrounds"
							file="circle.dds"
						}
						colors={
							"brown"
							"beige"
							"null"
							"null"
						}
					}
					every_country = {
						limit = {
							has_country_flag = katzen_splinter_state
							is_subject = no
							NOT = { has_defensive_pact = event_target:playernation }
							NAND = {
								has_federation = yes
								any_federation_ally = {
									is_ai = no
								}
							}
						}
						event_target:katzen_civil_war_junta = {
							declare_war = {
								target = PREV
								attacker_war_goal = "wg_katzen_conquest"
								name = "Rückgewinnungskrieg"
							}
						}
					}
				}
			}
			if = {
				limit = {
					any_country = { #tt won (how)
						has_country_flag = katzen_civil_war_realm
					}
				}
				every_country = {
					country_event = { id = giga_katcivilwar.1015 }
				}
				event_target:katzen_civil_war_realm = {
					set_name = "Katzenländer"
					set_leader = event_target:katzen_realm_ruler
					every_planet_within_border = {
						katzen_clear_capitals = yes
						add_building = building_giga_katzen_capital
					}
					add_modifier = {
						modifier = pangalactic_federation
					}
					force_add_civic = civic_reunited_imperium_realm
					change_country_flag = {
						icon={
							category="flusionian"
							file="sergeant_flag.dds"
						}
						background={
							category="backgrounds"
							file="new_dawn.dds"
						}
						colors={
							"dark_teal"
							"teal"
							"null"
							"null"
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = giga_katcivilwar.1012
	title = "giga_katcivilwar.1012.name"
	desc = "giga_katcivilwar.1012.desc"

	picture = GFX_evt_alien_propaganda
	show_sound = event_celebration

	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = katzen_civil_war_ongoing }
	}

	option = {
		name = "giga_katcivilwar.1012.a"
	}
}

country_event = {
	id = giga_katcivilwar.1013
	title = "giga_katcivilwar.1013.name"
	desc = "giga_katcivilwar.1013.desc"

	picture = GFX_evt_voting
	show_sound = event_celebration

	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = katzen_civil_war_ongoing }
	}

	option = {
		name = "giga_katcivilwar.1013.a"
	}
}

country_event = {
	id = giga_katcivilwar.1014
	title = "giga_katcivilwar.1014.name"
	desc = "giga_katcivilwar.1014.desc"

	picture = GFX_evt_victorious_army
	show_sound = event_celebration

	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = katzen_civil_war_ongoing }
	}

	option = {
		name = "giga_katcivilwar.1014.a"
	}
}

country_event = {
	id = giga_katcivilwar.1015
	title = "giga_katcivilwar.1015.name"
	desc = "giga_katcivilwar.1015.desc"

	picture = GFX_evt_diplomatic_visit
	show_sound = event_celebration

	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = katzen_civil_war_ongoing }
	}

	option = {
		name = "giga_katcivilwar.1015.a"
	}
}

namespace = giga_flavor

#This event will run yearly in every country, and apply flavor events to appropriate megas

country_event = {
	id = giga_flavor.999
	title = "giga_flavor.999.name"
	desc = "giga_flavor.999.desc"
	is_triggered_only = yes

	picture = GFX_evt_fallen_empire
	show_sound = event_mystic_reveal_light

	trigger = {
		NOT = { has_global_flag = already_warned_about_new_megas }
		is_ai = no
	}

	immediate = {
		set_global_flag = already_warned_about_new_megas
	}

	option = {
		name = "giga_flavor.999.a"
	}
}

country_event = {
	id = giga_flavor.1000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { any_owned_megastructure = { is_megastructure_type = particle_accelerator_1 } }
			country_event = { id = giga_accelerator.100 }
		}
		if = {
			limit = { any_owned_megastructure = { is_megastructure_type = lunar_disco_ball_2 } }
			country_event = { id = giga_disco.100 }
		}
		if = {
			limit = { any_owned_megastructure = { OR = { is_megastructure_type = yggdrasil_orchid_3 is_megastructure_type = yggdrasil_orchid_restored } } }
			country_event = { id = giga_yggdrasil.100 }
		}
	}
}

namespace = giga_yggdrasil
#random event generator
country_event = {
	id = giga_yggdrasil.100
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_megastructure = {
			limit = {
				OR = { is_megastructure_type = yggdrasil_orchid_3 is_megastructure_type = yggdrasil_orchid_restored }
				exists = planet
				planet = { NOT = { has_planet_flag = giga_mega_event_occured_recently } }
			}
			#random stuff
			random_list = {
				1 = { #Lifeforms eat the food
					planet = {
						set_timed_planet_flag = {
							flag = giga_mega_event_occured_recently
							days = 3600
						}
						save_event_target_as = giga_event_planet
					}
					save_event_target_as = yggdrasil_lifeforms
					owner = { 
						country_event = { id = giga_yggdrasil.140 days = 30 random = 15 }
						set_country_flag = yggdrasil_lifeforms_happened
					}
					set_megastructure_flag = yggdrasil_lifeforms
					modifier = {
						factor = 0
						owner = { has_country_flag = yggdrasil_lifeforms_happened }
					}
					modifier = {
						factor = 0
						has_megastructure_flag = yggdrasil_lifeforms
					}
				}
				1 = { #Storm: reduces output
					planet = {
						set_timed_planet_flag = {
							flag = giga_mega_event_occured_recently
							days = 3600
						}
						save_event_target_as = giga_event_planet
					}
					save_event_target_as = yggdrasil_storm
					owner = { 
						country_event = { id = giga_yggdrasil.130 days = 30 random = 15 }
						set_timed_country_flag = {
							flag = yggdrasil_storm_happened
							days = 1800
						}
					}
					modifier = {
						factor = 0
						owner = {
							has_country_flag = yggdrasil_storm_happened
						}
					}
					modifier = {
						factor = 0
						has_megastructure_flag = yggdrasil_storm
					}
				}
				1 = { #Hallucinogens: Plants mutate to become drugs
					planet = {
						set_timed_planet_flag = {
							flag = giga_mega_event_occured_recently
							days = 3600
						}
						save_event_target_as = giga_event_planet
					}
					save_event_target_as = yggdrasil_drugs
					set_megastructure_flag = yggdrasil_drugs
					owner = { 
						country_event = { id = giga_yggdrasil.110 days = 30 random = 15 }
						set_country_flag = yggdrasil_drugs_happened 
					}
					modifier = {
						factor = 0
						owner = {
							OR = {
								is_gestalt = yes
								has_country_flag = yggdrasil_drugs_happened
							}
						}
					}
					modifier = {
						factor = 0
						has_megastructure_flag = yggdrasil_drugs
					}
				}
				0 = { #Another empire asks for a cut of the production
					planet = {
						set_timed_planet_flag = {
							flag = giga_mega_event_occured_recently
							days = 3600
						}
						save_event_target_as = giga_event_planet
					}
					save_event_target_as = yggdrasil_foodshare
					set_timed_megastructure_flag = {
						flag = yggdrasil_foodshare
						days = 720
					} 
					random_country = {
						limit = { is_valid_yggdrasil_food_beggar = yes }
						save_event_target_as = yggdrasil_food_beggar_country
					}
					owner = {  country_event = { id = giga_yggdrasil.120 days = 10 random = 10 } }
					modifier = {
						factor = 0
						has_megastructure_flag = yggdrasil_foodshare
					}
					modifier = {
						add = 5
						any_country = {
							is_valid_yggdrasil_food_beggar = yes
						}
						ROOT = {
							NOR = {
								has_modifier = yggdrasil_food_share_donator
								has_valid_civic = civic_fanatic_purifiers
								has_valid_civic = civic_hive_devouring_swarm
								has_valid_civic = civic_machine_terminator
							}
						}
					}
				}
				96 = {}
			}
		}
	}
}

#Lifeforms eat the food
country_event = {
	id = giga_yggdrasil.140
	title = "giga_yggdrasil.140.name"
	desc = "giga_yggdrasil.140.desc"

	picture = GFX_evt_alien_nature
	show_sound = event_space_amoeba

	is_triggered_only = yes
	
	location = event_target:giga_event_planet

	option = { #Hunt them
		name = "giga_yggdrasil.140.a"
		custom_tooltip = "giga_yggdrasil.140.a.tooltip"
		hidden_effect = {
			event_target:yggdrasil_lifeforms = {
				set_timed_megastructure_flag = {
					flag = clearing_yggdrasil_locusts
					days = 720
				}
			}
			country_event = { id = giga_yggdrasil.141 days = 720 }
		}
	}

	option = { #Whatever
		name = "giga_yggdrasil.140.b"
		custom_tooltip = "giga_yggdrasil.140.b.tooltip"
		hidden_effect = {
			event_target:yggdrasil_lifeforms = {
				set_timed_megastructure_flag = {
					flag = yggdrasil_locusts
					days = 1800
				}
			}
			country_event = { id = giga_yggdrasil.142 days = 1800 }
		}
	}

	option = { #Preserve
		name = "giga_yggdrasil.140.c"
		custom_tooltip = "giga_yggdrasil.140.c.tooltip"
		hidden_effect = {
			event_target:yggdrasil_lifeforms = {
				set_megastructure_flag = studying_yggdrasil_locusts
			}
		}
	}
}

country_event = {
	id = giga_yggdrasil.141
	title = "giga_yggdrasil.141.name"
	desc = "giga_yggdrasil.141.desc"

	is_triggered_only = yes

	picture = GFX_evt_alien_nature
	show_sound = event_sensor_ping

	option = {
		name = "giga_yggdrasil.141.a"
		add_resource = {
			influence = 25
		}
	}
}

country_event = {
	id = giga_yggdrasil.142
	title = "giga_yggdrasil.142.name"
	desc = "giga_yggdrasil.142.desc"

	is_triggered_only = yes

	picture = GFX_evt_alien_nature
	show_sound = event_sensor_ping

	option = {
		name = "giga_yggdrasil.142.a"
	}
}

#Storm: Reduces production
country_event = {
	id = giga_yggdrasil.130
	title = "giga_yggdrasil.130.name"
	desc = "giga_yggdrasil.130.desc"

	picture = GFX_evt_gas_giant
	show_sound = event_structural_collapse

	is_triggered_only = yes
	
	location = event_target:giga_event_planet

	option = { #Spend energy to fix, will last 2 years
		name = "giga_yggdrasil.130.a"
		custom_tooltip = "giga_yggdrasil.130.a.tooltip"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 10000
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= 5000
			}
			resource_stockpile_compare = {
				resource = food
				value >= 2500
			}
		}
		add_resource = {
			energy = -10000
			alloys = -5000
			food = -2000
		}
		hidden_effect = {
			event_target:yggdrasil_storm = {
				set_timed_megastructure_flag = {
					flag = yggdrasil_storm
					days = 720
				} 
			}
		}
	}

	option = { #Too bad. Will last 5 years.
		name = "giga_yggdrasil.130.b"
		custom_tooltip = "giga_yggdrasil.130.b.tooltip"
		hidden_effect = {
			event_target:yggdrasil_storm = {
				set_timed_megastructure_flag = {
					flag = yggdrasil_storm
					days = 2700
				} 
			}
		}
	}
}
#Share: A country wants some food
country_event = {
	id = giga_yggdrasil.120
	title = "giga_yggdrasil.120.name"
	desc = "giga_yggdrasil.120.desc"

	diplomatic = yes

	is_triggered_only = yes
	
	location = event_target:yggdrasil_foodshare

	picture_event_data = {
		portrait = event_target:yggdrasil_food_beggar_country
		room = event_target:yggdrasil_food_beggar_country
		planet_background = event_target:yggdrasil_food_beggar_country.capital_scope
	}

	option = { #Sure!
		name = "giga_yggdrasil.120.a"
		custom_tooltip = "giga_yggdrasil.120.a.tooltip"
		add_modifier = {
			modifier = yggdrasil_food_share_donator
			days = 3600
		}
		add_favors = {
			target = event_target:yggdrasil_food_beggar_country
			value = 5
		}
		event_target:yggdrasil_food_beggar_country = {
			add_modifier = {
				modifier = yggdrasil_food_share_recipient
				days = 3600
			}
			add_opinion_modifier = {
				who = root
				modifier = opinion_yggdrasil_gave_food
			}
		}
	}

	option = { #Sure but pay
		name = "giga_yggdrasil.120.b"
		add_modifier = {
			modifier = yggdrasil_food_share_donator
			days = 3600
		}
		add_resource = {
			energy = 15000
		}
		event_target:yggdrasil_food_beggar_country = {
			add_modifier = {
				modifier = yggdrasil_food_share_recipient
				days = 3600
			}
			add_opinion_modifier = {
				who = root
				modifier = opinion_yggdrasil_gave_food_paid
			}
		}
	}

	option = { #Niet
		name = "giga_yggdrasil.120.c"
		add_resource = {
			influence = 50
		}
		event_target:yggdrasil_food_beggar_country = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_yggdrasil_denied_food
			}
		}
	}
}

#Hallucinogens: Plants in orchid mutate to become drugs
country_event = {
	id = giga_yggdrasil.110
	title = "giga_yggdrasil.110.name"
	desc = "giga_yggdrasil.110.desc"

	picture = GFX_evt_space_crystals
	show_sound = event_alien_nature

	is_triggered_only = yes
	
	location = event_target:yggdrasil_drugs

	option = { #Restrict it. Costs energy but less negative effects.
		name = "giga_yggdrasil.110.a"
		custom_tooltip = "giga_yggdrasil.110.a.tooltip"
		add_modifier = {
			modifier = yggdrasil_drugs_restricted
			days = 7200
		}
		if = {
			limit = { has_ethic = ethic_egalitarian }
			add_modifier = {
				modifier = yggdrasil_drugs_displeased
				days = 1800
				multiplier = 1
			}
		}
		if = {
			limit = { has_ethic = ethic_fanatic_egalitarian }
			add_modifier = {
				modifier = yggdrasil_drugs_displeased
				days = 1800
				multiplier = 2
			}
		}
	}

	option = { #Free circulation. No cost but negative effects.
		name = "giga_yggdrasil.110.b"
		custom_tooltip = "giga_yggdrasil.110.b.tooltip"
		add_modifier = {
			modifier = yggdrasil_drugs_free
			days = 7200
		}
		if = {
			limit = { has_ethic = ethic_authoritarian }
			add_modifier = {
				modifier = yggdrasil_drugs_displeased
				days = 1800
				multiplier = 1
			}
		}
		if = {
			limit = { has_ethic = ethic_fanatic_authoritarian }
			add_modifier = {
				modifier = yggdrasil_drugs_displeased
				days = 1800
				multiplier = 2
			}
		}
	}

	option = { #Sell it! Makes trade value.
		name = "giga_yggdrasil.110.c"
		custom_tooltip = "giga_yggdrasil.110.c.tooltip"
		add_modifier = {
			modifier = yggdrasil_drugs_sold
			days = 7200
		}
		trigger = {
			is_authoritarian = no
			is_megacorp = no 
		}
	}

	option = { #Sell it! Makes trade value. (Megacorp)
		name = "giga_yggdrasil.110.e"
		custom_tooltip = "giga_yggdrasil.110.e.tooltip"
		add_modifier = {
			modifier = yggdrasil_drugs_sold_megacorp
			days = 7200
		}
		trigger = {
			is_authoritarian = no
			is_megacorp = yes
		}
	}

	option = { #Destroy it.
		name = "giga_yggdrasil.110.d"
		custom_tooltip = "giga_yggdrasil.110.d.tooltip"
		add_resource = {
			energy = -7500
			food = -2500
			influence = 50
		}
	}
}


namespace = giga_accelerator
# #random event generator
# country_event = {
# 	id = giga_accelerator.100
# 	hide_window = yes
# 	is_triggered_only = yes

# 	immediate = {
# 		every_owned_megastructure = {
# 			limit = {
# 				is_megastructure_type = particle_accelerator_1
# 				# if both are true ignore the accelerator for events
# 				NAND = {
# 					planet = { has_planet_flag = giga_mega_failure_occured_recently }
# 					planet = { has_planet_flag = giga_mega_event_occured_recently   }
# 				}
# 				NOT = { solar_system = { has_star_flag = giga_galactic_center } }
# 			}
# 			# flip failure variable for chance calculation
# 			planet = {
# 				set_variable = {
# 					which = giga_negative_failure_chance
# 					value = 0
# 				}
# 				subtract_variable = {
# 					which = giga_negative_failure_chance
# 					value = giga_failure_chance
# 				}
# 			}
# 			# failure event
# 			if = {
# 				limit = {
# 					NOT = { planet = { has_planet_flag = giga_mega_failure_occured_recently } }
# 				}
# 				random_list = {
# 					100 = {
# 						# nothing happens
# 						modifier = {
# 							always = yes
# 							add = planet.giga_negative_failure_chance  
# 						}
# 					}
# 					0 = {
# 						# failure event
# 						modifier = {
# 							always = yes
# 							add = planet.giga_failure_chance
# 						}
# 						solar_system = { save_global_event_target_as = giga_mega_event_system }
# 						planet = {
# 							set_timed_planet_flag = {
# 								flag = giga_mega_failure_occured_recently
# 								days = 3600
# 							}
# 						}
# 						set_megastructure_flag = giga_acc_under_repair
# 						owner = { country_event = { id = giga_accelerator.110 days = 10 random = 5 } }
# 					}
# 				}
# 			}
# 			# flavour events
# 			if = {
# 				limit = {
# 					NOT = { planet = { has_planet_flag = giga_mega_event_occured_recently } }
# 				}
# 				random_list = {
# 					0 = { #vacuum fears
# 						# if intensity is set higher than default, event can trigger
# 						# more likely the higher the intensity
# 						modifier = {
# 							add = planet.acc_intensity
# 							planet = {
# 								check_variable = {
# 									which = acc_intensity
# 									value > 2
# 								}
# 							}
# 						}
# 						modifier = {
# 							factor = 0
# 							owner = {
# 								OR = {
# 									is_gestalt = yes
# 									has_country_flag = vacuum_fears_happened
# 								}
# 							}
# 						}
# 						# effect
# 						planet = {
# 							set_timed_planet_flag = {
# 								flag = giga_mega_event_occured_recently
# 								days = 3600
# 							}
# 						}
# 						owner = { country_event = { id = giga_accelerator.120 days = 30 random = 180 } }
# 					}
# 					0 = { #quasistar
# 						# if intensity is set higher than default, event can trigger
# 						# more likely the higher the intensity
# 						modifier = {
# 							add = planet.acc_intensity
# 							planet = {
# 								check_variable = {
# 									which = acc_intensity
# 									value > 2
# 								}
# 							}
# 						}
# 						modifier = {
# 							factor = 0
# 							planet = {
# 								solar_system = {
# 									any_system_planet = {
# 										is_capital = yes
# 									}
# 								}
# 							}
# 						}
# 						modifier = {
# 							factor = 0
# 							has_global_flag = giga_quasi_star_happened
# 						}
# 						# effect
# 						planet = {
# 							set_timed_planet_flag = {
# 								flag = giga_mega_event_occured_recently
# 								days = 3600
# 							}
# 							set_planet_flag = cannot_dismantle_acc
# 							save_global_event_target_as = accelerator_quasistar
# 						}
# 						owner = { country_event = { id = giga_accelerator.150 days = 30 random = 180 } }
# 					}
# 					5 = { #good findings
# 						# accelerator that's off can't get event
# 						modifier = {
# 							factor = 0
# 							planet = {
# 								check_variable = {
# 									which = acc_intensity
# 									value <= 1
# 								}
# 							}
# 						}
# 						# more likely the higher the intensity
# 						modifier = {
# 							always = yes
# 							add = planet.acc_intensity
# 						}
# 						# effect
# 						planet = {
# 							set_timed_planet_flag = {
# 								flag = giga_mega_event_occured_recently
# 								days = 3600
# 							}
# 						}
# 						owner = { country_event = { id = giga_accelerator.130 days = 30 random = 180 } }
# 					}
# 					3 = { #dark matter
# 						# more likely the higher the intensity
# 						modifier = {
# 							always = yes
# 							add = planet.acc_intensity
# 						}
# 						# accelerator that's off can't get event
# 						modifier = {
# 							factor = 0
# 							planet = {
# 								check_variable = {
# 									which = acc_intensity
# 									value <= 1
# 								}
# 							}
# 						}
# 						modifier = {
# 							factor = 0
# 							owner = { NOT = { has_technology = tech_mine_dark_matter } }
# 						}
# 						# effect
# 						planet = {
# 							set_timed_planet_flag = {
# 								flag = giga_mega_event_occured_recently
# 								days = 3600
# 							}
# 						}
# 						owner = { country_event = { id = giga_accelerator.140 days = 30 random = 180 } }
# 					}
# 					90 = {} # nothing
# 					# 2% "open" for the other events, rescaling of probability
# 					# with higher/lower intensity intentional
# 				}
# 			}
# 		}
# 	}
# }

# #quasistar
# country_event = {
# 	id = giga_accelerator.150
# 	title = "giga_accelerator.150.name"
# 	desc = "giga_accelerator.150.desc"

# 	location = event_target:accelerator_quasistar

# 	picture = GFX_evt_black_hole
# 	show_sound = event_yellow_alert

# 	is_triggered_only = yes

# 	immediate = {
# 		set_global_flag = giga_quasi_star_happened
# 		country_event = { id = giga_accelerator.151 days = 30 }
# 	}

# 	option = {
# 		name = "giga_accelerator.150.a"
# 		add_monthly_resource_mult = {
# 			resource = physics_research
# 			value = @tier4researchreward
# 			min = @tier4researchmin
# 			max = @tier4researchmax
# 		}
# 		trigger = {
# 			NOR = {
# 				has_ethic = ethic_materialist
# 				has_ethic = ethic_fanatic_materialist
# 			}
# 		}
# 	}

# 	option = {
# 		name = "giga_accelerator.150.b"
# 		add_monthly_resource_mult = {
# 			resource = physics_research
# 			value = @tier4researchreward
# 			min = @tier4researchmin
# 			max = @tier4researchmax
# 		}
# 		trigger = {
# 			OR = {
# 				has_ethic = ethic_materialist
# 				has_ethic = ethic_fanatic_materialist
# 			}
# 		}
# 	}
# }

# #nom nom
# country_event = {
# 	id = giga_accelerator.151
# 	title = "giga_accelerator.151.name"
# 	desc = "giga_accelerator.151.desc"

# 	location = event_target:accelerator_quasistar

# 	picture = GFX_evt_star_yellow
# 	show_sound = event_solar_fusion

# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.151.a"
# 		hidden_effect = {
# 			country_event = { id = giga_accelerator.152 days = 3600 }
# 		}
# 		add_modifier = {
# 			modifier = studying_accelerator_black_hole_star
# 			days = 1800
# 		}
# 		event_target:accelerator_quasistar = {
# 			add_modifier = {
# 				modifier = giga_quasi_star
# 				days = -1
# 			}
# 		}
# 		add_monthly_resource_mult = {
# 			resource = physics_research
# 			value = @tier5researchreward
# 			min = @tier5researchmin
# 			max = @tier5researchmax
# 		}
# 	}
# }

# #wait its speeding up OH NO
# country_event = {
# 	id = giga_accelerator.152
# 	title = "giga_accelerator.152.name"
# 	desc = "giga_accelerator.152.desc"

# 	location = event_target:accelerator_quasistar

# 	picture = GFX_evt_black_hole
# 	show_sound = event_yellow_alert

# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.152.a"
# 		custom_tooltip = "giga_accelerator.152.a.tooltip"
# 		add_modifier = {
# 			modifier = studying_accelerator_black_hole_star
# 			days = 1800
# 		}
# 		hidden_effect = {
# 			country_event = { id = giga_accelerator.154 days = 3600 } #CHANGE TO 10 YEARS
# 			event_target:accelerator_quasistar = {
# 				planet_event = { id = giga_accelerator.153 days = 420 }
# 				if = {
# 					limit = { planet_size > 1 }
# 					change_planet_size = -1
# 				}
# 				solar_system = {
# 					every_system_planet = {
# 						limit = { is_star = no is_astral_scar = no }
# 						add_modifier = {
# 							modifier = giga_quasi_star_cooling_planet
# 							days = -1
# 						}
# 					}
# 				}
# 			}
# 		}
# 		add_monthly_resource_mult = {
# 			resource = physics_research
# 			value = @tier5researchreward
# 			min = @tier5researchmin
# 			max = @tier5researchmax
# 		}
# 	}
# }

# planet_event = {
# 	id = giga_accelerator.153
# 	hide_window = yes
# 	is_triggered_only = yes

# 	immediate = {
# 		if = {
# 			limit = { planet_size > 1 }
# 			change_planet_size = -1
# 		}
# 		if = {
# 			limit = { NOT = { has_planet_flag = giga_done_shrinking } }
# 			planet_event = { id = giga_accelerator.153 days = 420 }
# 		}
# 	}
# }

# #AAAH
# country_event = {
# 	id = giga_accelerator.154
# 	title = "giga_accelerator.153.name"
# 	desc = "giga_accelerator.153.desc"

# 	location = event_target:accelerator_quasistar

# 	picture = GFX_evt_black_hole
# 	show_sound = event_red_alert

# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.153.a"
# 		custom_tooltip = "giga_accelerator.153.a.tooltip"
# 		add_modifier = {
# 			modifier = studying_accelerator_black_hole_star
# 			days = 1800
# 		}
# 		hidden_effect = {
# 			country_event = { id = giga_accelerator.155 days = 3600 }
# 			event_target:accelerator_quasistar = {
# 				set_planet_flag = giga_done_shrinking
# 				solar_system = {
# 					every_system_planet = {
# 						limit = { is_star = no is_astral_scar = no }
# 						remove_modifier = giga_quasi_star_cooling_planet
# 						add_modifier = {
# 							modifier = giga_quasi_star_cooling_planet_1
# 							days = -1
# 						}
# 					}
# 				}
# 			}
# 		}
# 		add_monthly_resource_mult = {
# 			resource = physics_research
# 			value = @tier5researchreward
# 			min = @tier5researchmin
# 			max = @tier5researchmax
# 		}
# 	}
# }

# #o hey it stopped!
# country_event = {
# 	id = giga_accelerator.155
# 	title = "giga_accelerator.155.name"
# 	desc = "giga_accelerator.155.desc"

# 	location = event_target:accelerator_quasistar

# 	picture = GFX_evt_star_red
# 	show_sound = event_mystic_reveal

# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.155.a"
# 		add_modifier = {
# 			modifier = studying_accelerator_black_hole_star
# 			days = 1800
# 		}
# 		hidden_effect = {
# 			country_event = { id = giga_accelerator.156 days = 1800 }
# 			event_target:accelerator_quasistar = {
# 				if = {
# 					limit = { planet_size > 2 }
# 					change_planet_size = -2
# 				}
# 				else = {
# 					set_planet_size = 1
# 				}
# 			}
# 		}
# 		add_monthly_resource_mult = {
# 			resource = physics_research
# 			value = @tier5researchreward
# 			min = @tier5researchmin
# 			max = @tier5researchmax
# 		}
# 	}
# }

# #NOW ITS GETTING LARGER WHAT
# country_event = {
# 	id = giga_accelerator.156
# 	title = "giga_accelerator.156.name"
# 	desc = "giga_accelerator.156.desc"

# 	location = event_target:accelerator_quasistar

# 	picture = GFX_evt_star_white
# 	show_sound = event_yellow_alert

# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.156.a"
# 		custom_tooltip = "giga_accelerator.156.a.tooltip"
# 		add_modifier = {
# 			modifier = studying_accelerator_black_hole_star_1
# 			days = 1800
# 		}
# 		hidden_effect = {
# 			country_event = { id = giga_accelerator.158 days = 3600 }
# 			event_target:accelerator_quasistar = {
# 				planet_event = { id = giga_accelerator.157 days = 320 }
# 				change_planet_size = 3
# 				solar_system = {
# 					every_system_planet = {
# 						limit = { is_star = no is_astral_scar = no }
# 						remove_modifier = giga_quasi_star_cooling_planet_1
# 						add_modifier = {
# 							modifier = giga_quasi_star_cooling_planet
# 							days = -1
# 						}
# 					}
# 				}
# 			}
# 		}
# 		add_monthly_resource_mult = {
# 			resource = physics_research
# 			value = @tier5researchreward
# 			min = @tier5researchmin
# 			max = @tier5researchmax
# 		}
# 	}
# }

# planet_event = {
# 	id = giga_accelerator.157
# 	hide_window = yes
# 	is_triggered_only = yes

# 	immediate = {
# 		change_planet_size = 1
# 		if = {
# 			limit = { NOT = { has_planet_flag = giga_done_growing } }
# 			planet_event = { id = giga_accelerator.157 days = 320 }
# 		}
# 	}
# }

# #WHY
# country_event = {
# 	id = giga_accelerator.158
# 	title = "giga_accelerator.158.name"
# 	desc = "giga_accelerator.158.desc"

# 	location = event_target:accelerator_quasistar

# 	picture = GFX_evt_star_yellow
# 	show_sound = event_red_alert

# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.158.a"
# 		custom_tooltip = "giga_accelerator.158.a.tooltip"
# 		add_modifier = {
# 			modifier = studying_accelerator_black_hole_star_1
# 			days = 1800
# 		}
# 		hidden_effect = {
# 			country_event = { id = giga_accelerator.160 days = 2700 }
# 			event_target:accelerator_quasistar = {
# 				solar_system = {
# 					every_system_planet = {
# 						limit = { is_star = no is_astral_scar = no }
# 						remove_modifier = giga_quasi_star_cooling_planet
# 					}
# 				}
# 			}
# 		}
# 		add_monthly_resource_mult = {
# 			resource = physics_research
# 			value = @tier5researchreward
# 			min = @tier5researchmin
# 			max = @tier5researchmax
# 		}
# 	}
# }

# #RIP the accelerator
# country_event = {
# 	id = giga_accelerator.160
# 	title = "giga_accelerator.160.name"
# 	desc = { 
# 		text = "giga_accelerator.160.desc.b"  # No accelerator
# 		trigger = {
# 			event_target:accelerator_quasistar = { 
# 				solar_system = {
# 					NOR = {					
# 						has_megastructure = particle_accelerator_0
# 						has_megastructure = particle_accelerator_1
# 						has_megastructure = particle_accelerator_1_manage
# 					}
# 				}
# 			}
# 		} 
# 	}
# 	desc = {
# 		text = "giga_accelerator.160.desc.a"  #still has an accelerator
# 		trigger = {
# 			event_target:accelerator_quasistar = { 
# 				solar_system = {
# 					OR = {					
# 						has_megastructure = particle_accelerator_0
# 						has_megastructure = particle_accelerator_1
# 						has_megastructure = particle_accelerator_1_manage
# 					}
# 				}
# 			}
# 		} 
# 	}

# 	location = event_target:accelerator_quasistar

# 	picture = GFX_evt_exploding_ship
# 	show_sound = event_ship_explosion

# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.160.a"
# 		custom_tooltip = "giga_accelerator.160.a.tooltip"
# 		add_modifier = {
# 			modifier = studying_accelerator_black_hole_star_1
# 			days = 1800
# 		}
# 		event_target:accelerator_quasistar = {
# 			if = {
# 				limit = { NOT = { has_deposit_for = shipclass_mining_station } }
# 				add_deposit = d_physics_10
# 				add_deposit = d_physics_10
# 				add_deposit = d_physics_10
# 				add_deposit = d_physics_10
# 			}

# 			if = {
# 				limit = { has_deposit_for = shipclass_mining_station }
# 				hidden_effect = { clear_deposits = yes }
# 				add_deposit = d_physics_10
# 				add_deposit = d_physics_10
# 				add_deposit = d_physics_10
# 				add_deposit = d_physics_10
# 			}

# 			solar_system = {
# 				every_system_planet = {
# 					limit = {
# 						is_planet_habitable = no
# 						is_star = no
# 						is_astral_scar = no
# 						NOT = { has_deposit_for = shipclass_mining_station }
# 					}
# 					add_deposit = d_physics_6
# 				}
# 			}
# 			hidden_effect = {
# 				solar_system = {
# 					if = { 
# 						limit = { 
# 							OR = {
# 								has_megastructure = particle_accelerator_0
# 								has_megastructure = particle_accelerator_1
# 								has_megastructure = particle_accelerator_1_manage
# 							}
# 						}
# 						root = {
# 							add_resource = {
# 								alloys = 4000
# 							}
# 						}
# 					}
# 				}
# 			}
# 		}
# 		hidden_effect = {
# 			subtract_variable = { which = giga_current_accelerator value = 1 }
# 			event_target:accelerator_quasistar = {
# 				set_planet_flag = giga_done_growing
# 				remove_planet_flag = cannot_dismantle_acc
# 				solar_system = {
# 					every_system_planet = {
# 						limit = { is_star = no is_astral_scar = no }
# 						add_modifier = {
# 							modifier = giga_quasi_star_heating_planet
# 							days = -1
# 						}
# 					}
# 					random_system_megastructure = {
# 						limit = {
# 							planet = { is_same_value = event_target:accelerator_quasistar }
# 							OR = {
# 								is_megastructure_type = particle_accelerator_0
# 								is_megastructure_type = particle_accelerator_1
# 								is_megastructure_type = particle_accelerator_1_manage
# 							}
# 						}
# 						remove_megastructure = THIS
# 					}
# 				}
# 				giga_clear_has_mega_flag = yes
# 			}
# 		}
# 		add_monthly_resource_mult = {
# 			resource = physics_research
# 			value = @tier5researchreward
# 			min = @tier5researchmin
# 			max = @tier5researchmax
# 		}
# 	}
# }

# #dark matter
# country_event = {
# 	id = giga_accelerator.140
# 	title = "giga_accelerator.140.name"
# 	desc = "giga_accelerator.140.desc"

# 	picture = GFX_evt_surreal_visions
# 	show_sound = event_mystic_reveal

# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.140.a"
# 		add_resource = {
# 			sr_dark_matter = 50
# 		}
# 	}

# 	option = {
# 		name = "giga_accelerator.140.b"
# 		trigger = {
# 			NOR = {
# 				is_gestalt = yes
# 				has_ethic = ethic_fanatic_authoritarian
# 			}
# 		}
# 		add_resource = {
# 			sr_dark_matter = 50
# 		}
# 		add_modifier = {
# 			modifier = gave_accelerator_scientists_raise
# 			days = 360
# 		}
# 		hidden_effect = {
# 			random_list = {
# 				# more DM
# 				33 = { country_event = { id = giga_accelerator.141 days = 360 } }
# 				# physics
# 				33 = { country_event = { id = giga_accelerator.131 days = 360 } }
# 				# nothing
# 				33 = { }
# 			}
# 		}
# 	}
# }

# # being nice has a potential reward
# country_event = {
# 	id = giga_accelerator.141
# 	title = "giga_accelerator.141.name"
# 	desc = "giga_accelerator.141.desc"

# 	picture = GFX_evt_surreal_visions
# 	show_sound = event_mystic_reveal

# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.141.a"
# 		add_resource = {
# 			sr_dark_matter = 50
# 		}
# 	}
# }

# #good findings (wholesome)
# country_event = {
# 	id = giga_accelerator.130
# 	title = "giga_accelerator.130.name"
# 	desc = "giga_accelerator.130.desc"

# 	picture = GFX_evt_physics_research
# 	show_sound = event_laboratory_sound

# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.130.a"
# 		add_monthly_resource_mult = {
# 			resource = physics_research
# 			value = @tier5researchreward
# 			min = @tier5researchmin
# 			max = @tier5researchmax
# 		}
# 	}

# 	option = {
# 		name = "giga_accelerator.130.b"
# 		trigger = {
# 			NOR = {
# 				is_gestalt = yes
# 				has_ethic = ethic_fanatic_authoritarian
# 			}
# 		}
# 		add_monthly_resource_mult = {
# 			resource = physics_research
# 			value = @tier5researchreward
# 			min = @tier5researchmin
# 			max = @tier5researchmax
# 		}
# 		add_modifier = {
# 			modifier = gave_accelerator_scientists_raise
# 			days = 360
# 		}
# 		hidden_effect = {
# 			random_list = {
# 				# more DM
# 				33 = {
# 					modifier = { factor = 0 owner = { NOT = { has_technology = tech_mine_dark_matter } } } 
# 					country_event = { id = giga_accelerator.141 days = 360 } 
# 				}
# 				# physics
# 				33 = { country_event = { id = giga_accelerator.131 days = 360 } }
# 				# nothing
# 				33 = { }
# 			}
# 		}
# 	}
# }

# # being nice has a potential reward
# country_event = {
# 	id = giga_accelerator.131
# 	title = "giga_accelerator.131.name"
# 	desc = "giga_accelerator.131.desc"

# 	picture = GFX_evt_physics_research
# 	show_sound = event_laboratory_sound

# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.131.a"
# 		add_monthly_resource_mult = {
# 			resource = physics_research
# 			value = @tier5researchreward
# 			min = @tier5researchmin
# 			max = @tier5researchmax
# 		}
# 	}
# }

# #vacuum fears
# country_event = {
# 	id = giga_accelerator.120
# 	title = "giga_accelerator.120.name"
# 	desc = "giga_accelerator.120.desc"

# 	picture = GFX_evt_physics_research
# 	show_sound = event_conversation

# 	is_triggered_only = yes

# 	immediate = {
# 		set_country_flag = vacuum_fears_happened
# 	}

# 	option = {
# 		name = "giga_accelerator.120.a"
# 		custom_tooltip = "giga_accelerator.120.a.tooltip"
# 		hidden_effect = {
# 			random_list = {
# 				50 = {
# 					country_event = { id = giga_accelerator.121 days = 720 }
# 				}
# 				50 = {
# 					country_event = { id = giga_accelerator.122 days = 720 }
# 				}
# 			}
# 		}
# 		add_modifier = {
# 			modifier = conducting_false_vacuum_study
# 			days = 720
# 		}
# 		add_modifier = {
# 			modifier = false_vacuum_fears
# 			days = -1
# 		}
# 	}

# 	option = {
# 		name = "giga_accelerator.120.b"
# 		custom_tooltip = "giga_accelerator.120.b.tooltip"
# 		trigger = {
# 			NOR = {
# 				has_ethic = ethic_egalitarian
# 				has_ethic = ethic_fanatic_egalitarian
# 			}
# 		}
# 		add_modifier = {
# 			modifier = censored_vacuum_fears
# 			days = 1800
# 		}
# 	}

# 	option = {
# 		name = "giga_accelerator.120.c"
# 		add_modifier = {
# 			modifier = false_vacuum_fears
# 			days = 3600
# 		}
# 	}

# 	option = {
# 		name = "giga_accelerator.120.d"
# 		custom_tooltip = "giga_accelerator.120.d.tooltip"
# 		hidden_effect = {
# 			every_owned_megastructure = {
# 				limit = { is_megastructure_type = particle_accelerator_1 }
# 				planet = {
# 					giga_clear_has_mega_flag = { MEGA = prev }
# 					if = { limit = { has_planet_flag = giga_mega_event_occured_recently } remove_planet_flag = giga_mega_event_occured_recently }
# 					if = { limit = { has_planet_flag = giga_under_repair } remove_planet_flag = giga_under_repair }
# 				}
# 				owner = {
# 					subtract_variable = { which = giga_current_accelerator value = 1 }
# 					add_resource = { alloys = 3500 }
# 				}
# 				remove_megastructure = THIS
# 			}
# 		}
# 	}
# }

# #Its false!
# country_event = {
# 	id = giga_accelerator.121
# 	title = "giga_accelerator.121.name"
# 	desc = "giga_accelerator.121.desc"

# 	is_triggered_only = yes

# 	picture = GFX_evt_physics_research
# 	show_sound = event_laboratory_sound

# 	option = {
# 		name = "giga_accelerator.121.a"
# 		remove_modifier = false_vacuum_fears
# 		add_modifier = {
# 			modifier = false_vacuum_study
# 			days = -1
# 		}
# 	}
# }

# #ITS TRUE OH GOD OH FUCK
# country_event = {
# 	id = giga_accelerator.122
# 	title = "giga_accelerator.122.name"
# 	desc = "giga_accelerator.122.desc"

# 	is_triggered_only = yes

# 	picture = GFX_evt_zro_3
# 	show_sound = event_red_alert

# 	option = {
# 		name = "giga_accelerator.122.a"
# 		custom_tooltip = "giga_accelerator.122.a.tooltip"
# 		remove_modifier = false_vacuum_fears
# 		add_modifier = {
# 			modifier = false_vacuum_study
# 			days = -1
# 		}
# 		hidden_effect = {
# 			random_list = {
# 				50 = {
# 					country_event = { id = giga_accelerator.123 days = 60 random = 5 } #they find out
# 					modifier = {
# 						add = 10
# 						has_ethic = ethic_egalitarian
# 					}
# 					modifier = {
# 						add = 20
# 						has_ethic = ethic_fanatic_egalitarian
# 					}
# 					modifier = {
# 						add = -10
# 						has_ethic = ethic_authoritarian
# 					}
# 					modifier = {
# 						add = -20
# 						has_ethic = ethic_fanatic_authoritarian
# 					}
# 				}
# 				50 = {}
# 			}
# 		}
# 	}

# 	option = {
# 		name = "giga_accelerator.122.b"
# 		remove_modifier = false_vacuum_fears
# 		add_modifier = {
# 			modifier = false_vacuum_fears
# 			days = 3600
# 		}
# 		add_modifier = {
# 			modifier = false_vacuum_study
# 			days = -1
# 		}
# 	}

# 	option = {
# 		name = "giga_accelerator.122.c"
# 		custom_tooltip = "giga_accelerator.120.d.tooltip"
# 		remove_modifier = false_vacuum_fears
# 		add_modifier = {
# 			modifier = false_vacuum_study
# 			days = -1
# 		}
# 		hidden_effect = {
# 			every_owned_megastructure = {
# 				limit = { is_megastructure_type = particle_accelerator_1 }
# 				planet = {
# 					remove_planet_flag = megastructure
# 					giga_clear_has_mega_flag = { MEGA = prev }
# 					if = { limit = { has_planet_flag = giga_mega_event_occured_recently } remove_planet_flag = giga_mega_event_occured_recently }
# 					if = { limit = { has_planet_flag = giga_under_repair } remove_planet_flag = giga_under_repair }
# 				}
# 				owner = {
# 					subtract_variable = { which = giga_current_accelerator value = 1 }
# 					add_resource = { alloys = 3500 }
# 				}
# 				remove_megastructure = THIS
# 			}
# 		}
# 	}
# }

# country_event = {
# 	id = giga_accelerator.123
# 	title = "giga_accelerator.123.name"
# 	desc = "giga_accelerator.123.desc"

# 	is_triggered_only = yes

# 	picture = GFX_evt_burning_settlement
# 	show_sound = event_planetary_riot

# 	option = {
# 		name = "giga_accelerator.123.a"
# 		add_modifier = {
# 			modifier = false_vacuum_fears
# 			days = 3600
# 		}
# 	}

# 	option = {
# 		name = "giga_accelerator.123.b"
# 		custom_tooltip = "giga_accelerator.120.d.tooltip"
# 		hidden_effect = {
# 			every_owned_megastructure = {
# 				limit = { is_megastructure_type = particle_accelerator_1 }
# 				planet = {
# 					giga_clear_has_mega_flag = { MEGA = prev }
# 					if = { limit = { has_planet_flag = giga_mega_event_occured_recently } remove_planet_flag = giga_mega_event_occured_recently }
# 					if = { limit = { has_planet_flag = giga_under_repair } remove_planet_flag = giga_under_repair }
# 				}
# 				owner = {
# 					subtract_variable = { which = giga_current_accelerator value = 1 }
# 					add_resource = { alloys = 3500 }
# 				}
# 				remove_megastructure = THIS
# 			}
# 		}
# 	}
# }

# #random overheating
# country_event = {
# 	id = giga_accelerator.110
# 	title = "giga_accelerator.110.name"
# 	desc = "giga_accelerator.110.desc"

# 	picture = GFX_evt_glitchy_matrix
# 	show_sound = event_sensor_ping

# 	location = event_target:giga_mega_event_system
# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.110.a"
# 		custom_tooltip = "giga_accelerator.110.a.tooltip"
# 		add_resource = {
# 			alloys = -3000
# 		}
# 		allow = {
# 			resource_stockpile_compare = {
# 				resource = alloys
# 				value >= 3000
# 			}
# 		}
# 		hidden_effect = {
# 			event_target:giga_mega_event_system = {
# 				random_system_megastructure = {
# 					limit = { has_megastructure_flag = giga_acc_under_repair }
# 					planet = {
# 						while = {
# 							limit = {
# 								check_variable = {
# 									which = acc_intensity
# 									value > 1
# 								}
# 							}
# 							subtract_variable = {
# 								which = acc_intensity
# 								value = 1
# 							}
# 							subtract_variable = {
# 								which = giga_failure_chance
# 								value = 5
# 							}
# 						}
# 						set_timed_planet_flag = {
# 							flag = giga_under_repair
# 							days = 180
# 						}
# 						planet_event = { id = giga_accelerator.111 days = 180 }
# 					}
# 				}
# 			}
# 		}
# 	}

# 	option = {
# 		name = "giga_accelerator.110.b"
# 		custom_tooltip = "giga_accelerator.110.b.tooltip"
# 		hidden_effect = {
# 			event_target:giga_mega_event_system = {
# 				random_system_megastructure = {
# 					limit = { has_megastructure_flag = giga_acc_under_repair }
# 					planet = {
# 						while = {
# 							limit = {
# 								check_variable = {
# 									which = acc_intensity
# 									value > 2
# 								}
# 							}
# 							subtract_variable = {
# 								which = acc_intensity
# 								value = 1
# 							}
# 							subtract_variable = {
# 								which = giga_failure_chance
# 								value = 5
# 							}
# 						}
# 						set_timed_planet_flag = {
# 							flag = giga_under_repair
# 							days = 360
# 						}
# 						random_list = {
# 							80 = {
# 								planet_event = { id = giga_accelerator.111 days = 200 random = 30 }
# 							}
# 							20 = {
# 								planet_event = { id = giga_accelerator.112 days = 360 }
# 							}
# 						}
# 					}
# 				}
# 			}
# 		}
# 	}

# 	option = {
# 		name = "giga_accelerator.110.c"
# 		custom_tooltip = "giga_accelerator.110.c.tooltip"
# 		hidden_effect = {
# 			event_target:giga_mega_event_system = {
# 				random_system_megastructure = {
# 					limit = { has_megastructure_flag = giga_acc_under_repair }
# 					planet = {
# 						random_list = {
# 							50 = {
# 								solar_system = {
# 									random_system_megastructure = {
# 										limit = { has_megastructure_flag = giga_acc_under_repair }
# 										remove_megastructure_flag = giga_acc_under_repair
# 									}
# 								}
# 							}
# 							50 = {
# 								planet_event = { id = giga_accelerator.112 days = 100 random = 30 }
# 							}
# 						}
# 					}
# 				}
# 			}
# 		}
# 	}
# }

# planet_event = {
# 	id = giga_accelerator.111
# 	hide_window = yes
# 	is_triggered_only = yes

# 	trigger = {
# 		has_planet_flag = giga_under_repair
# 	}

# 	immediate = {
# 		remove_planet_flag = giga_under_repair
# 		set_variable = {
# 			which = acc_intensity
# 			value = 2
# 		}
# 		solar_system = {
# 			space_owner = { country_event = { id = giga_accelerator.1111 } }
# 			save_global_event_target_as = giga_mega_event_system_name
# 			random_system_megastructure = {
# 				limit = { has_megastructure_flag = giga_acc_under_repair }
# 				remove_megastructure_flag = giga_acc_under_repair
# 			}
# 		}
# 	}
# }


# country_event = {
# 	id = giga_accelerator.1111
# 	title = "giga_accelerator.111.name"
# 	desc = "giga_accelerator.111.desc"
# 	location = event_target:giga_mega_event_system_name
# 	picture = GFX_evt_megastructure_construction
# 	show_sound = event_construction
# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.111.a"
# 	}
# }

# #it blows up :(
# planet_event = {
# 	id = giga_accelerator.112
# 	hide_window = yes
# 	is_triggered_only = yes

# 	trigger = {
# 		has_planet_flag = giga_mega_event_occured_recently
# 	}

# 	immediate = {
# 		remove_planet_flag = giga_mega_event_occured_recently
# 		solar_system = {
# 			space_owner = { country_event = { id = giga_accelerator.1121 } subtract_variable = { which = giga_current_accelerator value = 1 } }
# 			save_global_event_target_as = giga_mega_event_system_name
# 			random_system_megastructure = {
# 				limit = { has_megastructure_flag = giga_acc_under_repair }
# 				remove_megastructure_flag = giga_acc_under_repair
# 				remove_megastructure = THIS
# 			}
# 			spawn_megastructure = {
# 				type = particle_accelerator_ruined
# 				owner = space_owner
# 				coords_from = ROOT
# 			}
# 		}
# 	}
# }

# country_event = {
# 	id = giga_accelerator.1121
# 	title = "giga_accelerator.112.name"
# 	desc = "giga_accelerator.112.desc"
# 	location = event_target:giga_mega_event_system_name
# 	picture = GFX_evt_exploding_ship
# 	show_sound = event_ship_explosion
# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_accelerator.112.a"
# 		custom_tooltip = "giga_accelerator.112.a.tooltip"
# 	}
# }

# #mega ui
# country_event = {
# 	id = giga_accelerator.1000
# 	title = "giga_accelerator.1000.name"
# 	desc = "giga_accelerator.1000.desc"

# 	diplomatic = yes
# 	custom_gui = "giga_accelerator_gui"
# 	is_triggered_only = yes

# 	trigger = {
# 		NOT = { has_global_flag = managing_giga_megastructure }
# 	}

# 	option = {
# 		name = EXIT
# 		hidden_effect = {
# 			remove_global_flag = managing_giga_megastructure
# 		}
# 	}
# }

# country_event = { #Dismantle
# 	id = giga_accelerator.2000
# 	title = "giga_accelerator.2000.name"
# 	desc = "giga_accelerator.2000.desc"
# 	is_triggered_only = yes
# 	show_sound = event_construction
# 	picture = GFX_evt_megastructure_construction

# 	trigger = {
# 		NOT = { has_global_flag = giga_dismantling_megastructure }
# 	}

# 	immediate = {
# 		set_global_flag = giga_dismantling_megastructure
# 	}

# 	option = {
# 		name = "giga_flavor.2000.yes"
# 		custom_tooltip = "giga_accelerator.2000.tooltip"
# 		add_resource = {
# 			alloys = 3500
# 		}
# 		hidden_effect = {
# 			remove_global_flag = giga_dismantling_megastructure
# 			remove_global_flag = managing_giga_megastructure
# 			subtract_variable = { which = giga_current_accelerator value = 1 }
# 			event_target:giga_mega_manage_planet = {
# 				planet = {
# 					if = { limit = { has_planet_flag = giga_mega_event_occured_recently } remove_planet_flag = giga_mega_event_occured_recently }
# 					if = { limit = { has_planet_flag = giga_under_repair } remove_planet_flag = giga_under_repair }
# 				}
# 				solar_system = {
# 					random_system_megastructure = {
# 						limit = {
# 							planet = { is_same_value = event_target:giga_mega_manage_planet }
# 							OR = {
# 								is_megastructure_type = particle_accelerator_0
# 								is_megastructure_type = particle_accelerator_1
# 								is_megastructure_type = particle_accelerator_1_manage
# 							}
# 						}
# 						remove_megastructure = THIS
# 					}
# 				}
# 				planet = {
# 					giga_clear_has_mega_flag = yes
# 				}
# 			}
# 		}
# 	}

# 	option = { #NO
# 		name = "giga_flavor.2000.forgetit"
# 		hidden_effect = {
# 			remove_global_flag = giga_dismantling_megastructure
# 		}
# 	}
# }


#######DISCO BALL######
namespace = giga_disco
#random event generator
country_event = {
	id = giga_disco.100
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_megastructure = {
			limit = {
				is_megastructure_type = lunar_disco_ball_2
				planet = { NOT = { has_planet_flag = giga_mega_failure_occured_recently } }
			}
			#failures
			random_list = {
				100 = {
					modifier = { add = -5 planet = { check_variable = { which = giga_failure_chance value = 5 } } }
					modifier = { add = -10 planet = { check_variable = { which = giga_failure_chance value = 10 } } }
					modifier = { add = -15 planet = { check_variable = { which = giga_failure_chance value = 15 } } }
					modifier = { add = -20 planet = { check_variable = { which = giga_failure_chance value = 20 } } }
					modifier = { add = -25 planet = { check_variable = { which = giga_failure_chance value = 25 } } }
					modifier = { add = -30 planet = { check_variable = { which = giga_failure_chance value = 30 } } }
					modifier = { add = -35 planet = { check_variable = { which = giga_failure_chance value = 35 } } }
					modifier = { add = -40 planet = { check_variable = { which = giga_failure_chance value = 30 } } }
					modifier = { add = -45 planet = { check_variable = { which = giga_failure_chance value = 45 } } }
					modifier = { add = -50 planet = { check_variable = { which = giga_failure_chance value = 50 } } }
				}
				0 = {
					solar_system = { save_global_event_target_as = giga_mega_event_system }
					planet = {
						set_timed_planet_flag = {
							flag = giga_mega_failure_occured_recently
							days = 2700
						}
					}
					set_megastructure_flag = giga_disco_under_repair
					owner = { country_event = { id = giga_disco.110 days = 10 random = 5 } }
					modifier = { add = 5 planet = { check_variable = { which = giga_failure_chance value = 5 } } }
					modifier = { add = 10 planet = { check_variable = { which = giga_failure_chance value = 10 } } }
					modifier = { add = 15 planet = { check_variable = { which = giga_failure_chance value = 15 } } }
					modifier = { add = 20 planet = { check_variable = { which = giga_failure_chance value = 20 } } }
					modifier = { add = 25 planet = { check_variable = { which = giga_failure_chance value = 25 } } }
					modifier = { add = 30 planet = { check_variable = { which = giga_failure_chance value = 30 } } }
					modifier = { add = 35 planet = { check_variable = { which = giga_failure_chance value = 35 } } }
					modifier = { add = 40 planet = { check_variable = { which = giga_failure_chance value = 30 } } }
					modifier = { add = 45 planet = { check_variable = { which = giga_failure_chance value = 45 } } }
					modifier = { add = 50 planet = { check_variable = { which = giga_failure_chance value = 50 } } }
				}
			}
		}
		every_owned_megastructure = {
			limit = {
				is_megastructure_type = lunar_disco_ball_2
				planet = { NOT = { has_planet_flag = giga_mega_event_occured_recently } }
			}
			#random stuff
			random_list = {
				0 = { #pro-nighters
					planet = {
						set_timed_planet_flag = {
							flag = giga_mega_event_occured_recently
							days = 3600
						}
						solar_system = {
							random_system_planet = {
								limit = {
									has_modifier = disco_moon_nonight_modifier
									is_colony = yes
									owner = { NOT = { is_country_type = primitive } }
									OR = {
										any_moon = {
											check_variable = {
												which = giga_disco_moon_setting
												value = 3
											}
										}
										solar_system = {
											any_system_planet = {
												any_moon = { is_same_value = PREVPREVPREV }
												check_variable = {
													which = giga_disco_moon_setting
													value = 3
												}
											}
										}
									}
								}
								set_planet_flag = pronight_protests
								save_global_event_target_as = giga_pronight_protests_planet
							}
						}
					}
					owner = { country_event = { id = giga_disco.120 days = 180 random = 60 } }
					modifier = {
						add = 25
						planet = {
							OR = {
								any_moon = {
									is_colony = yes
									owner = { NOT = { is_country_type = primitive } }
									has_modifier = disco_moon_nonight_modifier
								}
								solar_system = {
									any_system_planet = {
										any_moon = { is_same_value = PREVPREVPREV }
										has_modifier = disco_moon_nonight_modifier
										is_colony = yes
										owner = { NOT = { is_country_type = primitive } }
									}
								}
							}
						}
					}
					modifier = {
						factor = 0
						owner = {
							is_gestalt = yes
						}
					}
					modifier = {
						factor = 1.5
						owner = {
							has_ethic = ethic_egalitarian
						}
					}
					modifier = {
						factor = 3
						owner = {
							has_ethic = ethic_fanatic_egalitarian
						}
					}
					modifier = {
						factor = 0.75
						owner = {
							has_ethic = ethic_authoritarian
						}
					}
					modifier = {
						factor = 0.5
						owner = {
							has_ethic = ethic_fanatic_authoritarian
						}
					}
				}
				200 = {}
			}
		}
	}
}

#random overheating
country_event = {
	id = giga_disco.110
	title = "giga_disco.110.name"
	desc = "giga_disco.110.desc"

	picture = GFX_evt_glitchy_matrix
	show_sound = event_sensor_ping

	location = event_target:giga_mega_event_system
	is_triggered_only = yes

	option = {
		name = "giga_disco.110.a"
		custom_tooltip = "giga_disco.110.a.tooltip"
		add_resource = {
			alloys = -1500
			rare_crystals = -1000
		}
		allow = {
			resource_stockpile_compare = {
				resource = alloys
				value >= 1500
			}
			resource_stockpile_compare = {
				resource = rare_crystals
				value >= 500
			}
		}
		hidden_effect = {
			event_target:giga_mega_event_system = {
				random_system_megastructure = {
					limit = { has_megastructure_flag = giga_disco_under_repair }
					planet = {
						save_global_event_target_as = giga_mega_manage_planet
						solar_system = {
							every_system_planet = {
								limit = { any_moon = { is_planet = event_target:giga_mega_manage_planet } }
								clear_disco_moon_modifiers = yes
								every_moon = { clear_disco_moon_modifiers = yes }
							}
						}
						clear_disco_moon_modifiers = yes
						set_variable = {
							which = giga_disco_moon_setting
							value = 4
						}
						set_variable = {
							which = giga_failure_chance
							value = 0
						}
						set_timed_planet_flag = {
							flag = giga_disco_under_repair
							days = 360
						}
						planet_event = { id = giga_disco.111 days = 360 }
					}
				}
			}
		}
	}

	option = {
		name = "giga_disco.110.b"
		custom_tooltip = "giga_disco.110.b.tooltip"
		hidden_effect = {
			event_target:giga_mega_event_system = {
				random_system_megastructure = {
					limit = { has_megastructure_flag = giga_disco_under_repair }
					planet = {
						random_list = {
							50 = {
								solar_system = {
									random_system_megastructure = {
										limit = { has_megastructure_flag = giga_disco_under_repair }
										remove_megastructure_flag = giga_disco_under_repair
									}
								}
							}
							50 = {
								planet_event = { id = giga_disco.112 days = 100 random = 30 }
							}
						}
					}
				}
			}
		}
	}
}

planet_event = {
	id = giga_disco.111
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_planet_flag = giga_disco_under_repair
	}

	immediate = {
		remove_planet_flag = giga_disco_under_repair
		planet = {
			add_modifier = {
				modifier = disco_moon_modifier
				days = -1
			}
			solar_system = {
				every_system_planet = {
					limit = { any_moon = { is_same_value = PREVPREVPREV } }
					add_modifier = {
						modifier = disco_moon_modifier
						days = -1
					}
					every_moon = {
						limit = { NOT = { is_planet_class = pc_disco_moon } }
						add_modifier = {
							modifier = disco_moon_modifier
							days = -1
						}
					}
				}
			}
		}
		set_variable = {
			which = giga_disco_moon_setting
			value = 0
		}
		set_variable = {
			which = giga_failure_chance
			value = 5
		}
		solar_system = {
			space_owner = { country_event = { id = giga_disco.1111 } }
			save_global_event_target_as = giga_mega_event_system_name
			random_system_megastructure = {
				limit = { has_megastructure_flag = giga_disco_under_repair }
				remove_megastructure_flag = giga_disco_under_repair
			}
		}
	}
}


country_event = {
	id = giga_disco.1111
	title = "giga_disco.111.name"
	desc = "giga_disco.111.desc"
	location = event_target:giga_mega_event_system_name
	picture = GFX_evt_megastructure_construction
	show_sound = event_construction
	is_triggered_only = yes

	option = {
		name = "giga_disco.111.a"
	}
}

#it blows up :(
planet_event = {
	id = giga_disco.112
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_planet_flag = giga_mega_event_occured_recently
	}

	immediate = {
		remove_planet_flag = giga_mega_event_occured_recently
		solar_system = {
			space_owner = { country_event = { id = giga_disco.1121 } subtract_variable = { which = giga_current_disco_moon value = 1 } }
			save_global_event_target_as = giga_mega_event_system_name
			random_system_megastructure = {
				limit = { has_megastructure_flag = giga_disco_under_repair }
				remove_megastructure_flag = giga_disco_under_repair
				remove_megastructure = THIS
				planet = {
					clear_disco_moon_modifiers = yes
					every_moon = {
						limit = { NOT = { is_planet_class = pc_disco_moon } }
						clear_disco_moon_modifiers = yes
					}
					remove_planet_flag = megastructure
					remove_planet_flag = giga_planet_mega
					if = { limit = { has_planet_flag = giga_mega_event_occured_recently } remove_planet_flag = giga_mega_event_occured_recently }
					if = { limit = { has_planet_flag = giga_disco_under_repair } remove_planet_flag = giga_under_repair }
					change_pc = pc_molten
				}
			}
		}
	}
}

country_event = {
	id = giga_disco.1121
	title = "giga_disco.112.name"
	desc = "giga_disco.112.desc"
	location = event_target:giga_mega_event_system_name
	picture = GFX_evt_exploding_ship
	show_sound = event_ship_explosion
	is_triggered_only = yes

	option = {
		name = "giga_disco.112.a"
		custom_tooltip = "giga_disco.112.a.tooltip"
	}
}


#pronighters want the night back
country_event = {
	id = giga_disco.120
	title = "giga_disco.120.name"
	desc = "giga_disco.120.desc"
	location = event_target:giga_pronight_protests_planet
	picture = GFX_evt_civil_action
	show_sound = event_planetary_riot
	is_triggered_only = yes

	option = {
		name = "giga_disco.120.a"
		event_target:giga_pronight_protests_planet = {
			add_modifier = {
				modifier = pronight_protests
				days = 1800
			}
		}
	}

	option = {
		name = "giga_disco.120.b"
		custom_tooltip = "giga_disco.120.b.tooltip"
		hidden_effect = {
			event_target:giga_pronight_protests_planet = {
				clear_disco_moon_modifiers = yes
				every_moon = {
					limit = { NOT = { is_planet_class = pc_disco_moon } }
					clear_disco_moon_modifiers = yes
					add_modifier = {
						modifier = disco_moon_modifier
						days = -1
					}
				}
				add_modifier = {
					modifier = disco_moon_modifier
					days = -1
				}
				every_moon = {
					limit = {
						is_planet_class = pc_disco_moon
						check_variable = {
							which = giga_disco_moon_setting
							value = 3
						}
					}
					set_variable = {
						which = giga_disco_moon_setting
						value = 0
					}
					subtract_variable = {
						which = giga_failure_chance
						value = 15
					}
					set_timed_planet_flag = {
						flag = cant_nonight_protocols
						days = 3600
					}
				}
				solar_system = {
					every_system_planet = {
						limit = {
							is_planet_class = pc_disco_moon
							check_variable = {
								which = giga_disco_moon_setting
								value = 3
							}
							any_moon = { is_same_value = event_target:giga_pronight_protests_planet }
						}
						set_variable = {
							which = giga_disco_moon_setting
							value = 0
						}
						subtract_variable = {
							which = giga_failure_chance
							value = 15
						}
						set_timed_planet_flag = {
							flag = cant_nonight_protocols
							days = 3600
						}
					}
				}
			}
		}
	}
}

#mega ui
country_event = {
	id = giga_disco.1000
	title = "giga_disco.1000.name"
	desc = "giga_disco.1000.desc"

	diplomatic = yes
	custom_gui = "giga_disco_gui"
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = managing_giga_megastructure }
	}

	option = {
		name = EXIT
		hidden_effect = {
			remove_global_flag = managing_giga_megastructure
		}
	}
}

country_event = { #Dismantle
	id = giga_disco.2000
	title = "giga_disco.2000.name"
	desc = "giga_disco.2000.desc"
	is_triggered_only = yes
	show_sound = event_construction
	picture = GFX_evt_megastructure_construction

	trigger = {
		NOT = { has_global_flag = giga_dismantling_megastructure }
	}

	immediate = {
		set_global_flag = giga_dismantling_megastructure
	}

	option = {
		name = "giga_disco.2000.yes"
		custom_tooltip = "giga_disco.2000.tooltip"
		add_resource = {
			alloys = 2000
			rare_crystals = 500
		}
		hidden_effect = {
			remove_global_flag = giga_dismantling_megastructure
			remove_global_flag = managing_giga_megastructure
			subtract_variable = { which = giga_current_disco_moon value = 1 }
			event_target:giga_mega_manage_planet = {
				planet = {
					if = { limit = { has_planet_flag = giga_mega_event_occured_recently } remove_planet_flag = giga_mega_event_occured_recently }
					if = { limit = { has_planet_flag = giga_disco_under_repair } remove_planet_flag = giga_under_repair }
					change_pc = pc_barren_cold
					clear_disco_moon_modifiers = yes
					every_moon = {
						limit = { NOT = { is_planet_class = pc_disco_moon } }
						clear_disco_moon_modifiers = yes
					}
				}
				solar_system = {
					random_system_megastructure = {
						limit = {
							planet = { is_same_value = event_target:giga_mega_manage_planet }
							OR = {
								is_megastructure_type = lunar_disco_ball_2
								is_megastructure_type = lunar_disco_ball_1
								is_megastructure_type = lunar_disco_ball_2_manage
							}
						}
						remove_megastructure = THIS
					}
				}
				planet = {
					giga_clear_has_mega_flag = yes
				}
			}
		}
	}

	option = { #NO
		name = "giga_flavor.2000.forgetit"
		hidden_effect = {
			remove_global_flag = giga_dismantling_megastructure
		}
	}
}