namespace = giga_fallen_empire
# At the start
country_event = {
	id = giga_fallen_empire.1000
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	immediate = {
		every_country = {
			limit = {
				is_country_type = fallen_empire
			}
			set_variable = {
				which = giga_fe_repeatable_count
				value = 2
			}
			#Give FE repeatables
			country_event = { id = giga_fallen_empire_repeatables.1 days = 15 }

			# Adjust FE buildings for supertensiles if enabled
			if = {
				limit = {
					has_global_flag = @giga_amb_flag
				}
				country_event = { id = giga_fallen_empire_misc.1047 days = 15 }
			}
		}
		if = { #Generic war moons for all FEs
			limit = { NOT = { has_global_flag = giga_fe_planetcrafts_0 } }
			if = {
				limit = { has_global_flag = giga_fe_planetcrafts_1 }
				every_country = {
					limit = { is_country_type = fallen_empire }
					change_variable = {
						which = giga_fe_repeatable_count
						value = 10
					}
					add_modifier = { modifier = giga_fe_ehof_sr_upkeep_help days = -1 }
				}
				event_target:global_event_country = {
					set_variable = {
						which = giga_fe_mooncraft_min_count
						value = 0
					}
					set_variable = {
						which = giga_fe_mooncraft_max_count
						value = 3
					}
					set_variable = {
						which = giga_fe_planetcraft_min_count
						value = 0
					}
					set_variable = {
						which = giga_fe_planetcraft_max_count
						value = 0
					}

					set_variable = {
						which = giga_ae_mooncraft_min_count
						value = 1
					}
					set_variable = {
						which = giga_ae_mooncraft_max_count
						value = 5
					}
					set_variable = {
						which = giga_ae_planetcraft_min_count
						value = 0
					}
					set_variable = {
						which = giga_ae_planetcraft_max_count
						value = 1
					}
				}
			}

			else_if = {
				limit = { has_global_flag = giga_fe_planetcrafts_2 }
				every_country = {
					limit = { is_country_type = fallen_empire }
					change_variable = {
						which = giga_fe_repeatable_count
						value = 30
					}
				}
				event_target:global_event_country = {
					set_variable = {
						which = giga_fe_mooncraft_min_count
						value = 2
					}
					set_variable = {
						which = giga_fe_mooncraft_max_count
						value = 5
					}
					set_variable = {
						which = giga_fe_planetcraft_min_count
						value = 0
					}
					set_variable = {
						which = giga_fe_planetcraft_max_count
						value = 1
					}

					set_variable = {
						which = giga_ae_mooncraft_min_count
						value = 2
					}
					set_variable = {
						which = giga_ae_mooncraft_max_count
						value = 8
					}
					set_variable = {
						which = giga_ae_planetcraft_min_count
						value = 1
					}
					set_variable = {
						which = giga_ae_planetcraft_max_count
						value = 2
					}
				}
			}

			else_if = {
				limit = { has_global_flag = giga_fe_planetcrafts_3 }
				every_country = {
					limit = { is_country_type = fallen_empire }
					change_variable = {
						which = giga_fe_repeatable_count
						value = 60
					}
				}
				event_target:global_event_country = {
					set_variable = {
						which = giga_fe_mooncraft_min_count
						value = 5
					}
					set_variable = {
						which = giga_fe_mooncraft_max_count
						value = 10
					}
					set_variable = {
						which = giga_fe_planetcraft_min_count
						value = 1
					}
					set_variable = {
						which = giga_fe_planetcraft_max_count
						value = 3
					}

					set_variable = {
						which = giga_ae_mooncraft_min_count
						value = 6
					}
					set_variable = {
						which = giga_ae_mooncraft_max_count
						value = 12
					}
					set_variable = {
						which = giga_ae_planetcraft_min_count
						value = 2
					}
					set_variable = {
						which = giga_ae_planetcraft_max_count
						value = 3
					}
				}
			}

			else_if = {
				limit = { has_global_flag = giga_fe_planetcrafts_4 }
				every_country = {
					limit = { is_country_type = fallen_empire }
					change_variable = {
						which = giga_fe_repeatable_count
						value = 100
					}
				}
				event_target:global_event_country = {
					set_variable = {
						which = giga_fe_mooncraft_min_count
						value = 10
					}
					set_variable = {
						which = giga_fe_mooncraft_max_count
						value = 20
					}
					set_variable = {
						which = giga_fe_planetcraft_min_count
						value = 3
					}
					set_variable = {
						which = giga_fe_planetcraft_max_count
						value = 6
					}

					set_variable = {
						which = giga_ae_mooncraft_min_count
						value = 15
					}
					set_variable = {
						which = giga_ae_mooncraft_max_count
						value = 30
					}
					set_variable = {
						which = giga_ae_planetcraft_min_count
						value = 4
					}
					set_variable = {
						which = giga_ae_planetcraft_max_count
						value = 8
					}
				}
			}
			country_event = { id = giga_fallen_empire_moons.1000 days = 2 }
		}
		if = { #megas
			limit = { NOT = { has_global_flag = giga_fe_megas_disabled } }
			country_event = { id = giga_fallen_empire_megas.1000 days = 2 }
		}
		#The Pouchkinn FE (why)
		if = {
			limit = {
				NOT = { has_global_flag = meopa_spawned_as_fe }
				any_country = {
					is_country_type = fallen_empire
					has_ethic = ethic_fanatic_materialist
				}
				NOR = {
					has_global_flag = giga_fe_pouchkinn_disabled
					has_global_flag = giga_gatzo_disabled
					has_global_flag = katzenartig_always
					has_global_flag = katzenartig_deathwish
					has_global_flag = katzenartig_stellarite
					has_global_flag = katzenartig_improbable
					has_global_flag = giga_tyaur_guaranteed
					has_global_flag = matrioshka_brain_disabled
					has_global_flag = asteroid_artillery_disabled
					has_global_flag = planetary_computer_disabled
				}
				host_has_dlc = Nemesis
				NOT = { any_country = { has_origin = origin_scion } }
			}
			random_list = {
				30 = {
					set_global_flag = meopa_spawned_as_fe
					random_country = {
						limit = {
							is_country_type = fallen_empire
							has_ethic = ethic_fanatic_materialist
						}
						save_global_event_target_as = giga_meopa_fe
					}
					modifier = {
						add = 10
						has_global_flag = katzenartig_disabled
					}
					modifier = {
						add = 10
						has_global_flag = katzenartig_never
					}
				}
				70 = { #CHANGE TO 70
					modifier = {
						add = -10
						has_global_flag = katzenartig_disabled
					}
					modifier = {
						add = -10
						has_global_flag = katzenartig_never
					}
				}
			}
		}
		#The Meopa FE (comical!)
		if = {
			limit = {
				NOT = { has_global_flag = meopa_spawned_as_fe }
				any_country = {
					is_country_type = fallen_empire
					OR = {
						has_ethic = ethic_fanatic_xenophile
						has_ethic = ethic_fanatic_xenophobe
					}
				}
				NOR = {
					has_global_flag = katzenartig_always
					has_global_flag = katzenartig_deathwish
					has_global_flag = katzenartig_stellarite
					has_global_flag = katzenartig_improbable
				}
				NOT = { has_global_flag = giga_gatzo_disabled }
				NOT = { any_country = { has_origin = origin_scion } }
			}
			random_list = {
				25 = {
					set_global_flag = meopa_spawned_as_fe
					random_country = {
						limit = {
							is_country_type = fallen_empire
							OR = {
								has_ethic = ethic_fanatic_xenophile
								has_ethic = ethic_fanatic_xenophobe
							}
						}
						save_global_event_target_as = giga_meopa_fe
					}
					modifier = {
						add = 20
						has_global_flag = katzenartig_disabled
					}
					modifier = {
						add = 40
						has_global_flag = katzenartig_never
					}
				}
				75 = {
					modifier = {
						add = -20
						has_global_flag = katzenartig_disabled
					}
					modifier = {
						add = -40
						has_global_flag = katzenartig_never
					}
				}
			}
		}
		if = {
			limit = { has_global_flag = meopa_spawned_as_fe }
			event_target:giga_meopa_fe = {
				if = { #Good Gatzo :)
					limit = { has_ethic = ethic_fanatic_xenophile }
					set_global_flag = nice_gatzo_fe
					country_event = { id = giga_fallen_empire_misc.1000 days = 1 }
				}
				if = { #Evil Meopa
					limit = { has_ethic = ethic_fanatic_xenophobe }
					set_global_flag = evil_gatzo_fe
					country_event = { id = giga_fallen_empire_misc.1005 days = 1 }
				}
				if = { #Pouchkinn
					limit = { has_ethic = ethic_fanatic_materialist }
					set_global_flag = pouchkinn_gatzo_fe
					country_event = { id = giga_fallen_empire_misc.1020 days = 1 }
				}
				capital_scope = {
					spawn_system = { 	
						min_distance = 10
						max_distance = 15
						initializer = giga_paluush_initializer
						hyperlane = yes
						is_discovered = yes
					}
				}
				last_created_system = {
					# Add extra hyperlane
					random_list = {
						1 = { while = { count = 1 giga_generate_hyperlane = yes } }
						1 = { while = { count = 2 giga_generate_hyperlane = yes } }
					}
				}
			}
		} 
		set_spawn_system_batch = begin
		if = {
			limit = {
				NOT = { any_system = { has_star_flag = Paluush_system } }
				NOT = { has_global_flag = giga_gatzo_disabled }
				NOT = { has_global_flag = giga_gatzo_feonly } #Since this is gonna be after it being chosen by an FE don't do it 
			}
			random_system = {
				limit = {
					NOR = {
						is_fe_cluster = yes 
						any_neighbor_system = {
							is_fe_cluster = yes
						}
					}
					hyperlane_eligible = yes #Changed to the blanket hyperlane eligible for easier maintenance, slightly more restricive than before.
				}
				spawn_system = { initializer = "giga_paluush_initializer" }
			}
			last_created_system = {
				# Add extra hyperlane
				random_list = {
					1 = { while = { count = 1 giga_generate_hyperlane = yes } }
					1 = { while = { count = 2 giga_generate_hyperlane = yes } }
				}
			}
		}
			

		#Remove Paluushia if disabled
		if = {
			limit = {
				has_global_flag = giga_gatzo_nopaluushia
				any_system = { has_star_flag = giga_system_six }
			}
			random_system = {
				limit = { has_star_flag = giga_system_six }
				random_system_planet = {
					limit = { has_planet_flag = paluushia }
					change_pc = pc_shrouded
					remove_planet_flag = paluushia
					remove_modifier = "paluush_shield"
					every_owned_pop = { kill_pop = yes }
					set_planet_flag = shrouded_paluushia
				}
			}
		}
		set_spawn_system_batch = end
		every_country = {
			limit = {
				is_country_type = fallen_empire
				NOT = { is_same_empire = event_target:giga_meopa_fe }
			}
			capital_scope = {
				set_planet_flag = cant_target_this_planet #NDB immunity
				create_ambient_object = { #funny shield system effect
					type = "giga_fe_shield"
					location = star
					use_3d_location = yes
					entity_offset = { min = 0 max = 0 }
					entity_offset_angle = { min = 0 max = 0 }
					entity_offset_height = { min = -15 max = -15 } #places lower than the star so that you can more easily actually get to the tooltip
					scale = 1
				}
			}
		}
	}
}

# #Force scaling for FEs
# country_event = {
# 	id = giga_fallen_empire.1001
# 	hide_window = yes
# 	is_triggered_only = yes

# 	immediate = {
# 		country_event = { id = giga_mega.7007 days = 5 } # this doesn't exist? look- TTFTCUTS
# 		#country_event = { id = giga_fallen_empire.1001 days = 60 } # break existing loops
# 	}
# }

#Rebuild megas & activate moons when awaken
event = {
	id = giga_fallen_empire.1010
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		any_country = {
			is_country_type = awakened_fallen_empire
			NOT = { has_country_flag = giga_fe_megas_awakened }
		}
	}

	immediate = {
		every_country = {
			limit = {
				is_country_type = awakened_fallen_empire
				NOT = { has_country_flag = giga_fe_megas_awakened }
			}
			set_country_flag = giga_fe_megas_awakened
			if = { #Rebuild megas
				limit = { NOT = { has_global_flag = giga_fe_megas_disabled } }
				country_event = { id = giga_fallen_empire.1011 }
			}
			if = { #Awaken moons
				limit = { NOT = { has_global_flag = giga_fe_planetcrafts_0 } }
				country_event = { id = giga_fallen_empire_moons.002 }
			}
		}
	}
}

country_event = {
	id = giga_fallen_empire.1011
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = awakened_fallen_empire
	}

	immediate = {
		every_owned_megastructure = {
			limit = { is_megastructure_type = dyson_sphere_ruined_a_star }
			upgrade_megastructure_to = dyson_sphere_restored_a_star
		}
		every_owned_megastructure = {
			limit = { is_megastructure_type = dyson_sphere_ruined_k_star }
			upgrade_megastructure_to = dyson_sphere_restored_k_star
		}
		every_owned_megastructure = {
			limit = { is_megastructure_type = neutronium_gigaforge_ruined }
			upgrade_megastructure_to = neutronium_gigaforge_restored
		}
		# every_owned_megastructure = {
		# 	limit = { is_megastructure_type = particle_accelerator_ruined }
		# 	upgrade_megastructure_to = particle_accelerator_restored
		# }
		every_owned_megastructure = {
			limit = { is_megastructure_type = macro_test_site_ruined }
			upgrade_megastructure_to = macro_test_site_restored
		}
		every_owned_megastructure = {
			limit = { is_megastructure_type = spy_orb_4 }
			upgrade_megastructure_to = spy_orb_restored
		}
		every_owned_megastructure = {
			limit = { is_megastructure_type = interstellar_assembly_ruined }
			upgrade_megastructure_to = interstellar_assembly_restored
		}
		every_owned_megastructure = {
			limit = { is_megastructure_type = war_moon_debris_cold_barren }
			upgrade_megastructure_to = war_moon_restored_cold_barren
		}
		every_owned_megastructure = {
			limit = { is_megastructure_type = war_planet_debris }
			upgrade_megastructure_to = war_planet_restored
		}
		every_owned_megastructure = {
			limit = { is_megastructure_type = yggdrasil_orchid_ruined }
			upgrade_megastructure_to = yggdrasil_orchid_restored
		}
		every_owned_megastructure = {
			limit = { is_megastructure_type = think_tank_ruined }
			upgrade_megastructure_to = think_tank_restored
		}
		every_owned_megastructure = {
			limit = { is_megastructure_type = ring_world_ruined }
			upgrade_megastructure_to = ring_world_restored
		}
		every_owned_megastructure = {
			limit = { is_megastructure_type = kugelblitz_ruined }
			upgrade_megastructure_to = kugelblitz_restored
		}
		every_owned_megastructure = {
			limit = { is_megastructure_type = matter_decompressor_ruined }
			upgrade_megastructure_to = matter_decompressor_restored
		}
		every_owned_megastructure = {
			limit = { is_megastructure_type = strategic_coordination_center_ruined }
			upgrade_megastructure_to = strategic_coordination_center_restored
		}
	}
}

namespace = giga_fallen_empire_megas
# GAME START: Give the FEs their megas
# Misc: 1000+
# Spi: 2000+
# Phile: 3000+
# Phobe: 4000+
# Mat: 5000+
# Robot: 6000+

country_event = {
	id = giga_fallen_empire_megas.1000
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_global_flag = giga_fe_megas_spawned }
	}
	
	immediate = {
		set_global_flag = giga_fe_megas_spawned
		set_update_modifiers_batch = begin
		if = { #Spiritualist
			limit = {
				any_country = {
					is_country_type = fallen_empire
					has_ethic = ethic_fanatic_spiritualist
				}
				always = no
			}
			every_country = {
				limit = {
					is_country_type = fallen_empire
					has_ethic = ethic_fanatic_spiritualist
				}
				random_list = {
					50 = { #Give them Chosen One (Cool and good)
						leader = {
							add_trait = leader_trait_chosen
							remove_trait = leader_trait_psionic
						}
					}
					50 = { #Give them the Siphon
						modifier = {
							factor = 0
							has_global_flag = siphon_disabled
						}
						random_system_within_border = {
							limit = {
								NOT = { any_system_planet = { habitable_planet = yes } }
								NOT = { is_star_class = sc_black_hole }
							}
							random_system_planet = {
								limit = { is_star = yes }
								giga_create_fallen_empire_fleet = yes
								solar_system = {
									spawn_megastructure = {
										type = psychic_hypersiphon_2
										planet = PREV
										owner = PREVPREVPREV
									}
								}
							}
						}
					}
				}
			}
		}
		if = { #Xenophile
			limit = {
				any_country = {
					is_country_type = fallen_empire
					has_ethic = ethic_fanatic_xenophile
				}
			}
			every_country = {
				limit = {
					is_country_type = fallen_empire
					has_ethic = ethic_fanatic_xenophile
				}
				random_list = {
					50 = { #Interstellar Assembly
						country_event = { id = giga_fallen_empire_megas.3003 }
						modifier = {
							factor = 0
							has_global_flag = vanilla_interstellar_disabled
						}
					}
					50 = {}
				}
				random_list = {
					50 = { #Sentry Array
						country_event = { id = giga_fallen_empire_megas.3001 }
						modifier = {
							factor = 0
							has_global_flag = vanilla_array_disabled
						}
					}
					50 = {
						modifier = { #Humongous Brain
							factor = 0
							NOT = { any_planet_within_border = { has_planet_flag = fe_the_preserve } }
						}
						modifier = {
							factor = 0
							has_country_flag = giga_meopa_fe
						}
						modifier = {
							factor = 0
							has_global_flag = meopa_spawned_as_fe
						}
						modifier = {
							factor = 0
							has_global_flag = matrioshka_brain_disabled
						}
						modifier = {
							factor = 0
							has_global_flag = orchid_disabled
						}
						country_event = { id = giga_fallen_empire_megas.3002 }
					}
				}
			}
		}
		if = { #Xenophobe
			limit = { 
				any_country = {
					is_country_type = fallen_empire
					has_ethic = ethic_fanatic_xenophobe
				}
			}
			every_country = {
				limit = {
					is_country_type = fallen_empire
					has_ethic = ethic_fanatic_xenophobe
				}
				random_list = {
					70 = { #Dyson Sphere
						country_event = { id = giga_fallen_empire_megas.4001 }
						modifier = {
							factor = 0
							has_global_flag = vanilla_dyson_disabled
						}
					}
					30 = { #The Ultimate Deterrent: Planetcrafts
						modifier = {
							factor = 0
							has_global_flag = giga_fe_planetcrafts_0
						}
						country_event = { id = giga_fallen_empire_megas.4002 }
					}
				}
			}
		}
		if = { #Materialist
			limit = {
				any_country = {
					is_country_type = fallen_empire
					has_ethic = ethic_fanatic_materialist
				}
			}
			every_country = {
				limit = {
					is_country_type = fallen_empire
					has_ethic = ethic_fanatic_materialist
				}
				random_list = {
					0 = { #Nothing (for Pouchkinn)
						modifier = {
							add = 50
							has_global_flag = pouchkinn_gatzo_fe
						}
					}
					50 = { #Science Nexus
						country_event = { id = giga_fallen_empire_megas.5001 }
						modifier = {
							factor = 0
							has_global_flag = vanilla_nexus_disabled
						}
						modifier = {
							factor = 0
							has_global_flag = pouchkinn_gatzo_fe
						}
					}
					50 = { #The Old Ringworlds (Why did Paradox remove those?? They were amazing! I'm adding them back lol)
						create_species = {
							name = "Synthetic"
							class = "ROBOT"
							portrait = random
							namelist = "AI"
							traits = {
								trait = "trait_mechanical"
								trait = "trait_robot_domestic_protocols"
								trait = "trait_robot_luxurious"
							}
							effect = {
								save_global_event_target_as = materialist_fe_synths
							}
						}
						set_policy = { #So that they don't kill off their robots
							policy = appropriation
							option = appropriation_not_allowed
							cooldown = no
						}
						country_event = { id = giga_fallen_empire_megas.5002 }
						modifier = {
							factor = 0
							has_global_flag = vanilla_ringworld_disabled
						}
						modifier = {
							factor = 0
							has_global_flag = pouchkinn_gatzo_fe
						}
					}
					5000 = {
						modifier = {
							factor = 0
							has_global_flag = pouchkinn_gatzo_fe
						}
						modifier = {
							factor = 0
							has_global_flag = giga_fe_gamers_disabled
						}
						modifier = {
							factor = 0
							has_global_flag = matrioshka_brain_disabled
						}
						modifier = {
							factor = 0
							has_global_flag = orchid_disabled
						}
						country_event = { id = giga_fallen_empire_megas.5003 }
					}
				}
			}
		}

		if = { #Generic Megas: Yggdrasil, Dyson, Kugelblitz, Decompressor, Strategic
			limit = {
				any_country = {
					is_country_type = fallen_empire
				}
			}
			every_country = {
				limit = { is_country_type = fallen_empire }
				random_list = { # Dyson
					1 = {
						country_event = { id = giga_fallen_empire_megas.1001 }
						modifier = {
							factor = 0
							has_global_flag = vanilla_dyson_disabled
						}
						modifier = {
							factor = 0
							has_country_flag = giga_pouchkinn_meopa_fe
						}
					}
					3 = {}
				}
				random_list = { # Yggdrasil
					1 = {
						country_event = { id = giga_fallen_empire_megas.1002 }
						modifier = {
							factor = 0
							has_global_flag = orchid_disabled
						}
					}
					3 = {
						modifier = {
							factor = 0
							has_country_flag = giga_meopa_fe
						}
					}
				}
				random_list = { # Kugel
					1 = {
						country_event = { id = giga_fallen_empire_megas.1003 }
						modifier = {
							factor = 0
							has_global_flag = kugel_disabled
						}
					}
					3 = {}
				}
				random_list = { # Decompressor
					1 = {
						country_event = { id = giga_fallen_empire_megas.1004 }
						modifier = {
							factor = 0
							has_global_flag = vanilla_matter_disabled
						}
					}
					3 = {}
				}
				random_list = { # Strategic
					1 = {
						country_event = { id = giga_fallen_empire_megas.1005 }
						modifier = {
							factor = 0
							has_global_flag = vanilla_strategic_disabled
						}
					}
					3 = {
						modifier = { #Katzens. Need I say more?
							factor = 0
							has_country_flag = giga_evil_meopa_fe
						}
					}
				}
			}
		}

		if = { #Generic Celestial Warships: Ruined Moons & Planets
			limit = {
				any_country = {
					is_country_type = fallen_empire
				}
			}
			every_country = {
				limit = { is_country_type = fallen_empire }
				random_list = { # Attack Moons
					1 = {
						country_event = { id = giga_fallen_empire_megas.1006 }
						modifier = {
							factor = 0
							has_global_flag = warmoon_disabled
						}
						modifier = {
							factor = 2
							has_country_flag = giga_evil_meopa_fe
						}
					}
					3 = {}
				}
				random_list = { # Planetcraft
					1 = {
						country_event = { id = giga_fallen_empire_megas.1007 }
						modifier = {
							factor = 0
							has_global_flag = warplanet_disabled
						}
						modifier = {
							factor = 2
							has_country_flag = giga_evil_meopa_fe
						}
					}
					3 = {}
				}
			}
		}

		if = { #Asteroid Artillery and Orbital Arcologies 
			limit = {
				any_country = {
					is_country_type = fallen_empire
				}
			}
			every_country = {
				limit = { is_country_type = fallen_empire }
				random_list = { # Turn all home system Asteroids into Asteroid Artilleries
					0 = {
						country_event = { id = giga_fallen_empire_megas.1008 days = 1 }
						modifier = {
							add = 2
							OR = {
								capital_scope = { solar_system = { any_system_planet = { is_planet_class = pc_asteroid } } }
								capital_scope = { solar_system = { any_system_planet = { is_planet_class = pc_ice_asteroid } } }
							}
						}
						modifier = {
							factor = 0
							has_global_flag = asteroid_artillery_disabled
						}
					}
					2 = {
						modifier = { # Meopa loves his big guns
							add = -2
							OR = {
								NOT = { has_global_flag = asteroid_artillery_disabled }
								has_country_flag = giga_evil_meopa_fe
								has_country_flag = giga_pouchkinn_meopa_fe
							}
						}
					}
				}
				# random_list = { # Give the capital an Orbital Arcology
				# 	2 = {
				# 		country_event = { id = giga_fallen_empire_megas.1009 days = 1 }
				# 		modifier = {
				# 			factor = 0
				# 			capital_scope = { is_artificial = yes }
				# 		}
				# 		modifier = {
				# 			factor = 0
				# 			has_global_flag = orbital_arcologies_disabled
				# 		}
				# 		modifier = {
				# 			factor = 0
				# 			has_country_flag = giga_pouchkinn_meopa_fe
				# 		}
				# 	}
				# 	2 = {
				# 		modifier = { # Meopa loves his big guns
				# 			add = -2
				# 			NOT = { has_global_flag = orbital_arcologies_disabled }
				# 			OR = {
				# 				has_country_flag = giga_evil_meopa_fe
				# 				has_country_flag = giga_pouchkinn_meopa_fe
				# 			}
				# 		}
				# 	}
				# }
			}
		}

		if = { #Repeatables RNG
			limit = {
				any_country = {
					is_country_type = fallen_empire
				}
			}
			every_country = {
				limit = { is_country_type = fallen_empire }
				random_list = {
					2 = { #No more
						modifier = {
							factor = 100
							has_country_flag = giga_pouchkinn_meopa_fe
						}
					}
					1 = { #5 more
						change_variable = {
							which = giga_fe_repeatable_count
							value = 5
						}
					}
					1 = { #10 more
						change_variable = {
							which = giga_fe_repeatable_count
							value = 10
						}
					}
					1 = { #15 more
						change_variable = {
							which = giga_fe_repeatable_count
							value = 15
						}
					}
				}
			}
		}
		set_update_modifiers_batch = end
	}
}

# Misc Events
# Create a weak Dyson
country_event = {
	id = giga_fallen_empire_megas.1001
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
	}
	
	immediate = {
		random_system_within_border = {
			limit = {
				has_no_non_gate_megastructure = yes
				NOT = { any_system_planet = { is_colonizable = yes } }
			}
			create_fe_citadel = yes
			random_system_planet = {
				limit = { is_star = yes }
				change_pc = pc_k_star
				giga_create_fallen_empire_fleet = yes
				solar_system = {
					set_star_class = sc_k
					random_list = {
						4 = {
							spawn_megastructure = {
								type = dyson_sphere_ruined_k_star
								coords_from = PREV
								planet = prev
								owner = ROOT
							}
						}
						4 = {
							spawn_megastructure = {
								type = dyson_sphere_5_k_star
								coords_from = PREV
								planet = prev
								owner = ROOT
							}
							every_system_planet = {
								limit = { 
									# NOR = { TODO double check this
									# 	giga_is_gas_giant = yes
									# 	is_star = yes
									# 	is_astral_scar = yes
									# }
									OR = {
										giga_is_molten = yes
										gigas_is_toxic = yes
										gigas_is_barren = yes
									}
								}
								change_pc = pc_frozen
							}
						}
					}
				}
			}
		}
	}
}

# Create an Yggdrasil
country_event = {
	id = giga_fallen_empire_megas.1002
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
	}
	
	immediate = {
		random_planet_within_border = {
			limit = {
				giga_is_gas_giant = yes
				planet_has_no_megastructure = yes 
			}
			create_fe_citadel = yes 
			random_list = {
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = yggdrasil_orchid_ruined
							planet = PREV
							owner = ROOT
						}
					}
					modifier = {
						factor = 0
						ROOT = { has_country_flag = giga_meopa_fe }
					}
				}
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = yggdrasil_orchid_3
							planet = PREV
							owner = ROOT
						}
					}
				}
			}
		}
	}
}

# Create some Kugelblitzes
country_event = {
	id = giga_fallen_empire_megas.1003
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
	}
	
	immediate = {
		random_planet_within_border = {
			limit = { planet_has_no_megastructure = yes }
			random_list = {
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = kugelblitz_ruined
							planet = PREV
							owner = ROOT
						}
					}
				}
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = kugelblitz_3
							planet = PREV
							owner = ROOT
						}
					}
				}
			}
		}
		random_planet_within_border = {
			limit = { planet_has_no_megastructure = yes  }
			random_list = {
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = kugelblitz_ruined
							planet = PREV
							owner = ROOT
						}
					}
				}
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = kugelblitz_3
							planet = PREV
							owner = ROOT
						}
					}
				}
			}
		}
		random_planet_within_border = {
			limit = { planet_has_no_megastructure = yes }
			random_list = {
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = kugelblitz_ruined
							planet = PREV
							owner = ROOT
						}
					}
				}
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = kugelblitz_3
							planet = PREV
							owner = ROOT
						}
					}
				}
			}
		}
	}
}

# Create a Matter Decompressor
country_event = {
	id = giga_fallen_empire_megas.1004
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
		host_has_dlc = "Megacorp"
	}
	
	immediate = {
		random_system_within_border = {
			limit = {
				has_no_non_gate_megastructure = yes
				NOT = { any_system_planet = { habitable_planet = yes } }
				NOR = {
					is_binary = yes
					is_trinary = yes
					is_star_class = sc_giga_o_star
				}
			}
			create_fe_citadel = yes
			random_system_planet = {
				limit = { is_star = yes }
				change_pc = pc_black_hole
				giga_create_fallen_empire_fleet = yes
				solar_system = {
					set_star_class = sc_black_hole
					random_list = {
						4 = {
							spawn_megastructure = {
								type = matter_decompressor_ruined
								coords_from = PREV
								owner = ROOT
								planet = prev
							}
						}
						4 = {
							spawn_megastructure = {
								type = matter_decompressor_4
								coords_from = PREV
								planet = prev
								owner = ROOT
							}
						}
					}
				}
			}
		}
	}
}

# Create a Strategic Coordination Center
country_event = {
	id = giga_fallen_empire_megas.1005
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
	}
	
	immediate = {
		random_planet_within_border = {
			limit = {
				planet_has_no_megastructure = yes 
			}
			create_fe_citadel = yes 
			giga_create_fallen_empire_fleet = yes
			random_list = {
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = strategic_coordination_center_3
							planet = PREV
							owner = ROOT
						}
					}
				}
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = strategic_coordination_center_ruined
							planet = PREV
							owner = ROOT
						}
					}
				}
			}
		}
	}
}


# Create some Attack Moons
country_event = {
	id = giga_fallen_empire_megas.1006
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
	}
	
	immediate = {
		random_planet_within_border = {
			limit = { planet_has_no_megastructure = yes }
			random_list = {
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = war_moon_debris_cold_barren
							planet = PREV
							owner = ROOT
						}
					}
				}
				1 = {}
			}
		}
		random_planet_within_border = {
			limit = { planet_has_no_megastructure = yes  }
			random_list = {
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = war_moon_debris_cold_barren
							planet = PREV
							owner = ROOT
						}
					}
				}
				1 = {}
			}
		}
		random_planet_within_border = {
			limit = { planet_has_no_megastructure = yes }
			random_list = {
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = war_moon_debris_cold_barren
							planet = PREV
							owner = ROOT
						}
					}
				}
				1 = {}
			}
		}
	}
}

# Create some Planetcrafts
country_event = {
	id = giga_fallen_empire_megas.1007
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
	}
	
	immediate = {
		random_planet_within_border = {
			limit = { planet_has_no_megastructure = yes }
			random_list = {
				1 = {
					solar_system = {
						spawn_megastructure = {
							type = war_planet_debris
							planet = PREV
							owner = ROOT
						}
					}
				}
				1 = {}
			}
		}
	}
}

# Create Asteroid Artilleries
country_event = {
	id = giga_fallen_empire_megas.1008
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
	}
	
	immediate = {
		capital_scope = {
			solar_system = {
				every_system_planet = {
					limit = {
						NOR = {
							has_planet_flag = megastructure
							has_planet_flag = has_megastructure
						}
						OR = { is_planet_class = pc_asteroid is_planet_class = pc_ice_asteroid } 
					}
					set_planet_flag = has_fe_asteroid_artillery
					solar_system = {
						spawn_megastructure = {
							type = asteroid_artillery_0
							owner = ROOT
							planet = PREV
						}
						every_system_megastructure = {
							limit = { is_megastructure_type = asteroid_artillery_0 }
							upgrade_megastructure_to = asteroid_artillery_1
							finish_upgrade = yes
						}
					}
				}
			}
		}
		if = {
			limit = {
				any_planet_within_border = {
					OR = { is_planet_class = pc_asteroid is_planet_class = pc_ice_asteroid }
					NOT = { has_planet_flag = has_fe_asteroid_artillery }
				}
			}
			every_planet_within_border = {
				limit = {
					OR = { is_planet_class = pc_asteroid is_planet_class = pc_ice_asteroid }
					NOT = { has_planet_flag = has_fe_asteroid_artillery }
				}
				random_list = {
					1 = {
						solar_system = {
							spawn_megastructure = {
								type = asteroid_artillery_0
								owner = ROOT
								planet = PREV
							}
							every_system_megastructure = {
								limit = { is_megastructure_type = asteroid_artillery_0 }
								upgrade_megastructure_to = asteroid_artillery_1
								finish_upgrade = yes
							}
						}
					}
					1 = {
						modifier = {
							factor = 0
							ROOT = { has_country_flag = giga_pouchkinn_meopa_fe }
						}
					}
				}
			}
		}
	}
}

# Create Orbital Arcologies
country_event = {
	id = giga_fallen_empire_megas.1009
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
	}
	
	immediate = {
		# capital_scope = { #Give Capital an arcology
		# 	giga_spawn_max_orbital_arcology = yes
		# }
		every_owned_planet = { #Give other planets an arcology
			limit = {
				is_colony = yes
				NOT = { has_planet_flag = has_fe_orbital_arcology }
			}
			random_list = {
				1 = {
					# set_variable = {
					# 	which = orbital_arcology_size
					# 	value = trigger:planet_size
					# }
					# set_variable = {
					# 	which = orbital_arcology_modifier
					# 	value = orbital_arcology_size
					# }
					# divide_variable = {
					# 	which = orbital_arcology_modifier
					# 	value = 5
					# }
					# ceiling_variable = orbital_arcology_modifier
					# set_variable = {
					# 	which = orbital_arcology_modifier_districts
					# 	value = orbital_arcology_modifier
					# }
					# multiply_variable = {
					# 	which = orbital_arcology_modifier_districts
					# 	value = 2
					# }
					# set_planet_flag = has_fe_orbital_arcology
					# solar_system = {
					# 	spawn_megastructure = {
					# 		type = orbital_arcology_0
					# 		owner = ROOT
					# 		planet = PREV
					# 	}
					# 	every_system_megastructure = {
					# 		limit = { is_megastructure_type = orbital_arcology_0 }
					# 		upgrade_megastructure_to = orbital_arcology_1
					# 		finish_upgrade = yes
					# 		upgrade_megastructure_to = orbital_arcology_2
					# finish_upgrade = yes
					# 	}
					# }
					giga_spawn_max_orbital_arcology = yes

					modifier = {
						add = 3
						planet_size > 20
					}
				}
				1 = {
					# make sure it's always on the capital
					modifier = {
						is_capital = yes
						multiply = 0
					}
				}
			}
		}
	}
}

# Phile Events
# Observers get Sentry Array
country_event = {
	id = giga_fallen_empire_megas.3001
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
		has_ethic = ethic_fanatic_xenophile
	}
	
	immediate = {
		capital_scope = {
			solar_system = {
				random_system_planet = {
					giga_create_fallen_empire_fleet = yes
					limit = { is_star = yes }
					solar_system = {
						random_list = {
							9 = {
								spawn_megastructure = {
									type = spy_orb_ruined
									coords_from = PREV
									planet = prev
									owner = ROOT
								}
							}
							1 = {
								spawn_megastructure = {
									type = spy_orb_4
									coords_from = PREV
									planet = prev
									owner = ROOT
								}
							}
						}
					}
				}
			}
		}
	}
}

# Preservers get Big Brain
country_event = {
	id = giga_fallen_empire_megas.3002
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
		has_ethic = ethic_fanatic_xenophile
		NOT = { has_country_flag = giga_meopa_fe }
	}
	
	immediate = {
		random_owned_planet = { #Matrioshka Simulator
			limit = { has_planet_flag = fe_the_preserve }
			solar_system = {
				set_star_flag = ring_world_built_three
				set_asteroid_belt = {
					radius = 0
				}
				every_system_planet = {
					limit = { is_star = no }
					giga_remove_planet = yes
				}
				random_system_planet = {
					limit = { is_star = yes }
					giga_create_fallen_empire_fleet = yes
					giga_set_has_mega_flag = yes
					change_pc = pc_m_star
					solar_system = { #Make it a red Dwarf
						set_star_class = sc_m
						set_star_flag = ring_world_built_two
						spawn_megastructure = {
							type = matrioshka_brain_5_m_star
							coords_from = PREV
							owner = ROOT
						}
						spawn_megastructure = {
							type = ringworld_behemoth_0
							coords_from = PREV
							owner = ROOT
						}
						every_system_megastructure = {
							limit = { is_megastructure_type = ringworld_behemoth_0 }
							upgrade_megastructure_to = ringworld_behemoth_1
							finish_upgrade = yes
						}
						random_system_megastructure = {
							limit = { is_megastructure_type = ringworld_b_3x_segment }
							upgrade_megastructure_to = ringworld_behemoth_2
							finish_upgrade = yes
						}
						every_system_megastructure = {
							limit = { is_megastructure_type = ringworld_b_3x_segment }
							solar_system = {
								spawn_planet = {
									class = "pc_ringworld_tech_damaged"
									location = prev
									orbit_angle_offset = 30
									init_effect = {
										set_name = "NAME_Ring_Section"
										set_planet_entity = {
											entity = behemoth_ruined_tech_sector_entity
										}
									}
								}
								spawn_planet = {
									class = "pc_ringworld_seam_damaged"
									location = prev
									init_effect = {
										set_name = "NAME_Ring_Section"
										set_planet_entity = {
											entity = behemoth_ruined_seam_sector_entity
										}
									}
								}
								spawn_planet = {
									class = "pc_ringworld_habitable_damaged"
									location = prev
									orbit_angle_offset = -30
									init_effect = {
										set_name = "NAME_Ring_Section"
										set_planet_entity = {
											entity = behemoth_ruined_habitable_sector_entity
										}
									}
								}
							}
							remove_megastructure = this
						}
					
						random_system_planet = {
							limit = { is_colony = no is_planet_class = pc_ringworld_habitable }

							set_name = "NAME_The_Preserve"

							create_pop = {
								species = root.species
								count = 6
							}
							while = {
								count = 5
								create_species = { #No.
									name = random
									class = random_non_machine
									portrait = random
									traits = random
								}
								create_pop = {
									species = last_created_species
									count = 2
								}
							}
							set_planet_flag = fe_the_preserve
							set_planet_flag = fallen_empire_world
							set_owner = ROOT
						}
					}
				}
			}
		}
		
		capital_scope = { #Yggdrasil complex
			solar_system = {
				random_system_planet = {
					limit = { giga_is_gas_giant = yes }
					giga_create_fallen_empire_fleet = yes
					solar_system = {
						spawn_megastructure = {
							type = yggdrasil_orchid_3
							coords_from = PREV
							owner = ROOT
							planet = prev
						}
					}
					change_pc = pc_food_giant
				}
			}
		}
	}
}

# Xenophiles get Interstellar Assembly
country_event = {
	id = giga_fallen_empire_megas.3003
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
		has_ethic = ethic_fanatic_xenophile
	}
	
	immediate = {
		capital_scope = {
			solar_system = {
				random_system_planet = {
					giga_create_fallen_empire_fleet = yes
					limit = { is_star = yes }
					solar_system = {
						random_list = {
							1 = {
								spawn_megastructure = {
									type = interstellar_assembly_4
									coords_from = PREV
									owner = ROOT
									planet = prev
								}
							}
							9 = {
								spawn_megastructure = {
									type = interstellar_assembly_ruined
									coords_from = PREV
									planet = prev
									owner = ROOT
								}
							}
						}
					}
				}
			}
		}
	}
}

# Phobe Events
# A strong Dyson Sphere around an A-class + Neutron Star
country_event = { 
	id = giga_fallen_empire_megas.4001
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
		has_ethic = ethic_fanatic_xenophobe
	}
	
	immediate = {
		random_system_within_border = {
			limit = { 
				has_no_non_gate_megastructure = yes
				NOT = { any_system_planet = { is_colonizable = yes } } 
			}
			random_system_planet = {
				limit = { is_star = yes }
				change_pc = pc_a_star
				giga_create_fallen_empire_fleet = yes
				solar_system = {
					set_star_class = sc_a
					random_list = {
						9 = {
							spawn_megastructure = {
								type = dyson_sphere_ruined_a_star
								coords_from = PREV
								planet = prev
								owner = ROOT
							}
						}
						3 = {
							spawn_megastructure = {
								type = dyson_sphere_5_a_star
								coords_from = PREV
								planet = prev
								owner = ROOT
							}
						}
					}
				}
			}
		}
		save_event_target_as = xenophobic_fe
		if = {
			limit = {
				NOT = { has_global_flag = gigaforge_disabled }
			}
			capital_scope = { # Neutron with Gigaforge
				spawn_system = {
					min_distance = 10
					max_distance = 30
					initializer = giga_fe_mega_xenophobe_neutron_star
					hyperlane = yes
					is_discovered = yes
				}
			}
		}
	}
}

# 2 Planetcrafts
country_event = { 
	id = giga_fallen_empire_megas.4002
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
		has_ethic = ethic_fanatic_xenophobe
	}
	
	immediate = {
		while = {
			count = 2
			random_planet_within_border = {
				limit = { is_colony = no }
				giga_create_fallen_empire_fleet = yes
				root = {
					giga_planet_fe = yes
					last_created_fleet = { set_location = prevprev }
				}
				remove_planet = yes
			}
		}
	}
}

# Materialist Events

# Get either 2 Science Nexus or a Matrioskha Brain
country_event = {
	id = giga_fallen_empire_megas.5001
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_country_type = fallen_empire
		has_ethic = ethic_fanatic_materialist
	}
	
	immediate = {
		random_list = {
			50 = { #2 Nexuses (Nexi?)
				capital_scope = {
					solar_system = {
						random_system_planet = {
							limit = {
								is_star = no
								is_moon = no
								is_asteroid = no
								is_colony = no
								planet_has_no_megastructure = yes
							}
							solar_system = {
								spawn_megastructure = {
									type = think_tank_3
									planet = PREV
									owner = ROOT
								}
							}
						}
						random_system_planet = {
							limit = {
								is_star = no
								is_moon = no
								is_asteroid = no
								is_colony = no
								planet_has_no_megastructure = yes
							}
							solar_system = {
								spawn_megastructure = {
									type = think_tank_3
									planet = PREV
									owner = ROOT
								}
							}
						}
					}
				}
				#Give 20 repeatables
				change_variable = {
					which = giga_fe_repeatable_count
					value = 20
				}
			}
			50 = { #1 Matrioskha Brain
				modifier = {
					factor = 0
					NOT = { has_global_flag = gigastructures_enabled }
				}
				random_system_within_border = {
					create_fe_citadel = yes
					limit = {
						NOT = { any_system_planet = { is_colony = yes } }
						has_no_non_gate_megastructure = yes 
					}
					every_system_planet = {
						limit = { is_star = no }
						remove_planet = yes
					}
					set_asteroid_belt = {
						radius = 0
					}
					random_system_planet = {
						limit = { is_star = yes }
						change_pc = pc_k_star
						solar_system = {
							set_star_class = sc_m
							spawn_megastructure = {
								type = matrioshka_brain_5_m_star
								coords_from = PREV
								owner = ROOT
							}
						}
					}
				}
				
				#Give 40 repeatables
				change_variable = {
					which = giga_fe_repeatable_count
					value = 40
				}
			}
		}
		# Sprinkle in smaller megas
		while = {
			count = 2
			random_planet_within_border = {
				limit = { planet_has_no_megastructure = yes }
				random_list = {
					1 = {
						solar_system = {
							spawn_megastructure = {
								type = macro_test_site_ruined
								planet = PREV
								owner = ROOT
							}
						}
					}
					1 = {
						solar_system = {
							spawn_megastructure = {
								type = macro_test_site_1
								planet = PREV
								owner = ROOT
							}
						}
					}
					1 = {}
				}
			}
		}
		while = {
			count = 2
			random_planet_within_border = {
				limit = { planet_has_no_megastructure = yes }
				random_list = {
					1 = {
						solar_system = {
							spawn_megastructure = {
								type = orbital_artificial_eco_ruined
								planet = PREV
								owner = ROOT
							}
						}
					}
					1 = {
						solar_system = {
							spawn_megastructure = {
								type = orbital_artificial_eco_1
								planet = PREV
								owner = ROOT
							}
						}
					}
					1 = {}
				}
			}
		}
		# while = {
		# 	count = 2
		# 	random_planet_within_border = {
		# 		limit = { is_star = yes planet_has_no_megastructure = yes }
		# 		random_list = {
		# 			1 = {
		# 				solar_system = {
		# 					spawn_megastructure = {
		# 						type = particle_accelerator_ruined
		# 						planet = PREV
		# 						owner = ROOT
		# 					}
		# 				}
		# 			}
		# 			1 = {
		# 				solar_system = {
		# 					spawn_megastructure = {
		# 						type = particle_accelerator_1
		# 						planet = PREV
		# 						owner = ROOT
		# 					}
		# 				}
		# 			}
		# 			1 = {}
		# 		}
		# 	}
		# }
	}
}

# The Old Ringworlds
country_event = {
	id = giga_fallen_empire_megas.5002
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_country_flag = scion_master }
		is_country_type = fallen_empire
		has_ethic = ethic_fanatic_materialist
	}
	
	immediate = {
		capital_scope = {
			solar_system = {
				spawn_materialist_fe_beacon_of_infinity = yes
				random_neighbor_system = {
					set_star_flag = fe_beacon_of_stability
					spawn_materialist_fe_beacon_of_stability = yes
					create_fe_citadel = yes
				}
				random_neighbor_system = {
					limit = { NOT = { has_star_flag = fe_beacon_of_stability } }
					spawn_materialist_fe_beacon_of_perpetuity = yes
					create_fe_citadel = yes
				}
			}
		}
		every_owned_planet = {
			limit = {
				is_colony = yes
				NOT = { is_planet_class = pc_ringworld_habitable }
			}
			destroy_colony = yes
			change_pc = pc_barren
		}
	}
}

# Disinterested Gamers
country_event = { 
	id = giga_fallen_empire_megas.5003
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_country_flag = scion_master }
		is_country_type = fallen_empire
		has_ethic = ethic_fanatic_materialist
	}
	
	immediate = {
		capital_scope = { #Matrioshka Simulator
			solar_system = {
				every_system_planet = {
					limit = { is_star = no }
					giga_remove_planet = yes
				}
			}
			star = {
				change_pc = pc_g_star
				solar_system = {
					set_star_class = sc_g
					spawn_megastructure = {
						type = matrioshka_brain_5_g_star
						coords_from = PREV
						owner = ROOT
					}
					spawn_megastructure = {
						type = ringworld_behemoth_0
						coords_from = PREV
						owner = ROOT
					}
					every_system_megastructure = {
						limit = { is_megastructure_type = ringworld_behemoth_0 }
						upgrade_megastructure_to = ringworld_behemoth_1
						finish_upgrade = yes
					}
					every_system_megastructure = {
						limit = { is_megastructure_type = ringworld_b_3x_segment }
						upgrade_megastructure_to = ringworld_behemoth_2
						finish_upgrade = yes
					}
					set_asteroid_belt = {
						radius = 0
					}
					create_species = {
						name = "Synthetic"
						class = "ROBOT"
						namelist = "AI"
						portrait = random
						traits = {
							trait = "trait_mechanical"
							trait = "trait_robot_domestic_protocols"
							trait = "trait_robot_luxurious"
						}
						effect = {
							save_global_event_target_as = materialist_fe_synths
						}
					}
					
					#set_update_modifiers_batch = begin

					random_system_planet = {
						limit = { is_colony = no is_planet_class = pc_ringworld_habitable }
						giga_set_up_gamer_fe_vr = {
							name = "giga_gamer_vr_a"
							capital = yes
						}
					}
					random_system_planet = {
						limit = { is_colony = no is_planet_class = pc_ringworld_habitable }
						giga_set_up_gamer_fe_vr = {
							name = "giga_gamer_vr_b"
						}
					}
					random_system_planet = {
						limit = { is_colony = no is_planet_class = pc_ringworld_habitable }
						giga_set_up_gamer_fe_vr = {
							name = "giga_gamer_vr_c"
						}
					}
					random_system_planet = {
						limit = { is_colony = no is_planet_class = pc_ringworld_habitable }
						giga_set_up_gamer_fe_vr = {
							name = "giga_gamer_vr_d"
						}
					}
					
					#set_update_modifiers_batch = end
				}
			}
			solar_system = {
				random_neighbor_system = {
					spawn_materialist_fe_gaming_food_center = yes
					create_fe_citadel = yes
				}
			}
		}
		
		every_owned_planet = { #kill off other colonies
			limit = {
				not = {
					is_planet_class = pc_ringworld_habitable
				}
			}
			change_pc = pc_barren
			add_modifier = { modifier = terraforming_candidate days = -1 }
			remove_planet_flag = fallen_empire_world
		}
		set_policy = { #so that they don't kill off their robots.
			policy = appropriation
			option = appropriation_not_allowed
			cooldown = no
		}
		
		change_government = { #change government to change personality
			authority = auth_imperial
			civics = {
				civic = civic_lethargic_leadership
				civic = civic_empire_in_decline
				civic = civic_disinterested_gamers
			}
		}
		
		change_variable = {
			which = giga_fe_repeatable_count
			value = 10
		}
		
		set_name = {
			key = "NAME_Giga_FE_Gamers"
			variable_string = "[owner.GetSpeciesName]"
		}
		set_male_ruler_title = "Gamemaster"
		set_female_ruler_title = "Gamemaster"
		every_planet_within_border = {
			limit = { has_deposit = yes has_orbital_station = no }
			if = {
				limit = { is_colony = no has_deposit_for = shipclass_mining_station }
				create_mining_station = { owner = ROOT }
			}
			else_if = {
				limit = { is_colony = no has_deposit_for = shipclass_research_station }
				create_research_station = { owner = ROOT }
			}
		}
		add_modifier = { modifier = gamers_modifier days = -1 }
		add_modifier = { modifier = gamers_fallen_modifier days = -1 }
		every_owned_planet = {
			set_planet_flag = fallen_empire_world
			set_planet_flag = gamer_world
		}

		#Add orchid to feed
		random_planet_within_border = {
			limit = {
				giga_is_gas_giant = yes
				planet_has_no_megastructure = yes 
			}
			solar_system = {
				create_fe_citadel = yes
				spawn_megastructure = {
					type = yggdrasil_orchid_3
					planet = PREV
					owner = ROOT
				}
			}
		}
	}
}

# The Gamers Awaken
country_event = {
	id = giga_fallen_empire_megas.5010
	
	hide_window = yes
	
	mean_time_to_happen = {
		years = 50
		modifier = {
			factor = 0.5
			any_country = {
				is_country_type = default
				fleet_power > 300000
			}
		}
		modifier = {
			factor = 0.75
			any_country = {
				OR = {
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = ai_empire
				}
				any_system_within_border = {
					OR = {
						any_neighbor_system = {
							has_hyperlane_to = ROOT
						}
						any_neighbor_system = {
							any_neighbor_system = {
								has_hyperlane_to = ROOT
							}
						}
						any_neighbor_system = {
							any_neighbor_system = {
								any_neighbor_system = {
									has_hyperlane_to = ROOT
								}
							}
						}
					}
				}
			}
		}
		modifier = {
			factor = 0.75
			any_country = {
				OR = {
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = ai_empire
				}
				any_system_within_border = {
					OR = {
						any_neighbor_system = {
							has_hyperlane_to = ROOT
						}
						any_neighbor_system = {
							any_neighbor_system = {
								has_hyperlane_to = ROOT
							}
						}
					}
				}
			}
		}
		modifier = {
			factor = 0.75
			any_country = {
				OR = {
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = ai_empire
				}
				any_system_within_border = {
					any_neighbor_system = {
						has_hyperlane_to = ROOT
					}
				}
			}
		}
		modifier = {
			factor = 0.1
			any_country = {
				OR = {
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = ai_empire
				}
				any_system_within_border = {
					has_hyperlane_to = ROOT
				}
			}
		}
	}
	
	trigger = {
		NOT = { has_global_flag = sleepers_awake_happened }
		NOT = { has_global_flag = guardians_of_the_galaxy_happened }			
		end_game_years_passed >= 0
		has_ai_personality = fallen_empire_gamers
		is_at_war = no
		fleet_power > 40000
		OR = {
			any_country = {
				is_country_type = default
				fleet_power > 200000
			}
			any_country = {
				OR = {
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
					is_country_type = ai_empire
				}
				any_system_within_border = {
					OR = { #must be within 10 systems
						any_neighbor_system = {
							any_neighbor_system = {
								any_neighbor_system = {
									any_neighbor_system = {
										any_neighbor_system = {
											any_neighbor_system = {
												any_neighbor_system = {
													any_neighbor_system = {
														any_neighbor_system = {
															any_neighbor_system = {
																has_hyperlane_to = ROOT
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
						any_neighbor_system = {
							any_neighbor_system = {
								any_neighbor_system = {
									any_neighbor_system = {
										any_neighbor_system = {
											any_neighbor_system = {
												any_neighbor_system = {
													any_neighbor_system = {
														any_neighbor_system = {
															has_hyperlane_to = ROOT
														}
													}
												}
											}
										}
									}
								}
							}
						}
						any_neighbor_system = {
							any_neighbor_system = {
								any_neighbor_system = {
									any_neighbor_system = {
										any_neighbor_system = {
											any_neighbor_system = {
												any_neighbor_system = {
													any_neighbor_system = {
														has_hyperlane_to = ROOT
													}
												}
											}
										}
									}
								}
							}
						}
						any_neighbor_system = {
							any_neighbor_system = {
								any_neighbor_system = {
									any_neighbor_system = {
										any_neighbor_system = {
											any_neighbor_system = {
												any_neighbor_system = {
													has_hyperlane_to = ROOT
												}
											}
										}
									}
								}
							}
						}
						any_neighbor_system = {
							any_neighbor_system = {
								any_neighbor_system = {
									any_neighbor_system = {
										any_neighbor_system = {
											any_neighbor_system = {
												has_hyperlane_to = ROOT
											}
										}
									}
								}
							}
						}
						any_neighbor_system = {
							any_neighbor_system = {
								any_neighbor_system = {
									any_neighbor_system = {
										any_neighbor_system = {
											has_hyperlane_to = ROOT
										}
									}
								}
							}
						}
						any_neighbor_system = {
							any_neighbor_system = {
								any_neighbor_system = {
									any_neighbor_system = {
										has_hyperlane_to = ROOT
									}
								}
							}
						}
						any_neighbor_system = {
							any_neighbor_system = {
								any_neighbor_system = {
									has_hyperlane_to = ROOT
								}
							}
						}
						any_neighbor_system = {
							any_neighbor_system = {
								has_hyperlane_to = ROOT
							}
						}
						any_neighbor_system = {
							has_hyperlane_to = ROOT
						}
					}
				}
			}
		}
	}
	
	immediate = {
		set_global_flag = sleepers_awake_happened
		set_country_flag = sleepers_awake_first_sleeper
		set_country_type = awakened_fallen_empire
		add_resource = { minerals = 50000 }
		add_resource = { energy = 50000 }
		add_resource = { food = 5000 }
		add_resource = { influence = 1000 }
		country_event = { id = fallen_empires.13 }
		remove_modifier = gamers_fallen_modifier
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
				NOT = { has_communications = root }
			}
			
			establish_communications_no_message = root
			root = { save_event_target_as = contact_empire }
			country_event = { id = action.1 }
		}
		random_list = {
			50 = { #Lethargic Gamers
				modifier = {
					factor = 10
					NAND = { #no crisis within 5 systems
						any_country = {
							OR = {
								is_country_type = swarm
								is_country_type = extradimensional
								is_country_type = extradimensional_2
								is_country_type = extradimensional_3
								is_country_type = ai_empire
							}
						}
						any_system_within_border = {
							OR = {
								any_neighbor_system = {
									any_neighbor_system = {
										any_neighbor_system = {
											any_neighbor_system = {
												any_neighbor_system = {
													has_hyperlane_to = ROOT
												}
											}
										}
									}
								}
								any_neighbor_system = {
									any_neighbor_system = {
										any_neighbor_system = {
											any_neighbor_system = {
												has_hyperlane_to = ROOT
											}
										}
									}
								}
								any_neighbor_system = {
									any_neighbor_system = {
										any_neighbor_system = {
											has_hyperlane_to = ROOT
										}
									}
								}
								any_neighbor_system = {
									any_neighbor_system = {
										has_hyperlane_to = ROOT
									}
								}
								any_neighbor_system = {
									has_hyperlane_to = ROOT
								}
							}
						}
					}
				}
				modifier = {
					factor = 0
					any_country = {
						OR = {
							is_country_type = swarm
							is_country_type = extradimensional
							is_country_type = extradimensional_2
							is_country_type = extradimensional_3
							is_country_type = ai_empire
						}
						any_system_within_border = {
							has_hyperlane_to = ROOT
						}
					}
				}
				change_government = {
					civics = {
						civic = civic_revanchist_fervor
						civic = civic_ancient_caches_of_technology
						civic = civic_lethargic_gamers
					}
				}
			}
			50 = { #True Gamers
				modifier = {
					factor = 1.25
					any_country = {
						OR = {
							is_country_type = swarm
							is_country_type = extradimensional
							is_country_type = extradimensional_2
							is_country_type = extradimensional_3
							is_country_type = ai_empire
						}
						galaxy_percentage > 0.2
					}
				}
				modifier = {
					factor = 1.25
					any_country = {
						OR = {
							is_country_type = swarm
							is_country_type = extradimensional
							is_country_type = extradimensional_2
							is_country_type = extradimensional_3
							is_country_type = ai_empire
						}
						galaxy_percentage > 0.3
					}
				}
				modifier = {
					factor = 1.25
					any_country = {
						OR = {
							is_country_type = swarm
							is_country_type = extradimensional
							is_country_type = extradimensional_2
							is_country_type = extradimensional_3
							is_country_type = ai_empire
						}
						galaxy_percentage > 0.4
					}
				}
				change_government = {
					civics = {
						civic = civic_revanchist_fervor
						civic = civic_ancient_caches_of_technology
						civic = civic_experienced_gamers
					}
				}
			}
		}
	}
}

# If a Gamer world is taken, trigger awakening
country_event = {
	id = giga_fallen_empire_megas.5011
	hide_window = yes
	
	is_triggered_only = yes

	trigger = {
		has_ai_personality = fallen_empire_gamers
		any_country = {
			NOT = { has_ai_personality = fallen_empire_gamers }
			any_owned_planet = { has_planet_flag = gamer_world }
		}
	}
	
	immediate = {
		set_global_flag = sleepers_awake_happened
		set_country_flag = sleepers_awake_first_sleeper
		set_country_type = awakened_fallen_empire
		add_resource = { minerals = 50000 }
		add_resource = { energy = 50000 }
		add_resource = { food = 5000 }
		add_resource = { influence = 1000 }
		country_event = { id = fallen_empires.13 }
		remove_modifier = gamers_fallen_modifier
		save_global_event_target_as = giga_gamer_fe
		change_government = {
			civics = {
				civic = civic_revanchist_fervor
				civic = civic_ancient_caches_of_technology
				civic = civic_experienced_gamers
			}
		}
		every_country = {
			limit = { any_owned_planet = { has_planet_flag = gamer_world } }
			country_event = { id = giga_fallen_empire_megas.5012 }
			country_event = { id = fallen_empires_awakening.2 days = 2 }
		}
		every_country = {
			limit = {
				is_ai = no
				NOT = { any_owned_planet = { has_planet_flag = gamer_world } }
			}
			country_event = { id = fallen_empires_awakening.2 }
		}
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
				NOT = { has_communications = root }
			}
			
			establish_communications_no_message = root
			root = { save_event_target_as = contact_empire }
			country_event = { id = action.1 }
		}
	}
}

# Message about Gamers awakening if a world is taken
country_event = {
	id = giga_fallen_empire_megas.5012
	title = "giga_fallen_empire_megas.5012.name"
	desc = "giga_fallen_empire_megas.5012.desc"

	is_triggered_only = yes
	
	diplomatic = yes
	picture_event_data = {
		portrait = event_target:giga_gamer_fe
		planet_background = event_target:giga_gamer_fe
		graphical_culture = event_target:giga_gamer_fe
		city_level = event_target:giga_gamer_fe
		room = event_target:giga_gamer_fe.ruler
	}
	
	option = {
		name = "giga_fallen_empire_megas.5012.a"
	}
}

namespace = giga_fallen_empire_moons
country_event = {
	id = giga_fallen_empire_moons.1000
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random = {
			chance = 50
			every_galaxy_planet = {
				limit = {
					OR = {
						has_planet_flag = holy_world_1
						has_planet_flag = holy_world_2
						has_planet_flag = holy_world_3
						has_planet_flag = holy_world_4
					}
				}
				set_planet_flag = dormant_war_planet
			}
		}

		every_country = {
			limit = { is_country_type = fallen_empire }

			#Spawn Moons
			while = {
				count = event_target:global_event_country.giga_fe_mooncraft_min_count
				giga_moon_fe = yes giga_move_to_capital = yes
			}

			while = {
				count = event_target:global_event_country.giga_fe_mooncraft_max_count
				random_list = {
					2 = { giga_moon_fe = yes giga_move_to_capital = yes }
					1 = {}
				}
			}

			#Spawn Planets
			while = {
				count = event_target:global_event_country.giga_fe_planetcraft_min_count
				giga_planet_fe = yes giga_move_to_capital = yes
			}

			while = {
				count = event_target:global_event_country.giga_fe_planetcraft_max_count
				random_list = {
					2 = { giga_planet_fe = yes giga_move_to_capital = yes }
					1 = {}
				}
			}

			#For AEs
			#Designate Moons
			while = {
				count = event_target:global_event_country.giga_ae_mooncraft_min_count
				if = { 
					limit = { any_planet_within_border = { giga_can_be_war_moon = yes } }
					random_planet_within_border = {
						limit = { giga_can_be_war_moon = yes }
						set_planet_size = 6 set_planet_flag = dormant_war_moon
					} 
				}
			}

			while = {
				count = event_target:global_event_country.giga_ae_mooncraft_max_count
				if = { 
					limit = { any_planet_within_border = { giga_can_be_war_moon = yes } }
					random_list = {
						2 = { 
							random_planet_within_border = {
								limit = { giga_can_be_war_moon = yes }
								set_planet_size = 6 set_planet_flag = dormant_war_moon
							}
						}
						1 = {}
					}
				}
			}

			#Designate Planets
			while = {
				count = event_target:global_event_country.giga_ae_planetcraft_min_count
				if = { 
					limit = { any_planet_within_border = { giga_can_be_war_planet = yes } }
					random_planet_within_border = {
						limit = { giga_can_be_war_planet = yes }
						set_planet_size = 25 set_planet_flag = dormant_war_planet
					} 
				}
			}

			while = {
				count = event_target:global_event_country.giga_ae_planetcraft_max_count
				if = { 
					limit = { any_planet_within_border = { giga_can_be_war_planet = yes } }
					random_list = {
						2 = { 
							random_planet_within_border = {
								limit = { giga_can_be_war_planet = yes }
								set_planet_size = 25 set_planet_flag = dormant_war_planet
							}
						}
						1 = {}
					}
				}
			}
		}
	}
}

# On_Bi_Yearly
country_event = {
	id = giga_fallen_empire_moons.002
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_country_type = awakened_fallen_empire
		NOT = { has_country_flag = fe_war_moons_activated }
	}

	immediate = {
		set_country_flag = fe_war_moons_activated

		# Inform the player of how screwed they might be
		if = {
			limit = {
				any_planet_within_border = {
					OR = {
						has_planet_flag = dormant_war_moon
						has_planet_flag = dormant_war_planet
					}
				}
			}
			every_country = {
				limit = { is_ai = no }
				country_event = { id = giga_fallen_empire_moons.101 days = 30 random = 2 }
			}
		}

		# Activate war moons
		every_planet_within_border = {
			limit = { has_planet_flag = dormant_war_moon }
			root = {
				giga_moon_fe = yes
				last_created_fleet = { set_location = prevprev }
			}
			giga_remove_planet = yes
		}

		if = {
			limit = { has_ethic = ethic_fanatic_spiritualist }

			# Inform the player of how really screwed they might be
			every_country = {
				limit = { is_ai = no }
				country_event = { id = giga_fallen_empire_moons.102 days = 60 }
			}

			# Activate war planets (holy world)
			random_galaxy_planet = {
				limit = {
					is_colony = no
					OR = {
						has_planet_flag = holy_world_1
						has_planet_flag = holy_world_2
						has_planet_flag = holy_world_3
						has_planet_flag = holy_world_4
					}
				}
				root = {
					giga_planet_fe_holy = yes
					last_created_fleet = { set_location = prevprev }
				}
				remove_planet = yes
			}

			random = {
				chance = 50
				random_galaxy_planet = {
					limit = {
						is_colony = no
						OR = {
							has_planet_flag = holy_world_1
							has_planet_flag = holy_world_2
							has_planet_flag = holy_world_3
							has_planet_flag = holy_world_4
						}
					}
					root = {
						giga_planet_fe_holy = yes
						last_created_fleet = { set_location = prevprev }
					}
					remove_planet = yes
				}
			}
		}
		else = {
			# Activate war planets
			every_planet_within_border = {
				limit = { has_planet_flag = dormant_war_planet }
				root = {
					giga_planet_fe = yes
					last_created_fleet = { set_location = prevprev }
				}
				giga_remove_planet = yes
			}
		}
	}
}

#popup about war moons
country_event = {
	id = giga_fallen_empire_moons.101
	title = "giga_fallen_empire.101.name"
	desc = "giga_fallen_empire.101.desc"
	is_triggered_only = yes
	picture = GFX_evt_cold_barren
	show_sound = event_air_raid_siren
	option = { name = "giga_fallen_empire.101.a" }
}

#popup about war gaia world
country_event = {
	id = giga_fallen_empire_moons.102
	title = "giga_fallen_empire.102.name"
	desc = "giga_fallen_empire.102.desc"
	is_triggered_only = yes
	picture = GFX_evt_automated_dreadnought
	show_sound = event_air_raid_siren
	option = { name = "giga_fallen_empire.102.a" }
}

#Give Repeatables & mining stations to FEs
namespace = giga_fallen_empire_repeatables
country_event = {
	id = giga_fallen_empire_repeatables.1
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		add_modifier = { #No Mega Upkeep for FEs
			modifier = giga_fe_no_mega_upkeep
			days = -1
		}
		every_planet_within_border = {
			limit = { has_deposit = yes has_orbital_station = no }
			if = {
				limit = { is_colony = no has_deposit_for = shipclass_mining_station }
				create_mining_station = { owner = ROOT }
			}
			else_if = {
				limit = { is_colony = no has_deposit_for = shipclass_research_station }
				create_research_station = { owner = ROOT }
			}
		}
		if = {
			limit = { NOT = { has_country_flag = giga_fe_repeatables_modifier_applied } }
			add_modifier = {
				modifier = giga_fe_repeatables_modifier
				days = -1
				multiplier = giga_fe_repeatable_count
			}
			set_country_flag = giga_fe_repeatables_modifier_applied
		}
		every_owned_megastructure = {
			if = {
				limit = { exists = planet }
				planet = {
					giga_set_has_mega_flag = yes
				}
			}
		}
		if = {
			limit = { has_global_flag = upgrading_orbital_arcology }
			remove_global_flag = upgrading_orbital_arcology
		}
	}
}

#Misc
namespace = giga_fallen_empire_misc

#Spawn Nice Gatzo FE
country_event = {
	id = giga_fallen_empire_misc.1000
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = { #Remove Katzens & Zuspris from Flusion
			limit = { 
				exists = event_target:gigaflusion
				event_target:gigaflusion = {
					is_colony = yes
					owner = { is_country_type = primitive }
				}
			}
			event_target:flusion_primitives_country = {
				#remove_country_flag = recently_advanced
				remove_country_flag = tech_frozen
				remove_country_flag = fusion_age
				set_country_flag = machine_age
				set_pre_ftl_age_effect = { PRE_FTL_AGE = machine_age }
				change_species = event_target:solakians
				every_owned_leader = { kill_leader = { show_notification = yes } }
			}
			event_target:gigaflusion = {
				every_owned_pop = {
					kill_pop = yes
				}
				create_pop = {
					species = event_target:flusionians
					count = 8
				}
				create_pop = {
					species = event_target:solakians
					count = 8
				}
				create_pop = {
					species = event_target:kronks
					count = 7
				}
				set_owner = event_target:flusion_primitives_country
				set_controller = event_target:flusion_primitives_country
				every_planet_army = { remove_army = yes }
				while = { count = 1		create_army = { name = NAME_kronk_army	 	owner = event_target:flusion_primitives_country species = event_target:kronks 	   type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_yinjite_army 	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_haranian_army	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_solakian_army	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_solakian_air	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_laurnaise_army	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_army" } }
				while = { count = 1		create_army = { name = NAME_laurnaise_navy	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_axolinian_army	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_zousanian_army	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_army" } }
				while = { count = 1		create_army = { name = NAME_mercurian_army	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_altarian_army	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_manglarian_army	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				remove_building = building_giga_flusion_capital
				add_building = building_primitive_capital
				remove_building = building_giga_flusion_fusion_power_plant
			}
		}
		save_global_event_target_as = giga_meopa_fe
		set_country_flag = giga_meopa_fe
		set_country_flag = giga_nice_meopa_fe
		change_country_flag = {
			icon={
				category="domination"
				file="domination_1.dds"
			}
			background={
				category="backgrounds"
				file="v.dds"
			}
			colors={
				"light_green"
				"teal"
				"null"
				"null"
			}
		}
		change_species = event_target:flusion_katzens
		every_owned_leader = {
			change_species = event_target:flusion_katzens
		}
		change_dominant_species = { species = event_target:flusion_katzens change_all = yes }
		add_modifier = {
			modifier = giga_meopa_fe_resources
			days = -1
		}
		set_adjective = "Gatzian"
		change_government = { authority = auth_imperial }
		set_name = "Gatzo Ascendancy"

		# every_owned_fleet = { delete_fleet = THIS }
		create_species = {
			name = "Zuspri"
			plural = "Zuspris"
			class = REP
			portrait = rep10
			traits = {
				trait = trait_venerable
				trait = trait_intelligent
				trait = trait_ingenious
				trait = trait_nonadaptive
				trait = trait_sedentary
				trait = trait_cybernetic
			}
			effect = {
				save_global_event_target_as = darkforestezics
			}
		}
		create_species = {
			name = "Vickian"
			plural = "Vickians"
			class = MOL
			portrait = mol12
			traits = {
				trait = trait_charismatic
				trait = trait_adaptive
				trait = trait_communal
				trait = trait_conservational
			}
			effect = {
				save_global_event_target_as = vicke_molluscs
			}
		}
		create_species = {
			name = "Forcinian"
			plural = "Forcinian"
			class = MAM
			portrait = mam5
			traits = {
				trait = trait_psionic
				trait = trait_intelligent
				trait = trait_strong
				trait = trait_resilient
			}
			effect = {
				save_global_event_target_as = forcinia_monkes
			}
		}
		create_species = {
			name = "Sobaki"
			plural = "Sobakis"
			class = MAM
			portrait = mam12
			traits = {
				trait = trait_adaptive
				trait = trait_ingenious
				trait = trait_agrarian
				trait = trait_sedentary
			}
			effect = {
				save_global_event_target_as = nienet_sobakis
			}
		}
		create_species = {
			name = "Synthetic"
			class = "ROBOT"
			portrait = random
			traits = {
				trait = "trait_mechanical"
				trait = "trait_robot_domestic_protocols"
				trait = "trait_robot_luxurious"
			}
			effect = {
				save_global_event_target_as = meopa_fe_synths
			}
		}
		create_leader = {
			class = commander
			gender = female
			species = event_target:flusion_katzens
			name = "Alice Clatz"
			skill = 10
			set_age = 10125
			immortal = yes
			effect = {
				save_global_event_target_as = fe_alice_clatz_leader
			}
		}
		random_owned_planet = { #Preserve Cleanup, Kills specifically the preserve
			limit = {
				is_colony = yes
				has_planet_flag = fe_the_preserve
				NOT = { solar_system = { has_star_flag = giga_system_six } }
			}
			remove_all_districts = yes
			remove_all_buildings = yes
			destroy_colony = yes
			remove_planet_flag = fallen_empire_world
			remove_planet_flag = fe_the_preserve
			change_pc = pc_shattered #Preserve go boom
			reset_planet = yes
			if = {
				limit = { has_global_flag = guillis_planet_modifiers_active }
				set_planet_flag = gigas_fe_modifier_cleanup
				planet_event = {
					id = giga_fe_cleanup.001 days = 11
				}
			}
		}
		set_leader = event_target:fe_alice_clatz_leader
		set_male_ruler_title = "Grand Protector"
		set_female_ruler_title = "Grand Protectress"
		event_target:katzenland = {
			clear_blockers = yes
			remove_modifier = katzenland_planet
			change_pc = pc_gaia
			set_planet_flag = fallen_empire_world
			prevent_anomaly = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			set_planet_flag = cant_target_this_planet #NDB immunity
			create_pop = {
				species = event_target:flusion_katzens
				ethos = { ethic = ethic_xenophile }
				count = 64
			}
			create_pop = {
				species = event_target:darkforestezics
				ethos = { ethic = ethic_xenophile }
				count = 30
			}
			create_pop = {
				species = event_target:meopa_fe_synths
				ethos = { ethic = ethic_xenophile }
				count = 30
			}
			add_building = building_giga_ancient_palace
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome

			while = {
				count = 30
				add_district = district_city
			}
			while = {
				count = 10
				create_army = {
					name = NAME_katzenelite_army
					owner = root
					species = event_target:flusion_katzens
					type = giga_fe_special_army
					land_army = yes
				}
			}
			while = {
				count = 5
				create_army = {
					name = NAME_grandezic_army
					owner = root
					species = event_target:darkforestezics
					type = giga_fe_special_army
					land_army = yes
				}
			}
			solar_system = {
				every_system_megastructure = {
					limit = { is_megastructure_type = terraform_barren_2_disabled }
					remove_megastructure = THIS
				}
				create_fe_home_citadel = yes
			}
		}
		event_target:nienet = {
			change_pc = pc_gaia
			clear_blockers = yes
			set_planet_flag = fallen_empire_world
			prevent_anomaly = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			create_pop = {
				species = event_target:nienet_sobakis
				ethos = { ethic = ethic_xenophile }
				count = 60
			}
			add_building = building_giga_ancient_palace
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_nourishment_center
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_dimensional_fabricator
			add_building = building_nano_forge
			while = {
				count = 12
				add_district = district_arcology_housing
			}
			while = {
				count = 5
				create_army = {
					name = NAME_nienet_army
					owner = root
					species = event_target:nienet_sobakis
					type = giga_fe_special_army
					land_army = yes
				}
			}
		}
		event_target:potradus = {
			set_name = "Potradus Preserve"
			change_pc = pc_gaia
			giga_clear_has_mega_flag = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			create_pop = {
				species = event_target:flusion_katzens
				count = 6
			}
			while = {
				count = 5
				create_species = {
					name = random
					class = random_non_machine
					portrait = random
					traits = random
				}
				create_pop = {
					species = last_created_species
				}
			}
			while = {
				count = 21
				add_district = district_city
			}
			add_building = building_fe_xeno_zoo
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_class_4_singularity
			add_building = building_class_4_singularity
			add_building = building_class_4_singularity
			add_building = building_class_4_singularity
			add_building = building_class_4_singularity
			add_building = building_dimensional_fabricator
			add_building = building_dimensional_fabricator
			if = {
				limit = { any_galaxy_planet = { has_planet_flag = fe_the_preserve } }
				every_galaxy_planet = {
					limit = { has_planet_flag = fe_the_preserve }
					remove_planet_flag = fe_the_preserve 
				}
			}
			set_planet_flag = fe_the_preserve
			while = {
				count = 5
				create_army = {
					name = NAME_potradus_army
					owner = root
					species = event_target:flusion_katzens
					type = giga_fe_special_army
					land_army = yes
				}
			}
		}
		event_target:forcinia = {
			change_pc = pc_gaia
			clear_blockers = yes
			set_planet_flag = fallen_empire_world
			prevent_anomaly = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			create_pop = {
				species = event_target:forcinia_monkes
				ethos = { ethic = ethic_xenophile }
				count = 40
			}
			add_building = building_giga_ancient_palace
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_nourishment_center
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_dimensional_fabricator
			while = {
				count = 10
				add_district = district_city
			}
			while = {
				count = 5
				create_army = {
					name = NAME_forcinia_army
					owner = root
					species = event_target:forcinia_monkes
					type = giga_fe_special_army
					land_army = yes
				}
			}
		}
		event_target:vicke = {
			change_pc = pc_gaia
			clear_blockers = yes
			set_planet_flag = fallen_empire_world
			prevent_anomaly = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			create_pop = {
				species = event_target:vicke_molluscs
				ethos = { ethic = ethic_xenophile }
				count = 40
			}
			add_building = building_giga_ancient_palace
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_nourishment_center
			add_building = building_nourishment_center
			add_building = building_class_4_singularity
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_nano_forge
			while = {
				count = 14
				add_district = district_city
			}
			while = {
				count = 5
				create_army = {
					name = NAME_vicke_army
					owner = root
					species = event_target:vicke_molluscs
					type = giga_fe_special_army
					land_army = yes
				}
			}
		}
		capital_scope.solar_system = { #capital cleanup
			every_system_planet = { #Colony Cleanup
				limit = {
					is_colony = yes
					NOT = { solar_system = { has_star_flag = giga_system_six } }
				}
				remove_all_districts = yes
				remove_all_buildings = yes
				destroy_colony = yes
				remove_planet_flag = fallen_empire_world
				change_pc = pc_barren
				reset_planet = yes
				if = {
					limit = { has_global_flag = guillis_planet_modifiers_active }
					set_planet_flag = gigas_fe_modifier_cleanup
					planet_event = {
						id = giga_fe_cleanup.001 days = 11
					}
				}
			}
		}

		event_target:katzenland = {#This is just moved to let me kill the capital planets specifically
			set_capital = yes
			set_sector_capital = yes
		}
		every_owned_planet = { #Colony pop cleanup They become Katzen, a fate worse than [REDACTED]
			limit = {
				is_colony = yes
				NOT = { solar_system = { has_star_flag = giga_system_six } }
			}
			change_pc = pc_continental #Makes sure katzens get their preference since why would an FE not have their preference?
			every_owned_pop = {
				if = {
					limit = {
						is_robot_pop = no 
					}
					change_species = event_target:flusion_katzens
				} else_if = {
					limit = {
						is_robot_pop = yes
					}
					change_species = event_target:meopa_fe_synths
				}
			}
		}
		#Teratre Fleet
		if = {
			limit = { NOT = { has_global_flag = giga_fe_planetcrafts_0 } }
			create_leader = {
				class = commander
				species = ROOT.species
				name = random
				skill = 6
			}
			create_fleet = {
				name = "Gatzo Lunar Squadron"
				settings = { spawn_debris = no is_boss = yes can_change_composition = no can_disband = no }
				effect = {
					set_owner = ROOT
					create_ship = { 
						name = "Vertrois"	
						design = "Ancient AI Planetoid"	
						effect = { 
							set_ship_flag = giga_moon_fe
							add_modifier = {
								modifier = giga_fe_planetcraft_buff
								days = -1
							}
						} 
					}
					create_ship = { 
						name = "Ruspiayama"	
						design = "Ancient AI Planetoid"	
						effect = { 
							set_ship_flag = giga_moon_fe
							add_modifier = {
								modifier = giga_fe_planetcraft_buff
								days = -1
							}
						} 
					}
					assign_leader = last_created_leader
					set_formation_scale = 5
					set_location = event_target:teratre
				}
			}
		}

		event_target:teratre = {
			every_moon = { giga_remove_planet = yes }
		}
		event_target:forcinia = {
			every_moon = { giga_remove_planet = yes }
		}
		event_target:teratre = {
			if = {
				limit = { NOT = { has_global_flag = crystal_disabled } }
				solar_system = {
					spawn_megastructure = {
						type = crystal_megabore_3
						planet = PREV
						owner = ROOT
					}
				}
			}
			change_pc = pc_molten
		}
		#Sets up their shield effect
		capital_scope = {
			create_ambient_object = { #funny shield system effect
				type = "giga_fe_shield"
				location = star
				use_3d_location = yes
				entity_offset = { min = 0 max = 0 }
				entity_offset_angle = { min = 0 max = 0 }
				entity_offset_height = { min = -15 max = -15 }
				scale = 1
		}
		}
		#No longer have to setup new starbases since we don't delete the old ones
		# capital_scope = {
		# 	solar_system = {
		# 		every_neighbor_system = {
		# 			create_starbase = {
		# 				size = starbase_fe_outpost
		# 				owner = ROOT
		# 			}
		# 			create_fe_citadel = yes
		# 			every_neighbor_system = {
		# 				create_starbase = {
		# 					size = starbase_fe_outpost
		# 					owner = ROOT
		# 				}
		# 				create_fe_citadel = yes
		# 			}
		# 		}
		# 	}
		# }
	}
}

#Gamer Meopa
country_event = {
	id = giga_fallen_empire_misc.1005
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = { #Remove Katzens & Zuspris from Flusion
			limit = { 
				exists = event_target:gigaflusion
				event_target:gigaflusion = {
					is_colony = yes
					owner = { is_country_type = primitive }
				}
			}
			event_target:flusion_primitives_country = {
				#remove_country_flag = recently_advanced
				remove_country_flag = tech_frozen
				remove_country_flag = fusion_age
				set_country_flag = machine_age
				set_pre_ftl_age_effect = { PRE_FTL_AGE = machine_age }
				change_species = event_target:solakians
				every_owned_leader = { kill_leader = { show_notification = yes } }
			}
			event_target:gigaflusion = {
				every_owned_pop = {
					kill_pop = yes
				}
				create_pop = {
					species = event_target:flusionians
					count = 8
				}
				create_pop = {
					species = event_target:solakians
					count = 8
				}
				create_pop = {
					species = event_target:kronks
					count = 7
				}
				set_owner = event_target:flusion_primitives_country
				set_controller = event_target:flusion_primitives_country
				every_planet_army = { remove_army = yes }
				while = { count = 1		create_army = { name = NAME_kronk_army			owner = event_target:flusion_primitives_country species = event_target:kronks 		type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_yinjite_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_haranian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_solakian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_solakian_air		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_laurnaise_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_army" } }
				while = { count = 1		create_army = { name = NAME_laurnaise_navy		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_axolinian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_zousanian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_army" } }
				while = { count = 1		create_army = { name = NAME_mercurian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_altarian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_manglarian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				remove_building = building_giga_flusion_capital
				add_building = building_primitive_capital
				remove_building = building_giga_flusion_fusion_power_plant
			}

		}
		save_global_event_target_as = giga_meopa_fe
		set_country_flag = giga_meopa_fe
		set_country_flag = giga_evil_meopa_fe
		change_country_flag = {
			icon={
				category="spherical"
				file="flag_spherical_11.dds"
			}
			background={
				category="backgrounds"
				file="circle.dds"
			}
			colors={
				"beige"
				"yellow"
				"black"
				"null"
			}
		}
		change_species = event_target:flusion_katzens
		every_owned_leader = {
			change_species = event_target:flusion_katzens
		}
		change_government = { authority = auth_imperial }
		add_modifier = {
			modifier = giga_meopa_fe_resources
			days = -1
		}
		change_dominant_species = { species = event_target:flusion_katzens change_all = yes }
		set_adjective = "Katzen"
		set_name = "Meopian Continuum"
		
		#every_owned_fleet = { delete_fleet = THIS }
		create_species = {
			name = "Zuspri"
			plural = "Zuspris"
			class = REP
			portrait = rep10
			traits = {
				trait = trait_venerable
				trait = trait_intelligent
				trait = trait_ingenious
				trait = trait_nonadaptive
				trait = trait_sedentary
				trait = trait_cybernetic
			}
			effect = {
				save_global_event_target_as = darkforestezics
			}
		}
		create_species = {
			name = "Katzen"
			plural = "Katzens"
			class = POUCHKINN
			portrait = meoparevived
			effect = {
				save_global_event_target_as = meopaspecies
			}
		}
		create_species = {
			name = "Synthetic"
			class = "ROBOT"
			portrait = random
			traits = {
				trait = "trait_mechanical"
				trait = "trait_robot_domestic_protocols"
				trait = "trait_robot_luxurious"
			}
			effect = {
				save_global_event_target_as = meopa_fe_synths
			}
		}
		create_leader = {
			class = commander
			gender = male
			species = event_target:meopaspecies
			name = "Meopa"
			skill = 10
			set_age = 11235
			immortal = yes
			traits = {
				trait = leader_trait_aggressive
				trait = leader_trait_unyielding
			}
			effect = {
				save_global_event_target_as = fe_meopa_leader
				set_leader_flag = revived_meopa
			}
		}
		if = {
			limit = { NOT = { has_technology = tech_katzen_atomic_munitions } }
			give_technology = { tech = tech_katzen_atomic_munitions }
		}
		set_policy = { #Meow
			policy = orbital_bombardment
			option = orbital_bombardment_armageddon
			cooldown = no
		}
		set_leader = event_target:fe_meopa_leader
		set_male_ruler_title = "Executor"
		set_female_ruler_title = "Executor"
		event_target:katzenland = {
			set_planet_flag = cant_target_this_planet #NDB immunity
			clear_blockers = yes
			remove_modifier = katzenland_planet
			change_pc = pc_city
			set_planet_flag = fallen_empire_world
			prevent_anomaly = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			set_capital = yes
			create_pop = {
				species = event_target:flusion_katzens
				ethos = { ethic = ethic_xenophobe }
				count = 100
			}
			create_pop = {
				species = event_target:meopa_fe_synths
				ethos = { ethic = ethic_xenophile }
				count = 30
			}
			add_building = building_giga_ancient_palace
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome

			while = {
				count = 30
				add_district = district_arcology_housing
			}
			#create_fallen_empire_starting_navy = yes
			while = {
				count = 20
				create_army = {
					name = NAME_meopaelite_army
					owner = root
					species = event_target:flusion_katzens
					type = giga_fe_special_army
					land_army = yes
				}
			}
			solar_system = {
				every_system_megastructure = {
					limit = { is_megastructure_type = terraform_barren_2_disabled }
					remove_megastructure = THIS
				}
				create_fe_home_citadel = yes
			}
		}
		event_target:nienet = {
			change_pc = pc_shattered
			prevent_anomaly = yes
		}
		event_target:potradus = {
			set_name = "Neu-Katzenland"
			change_pc = pc_gaia
			giga_clear_has_mega_flag = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			create_pop = {
				species = event_target:flusion_katzens
				ethos = { ethic = ethic_xenophobe }
				count = 40
			}
			while = {
				count = 21
				add_district = district_city
			}
			add_building = building_giga_ancient_palace
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_class_4_singularity
			add_building = building_class_4_singularity
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_dimensional_fabricator
			add_building = building_dimensional_fabricator
			while = {
				count = 5
				create_army = {
					name = NAME_katzenland_army
					owner = root
					species = event_target:flusion_katzens
					type = giga_fe_special_army
					land_army = yes
				}
			}
		}
		event_target:forcinia = {
			set_name = "Forcinien"
			change_pc = pc_gaia
			clear_blockers = yes
			set_planet_flag = fallen_empire_world
			prevent_anomaly = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			create_pop = {
				species = event_target:flusion_katzens
				ethos = { ethic = ethic_xenophobe }
				count = 40
			}
			add_building = building_giga_ancient_palace
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_nourishment_center
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_dimensional_fabricator
			while = {
				count = 10
				add_district = district_city
			}
			while = {
				count = 5
				create_army = {
					name = NAME_forcinia_army
					owner = root
					species = event_target:flusion_katzens
					type = giga_fe_special_army
					land_army = yes
				}
			}
		}
		event_target:vicke = {
			set_name = "Vickien"
			change_pc = pc_tropical
			clear_blockers = yes
			set_planet_flag = fallen_empire_world
			prevent_anomaly = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			create_pop = {
				species = event_target:flusion_katzens
				ethos = { ethic = ethic_xenophobe }
				count = 40
			}
			add_building = building_giga_ancient_palace
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_nourishment_center
			add_building = building_nourishment_center
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_affluence_center
			add_building = building_nano_forge
			while = {
				count = 14
				add_district = district_city
			}
			while = {
				count = 5
				create_army = {
					name = NAME_vicke_army
					owner = root
					species = event_target:flusion_katzens
					type = giga_fe_special_army
					land_army = yes
				}
			}
		}
		every_owned_planet = { #Colony cleanup
			limit = {
				is_colony = yes
				NOT = { solar_system = { has_star_flag = giga_system_six } }
			}
			remove_all_districts = yes
			remove_all_buildings = yes
			destroy_colony = yes
			remove_planet_flag = fallen_empire_world
			change_pc = pc_katzenland #Meopa engages in a minor amount of trolling
			add_modifier = {
				modifier = "irradiated_desert_planet"
				days = -1
			}
			if = {
				limit = { has_global_flag = guillis_planet_modifiers_active }
				set_planet_flag = gigas_fe_modifier_cleanup
				planet_event = {
					id = giga_fe_cleanup.001 days = 11
				}
			}
		}
		#Teratre Fleet
		if = {
			limit = { NOT = { has_global_flag = giga_fe_planetcrafts_0 } }
			create_leader = {
				class = commander
				gender = male
				species = event_target:meopaspecies
				name = "Meopa"
				skill = 10
				set_age = 11235
				immortal = yes
				traits = {
					trait = leader_trait_aggressive
					trait = leader_trait_unyielding
				}
				effect = {
					save_global_event_target_as = fe_meopa_admiral_leader
					#set_leader_flag = revived_meopa
				}
			}
			create_fleet = {
				name = "Meopian Guard"
				settings = { spawn_debris = no is_boss = yes can_change_composition = no can_disband = no }
				effect = {
					set_owner = ROOT
					create_ship = {
						name = "Teratre"
						design = "Ancient Planetcraft"
						effect = {
							set_ship_flag = giga_planet_fe
							add_modifier = {
								modifier = giga_fe_planetcraft_buff
								days = -1
							}
						}
					}
					create_ship = { 
						name = "Vertrois"	
						design = "Ancient AI Planetoid"	
						effect = { 
							set_ship_flag = giga_moon_fe
							add_modifier = {
								modifier = giga_fe_planetcraft_buff
								days = -1
							}
						} 
					}
					create_ship = { 
						name = "Ruspiayama"	
						design = "Ancient AI Planetoid"	
						effect = { 
							set_ship_flag = giga_moon_fe
							add_modifier = {
								modifier = giga_fe_planetcraft_buff
								days = -1
							}
						} 
					}
					assign_leader = event_target:fe_meopa_admiral_leader
					set_formation_scale = 5
					set_location = event_target:teratre
				}
			}
		}

		event_target:teratre = {
			every_moon = { giga_remove_planet = yes }
			giga_remove_planet = yes
		}
		event_target:forcinia = {
			every_moon = { giga_remove_planet = yes }
		}
		#Sets up their shield effect
		capital_scope = {
			create_ambient_object = { #funny shield system effect
				type = "giga_fe_shield"
				location = star
				use_3d_location = yes
				entity_offset = { min = 0 max = 0 }
				entity_offset_angle = { min = 0 max = 0 }
				entity_offset_height = { min = -15 max = -15 }
				scale = 1
		}
		}
		#Sets up his bombed worlds on border
		every_system_within_border = {
			every_neighbor_system = {
				limit = { NOT = { any_system_planet = { is_planet_class = pc_katzenland } } }
				random_system_planet = {
					limit = {
						OR = {
							giga_is_barren_cn = yes
						}
					}
					add_modifier = {
						modifier = "irradiated_desert_planet"
						days = -1
					}
					change_pc = pc_katzenland
				}
			}
		}
	}
}

#The Kaiser??
planet_event = {
	id = giga_fallen_empire_misc.1010
	hide_window = yes

	trigger = {
		NOT = { has_global_flag = kaiser_spotted_on_flusion }
		has_observation_outpost = yes
		has_global_flag = meopa_spawned_as_fe
		has_planet_flag = gigaflusion
		is_colony = yes
		owner = { is_country_type = primitive }
	}

	mean_time_to_happen = {
		months = 10
	}
	
	fire_only_once = yes

	immediate = {
		set_global_flag = kaiser_spotted_on_flusion
		observation_outpost_owner = {
			country_event = { id = giga_fallen_empire_misc.1011 }
		}
	}
}

country_event = {
	id = giga_fallen_empire_misc.1011
	title = "giga_fallen_empire_misc.1011.name"
	desc = "giga_fallen_empire_misc.1011.desc"
	picture = GFX_evt_alien_cavemen
	show_sound = event_mystic_reveal
	location = event_target:gigaflusion

	is_triggered_only = yes

	option = {
		name = "giga_fallen_empire_misc.1011.a"
	}

	option = {
		name = "giga_fallen_empire_misc.1011.b"
	}
}

#Pouchkinn FE
country_event = {
	id = giga_fallen_empire_misc.1020
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = { #Remove Katzens & Zuspris from Flusion
			limit = { 
				exists = event_target:gigaflusion
				event_target:gigaflusion = {
					is_colony = yes
					owner = { is_country_type = primitive }
				}
			}
			event_target:flusion_primitives_country = {
				#remove_country_flag = recently_advanced
				remove_country_flag = tech_frozen
				remove_country_flag = fusion_age
				set_country_flag = machine_age
				set_pre_ftl_age_effect = { PRE_FTL_AGE = machine_age }
				change_species = event_target:solakians
				every_owned_leader = { kill_leader = { show_notification = yes } }
			}
			event_target:gigaflusion = {
				every_owned_pop = {
					kill_pop = yes
				}
				create_pop = {
					species = event_target:flusionians
					count = 8 
				}
				create_pop = {
					species = event_target:solakians
					count = 8
				}
				create_pop = {
					species = event_target:kronks
					count = 7
				}
				set_owner = event_target:flusion_primitives_country
				set_controller = event_target:flusion_primitives_country
				every_planet_army = { remove_army = yes }
				while = { count = 1		create_army = { name = NAME_kronk_army			owner = event_target:flusion_primitives_country species = event_target:kronks 		type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_yinjite_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_haranian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_solakian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_solakian_air		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_laurnaise_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_army" } }
				while = { count = 1		create_army = { name = NAME_laurnaise_navy		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_axolinian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_zousanian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_army" } }
				while = { count = 1		create_army = { name = NAME_mercurian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_altarian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				while = { count = 1		create_army = { name = NAME_manglarian_army		owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_early_army" } }
				remove_building = building_giga_flusion_capital
				add_building = building_primitive_capital
				remove_building = building_giga_flusion_fusion_power_plant
			}

		}
		if = { #Remove Tyaur
			limit = { any_galaxy_planet = { has_planet_flag = cat_orbital_elysium } }
			random_galaxy_planet = {
				limit = { has_planet_flag = cat_orbital_elysium }
				solar_system = { every_fleet_in_system = { destroy_fleet = THIS } }
				giga_remove_planet = yes
			}
		}
		save_global_event_target_as = giga_meopa_fe
		set_country_flag = giga_meopa_fe
		set_country_flag = giga_pouchkinn_meopa_fe
		change_country_flag = {
			icon={
				category="human"
				file="flag_human_10.dds"
			}
			background={
				category="backgrounds"
				file="griffon.dds"
			}
			colors={
				"dark_purple"
				"black"
				"null"
				"null"
			}
		}
		change_species = event_target:flusion_katzens
		every_owned_leader = {
			change_species = event_target:flusion_katzens
		}
		change_dominant_species = { species = event_target:flusion_katzens change_all = yes }
		add_modifier = {
			modifier = giga_meopa_fe_resources
			days = -1
		}
		set_policy = { #Glorious Pouchkinn science cares not for petty "morals"
			policy = artificial_intelligence_policy
			option = ai_full_rights
			cooldown = no
		}
		set_adjective = "Pouchkinnian"
		set_name = "Pouchkinnian Research Network"
		#every_owned_fleet = { delete_fleet = THIS }
		create_species = {
			name = "Zuspri"
			plural = "Zuspris"
			class = REP
			portrait = rep10
			traits = {
				trait = trait_venerable
				trait = trait_intelligent
				trait = trait_ingenious
				trait = trait_nonadaptive
				trait = trait_sedentary
				trait = trait_cybernetic
			}
			effect = {
				save_global_event_target_as = darkforestezics
			}
		}
		create_species = {
			name = "Vickian"
			plural = "Vickians"
			class = MOL
			portrait = mol12
			traits = {
				trait = trait_charismatic
				trait = trait_adaptive
				trait = trait_communal
				trait = trait_conservational
				trait = trait_intelligent
			}
			effect = {
				save_global_event_target_as = vicke_molluscs
			}
		}
		create_species = {
			name = "Forcinian"
			plural = "Forcinian"
			class = MAM
			portrait = mam5
			traits = {
				trait = trait_psionic
				trait = trait_intelligent
				trait = trait_strong
				trait = trait_resilient
				trait = trait_intelligent
			}
			effect = {
				save_global_event_target_as = forcinia_monkes
			}
		}
		create_species = {
			name = "Sobaki"
			plural = "Sobakis"
			class = MAM
			portrait = mam12
			traits = {
				trait = trait_adaptive
				trait = trait_ingenious
				trait = trait_agrarian
				trait = trait_sedentary
				trait = trait_intelligent
			}
			effect = {
				save_global_event_target_as = nienet_sobakis
			}
		}
		create_species = {
			name = "Pouchkalkulator"
			class = "ROBOT"
			portrait = random
			traits = {
				trait = "trait_mechanical"
				trait = "trait_robot_logic_engines"
				trait = "trait_robot_luxurious"
			}
			effect = {
				save_global_event_target_as = meopa_fe_synths
			}
		}
		create_species = {
			name = "Katzen"
			plural = "Katzens"
			class = POUCHKINN
			portrait = pouchkinn
			traits = {
				trait = trait_industrious
				trait = trait_natural_engineers
			}
			effect = { save_global_event_target_as = pouchkinn_species }
		}
		event_target:global_event_country = {
			create_leader = {
				class = scientist
				gender = male
				species = event_target:pouchkinn_species
				immortal = yes
				name = "Weeny Pouchkinn"
				skill = 8
				set_age = 14697
				effect = {
					save_global_event_target_as = giga_backup_pouchkinn
				}
			}
		}
		create_leader = {
			class = scientist
			gender = male
			species = event_target:pouchkinn_species
			immortal = yes
			name = "Weeny Pouchkinn"
			skill = 8
			set_age = 14697
			effect = {
				set_leader_flag = fe_pouchkinn_leader
				save_global_event_target_as = fe_pouchkinn_leader
			}
		}
		change_variable = {
			which = giga_fe_repeatable_count
			value = 70
		}
		set_leader = event_target:fe_pouchkinn_leader
		leader = { add_trait = pouchkinn_trait_deranged }
		set_male_ruler_title = "Director"
		set_female_ruler_title = "Director"
		event_target:katzenland = {
			set_planet_flag = cant_target_this_planet #NDB immunity
			set_name = "Pouchkinnland"
			clear_blockers = yes
			remove_modifier = katzenland_planet
			change_pc = pc_gaia
			set_planet_flag = fallen_empire_world
			prevent_anomaly = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			set_capital = yes
			create_pop = {
				species = event_target:flusion_katzens
				ethos = { ethic = ethic_materialist }
				count = 55
			}
			create_pop = {
				species = event_target:darkforestezics
				ethos = { ethic = ethic_materialist }
				count = 25
			}
			create_pop = {
				species = event_target:forcinia_monkes
				ethos = { ethic = ethic_materialist }
				count = 15
			}
			create_pop = {
				species = event_target:vicke_molluscs
				ethos = { ethic = ethic_materialist }
				count = 15
			}
			create_pop = {
				species = event_target:nienet_sobakis
				ethos = { ethic = ethic_materialist }
				count = 15
			}
			add_building = building_giga_ancient_palace
			add_building = building_fe_stronghold
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome

			while = {
				count = 25
				add_district = district_city
			}
			#create_fallen_empire_starting_navy = yes Don't want to build them a new navy since the original isn't deleted
			while = {
				count = 5
				create_army = {
					name = NAME_pouchkguard_army
					owner = root
					species = event_target:meopa_fe_synths
					type = giga_fe_special_army
					land_army = yes
				}
			}
			solar_system = {
				every_system_megastructure = {
					limit = { is_megastructure_type = terraform_barren_2_disabled }
					remove_megastructure = THIS
				}
				create_fe_home_citadel = yes
				random_system_planet = {
					limit = { is_planet_class = pc_asteroid }
					set_planet_flag = megastructure
					giga_set_has_mega_flag = yes
					set_planet_flag = has_fe_asteroid_artillery
					solar_system = {
						spawn_megastructure = {
							type = asteroid_manufactory_2
							planet = PREV
							owner = ROOT
						}
					}
				}
			}
		}
		event_target:nienet = {
			set_name = "Nienet Archives"
			change_pc = pc_giga_planetary_computer
			set_planet_flag = giga_planetary_computer
			clear_blockers = yes
			set_planet_flag = fallen_empire_world
			prevent_anomaly = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			create_pop = {
				species = event_target:flusion_katzens
				count = 6
			}
			create_pop = {
				species = event_target:meopa_fe_synths
				ethos = { ethic = ethic_materialist }
				count = 63
			}
			add_building = building_giga_ancient_palace
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_class_4_singularity
			add_building = building_class_4_singularity
			add_building = building_class_4_singularity
			add_building = building_master_archive
			add_building = building_master_archive
			add_building = building_master_archive
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			while = {
				count = 12
				add_district = district_giga_pcc_science
			}
			add_modifier = {
				modifier = giga_planetary_computer
				days = -1
			}
			while = {
				count = 5
				create_army = {
					name = NAME_nienet_army
					owner = root
					species = event_target:meopa_fe_synths
					type = giga_fe_special_army
					land_army = yes
				}
			}
			solar_system = {
				spawn_megastructure = {
					type = think_tank_3
					planet = PREV
					owner = ROOT
				}
			}
		}
		event_target:potradus = {
			set_name = "Potradus Archives"
			change_pc = pc_giga_planetary_computer
			set_planet_flag = giga_planetary_computer
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			create_pop = {
				species = event_target:flusion_katzens
				count = 6
			}
			create_pop = {
				species = event_target:meopa_fe_synths
				ethos = { ethic = ethic_materialist }
				count = 50
			}
			while = {
				count = 21
				add_district = district_giga_pcc_science
			}
			add_building = building_giga_ancient_palace
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_class_4_singularity
			add_building = building_class_4_singularity
			add_building = building_class_4_singularity
			add_building = building_master_archive
			add_building = building_master_archive
			add_building = building_master_archive
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			while = {
				count = 5
				create_army = {
					name = NAME_potradus_army
					owner = root
					species = event_target:meopa_fe_synths
					type = giga_fe_special_army
					land_army = yes
				}
			}
			add_modifier = {
				modifier = giga_planetary_computer
				days = -1
			}
			solar_system = {
				spawn_megastructure = {
					type = think_tank_3
					planet = PREV
					owner = ROOT
				}
			}
		}
		event_target:forcinia = {
			set_name = "Forcinia Archives"
			change_pc = pc_giga_planetary_computer
			set_planet_flag = giga_planetary_computer
			clear_blockers = yes
			set_planet_flag = fallen_empire_world
			prevent_anomaly = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			create_pop = {
				species = event_target:flusion_katzens
				count = 6
			}
			create_pop = {
				species = event_target:meopa_fe_synths
				ethos = { ethic = ethic_materialist }
				count = 50
			}
			add_building = building_giga_ancient_palace
			add_building = building_giga_fe_stronghold
			add_building = building_giga_fe_stronghold
			add_building = building_class_4_singularity
			add_building = building_class_4_singularity
			add_building = building_class_4_singularity
			add_building = building_master_archive
			add_building = building_master_archive
			add_building = building_master_archive
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_fe_dome
			while = {
				count = 10
				add_district = district_giga_pcc_science
			}
			add_modifier = {
				modifier = giga_planetary_computer
				days = -1
			}
			while = {
				count = 5
				create_army = {
					name = NAME_forcinia_army
					owner = root
					species = event_target:meopa_fe_synths
					type = giga_fe_special_army
					land_army = yes
				}
			}
			solar_system = {
				spawn_megastructure = {
					type = think_tank_3
					planet = PREV
					owner = ROOT
				}
			}
		}
		event_target:vicke = {
			set_name = "Vicke Foundry"
			change_pc = pc_city
			clear_blockers = yes
			set_planet_flag = fallen_empire_world
			prevent_anomaly = yes
			set_owner = event_target:giga_meopa_fe
			set_controller = event_target:giga_meopa_fe
			create_pop = {
				species = event_target:flusion_katzens
				count = 6
			}
			create_pop = {
				species = event_target:meopa_fe_synths
				ethos = { ethic = ethic_materialist }
				count = 50
			}
			add_building = building_giga_ancient_palace
			add_building = building_fe_dome
			add_building = building_fe_dome
			add_building = building_dimensional_fabricator
			add_building = building_dimensional_fabricator
			add_building = building_dimensional_fabricator
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_affluence_center
			add_building = building_affluence_center
			while = {
				count = 15
				add_district = district_arcology_arms_industry
			}
			while = {
				count = 10
				create_army = {
					name = NAME_vicke_army
					owner = root
					species = event_target:meopa_fe_synths
					type = giga_fe_special_army
					land_army = yes
				}
			}
		}
		every_owned_planet = { #Colony cleanup
			limit = {
				is_colony = yes
				NOT = { solar_system = { has_star_flag = giga_system_six } }
			}
			remove_all_districts = yes
			remove_all_buildings = yes
			destroy_colony = yes
			remove_planet_flag = fallen_empire_world
			change_pc = pc_barren
			reset_planet = yes
			if = {
				limit = { has_global_flag = guillis_planet_modifiers_active }
				set_planet_flag = gigas_fe_modifier_cleanup
				planet_event = {
					id = giga_fe_cleanup.001 days = 11
				}
			}
		}
		#Teratre Fleet
		if = {
			limit = { NOT = { has_global_flag = giga_fe_planetcrafts_0 } }
			create_fleet = {
				name = "Gatzo Lunar Squadron"
				settings = { spawn_debris = no is_boss = yes can_change_composition = no can_disband = no }
				effect = {
					set_owner = ROOT
					create_ship = { 
						name = "Vertrois"	
						design = "Ancient AI Planetoid"	
						effect = { 
							set_ship_flag = giga_moon_fe
							add_modifier = {
								modifier = giga_fe_planetcraft_buff
								days = -1
							}
						} 
					}
					create_ship = { 
						name = "Ruspiayama"	
						design = "Ancient AI Planetoid"	
						effect = { 
							set_ship_flag = giga_moon_fe
							add_modifier = {
								modifier = giga_fe_planetcraft_buff
								days = -1
							}
						} 
					}
					set_formation_scale = 5
					set_location = event_target:teratre
				}
			}
		}

		event_target:teratre = {
			every_moon = { giga_remove_planet = yes }
		}
		event_target:forcinia = {
			every_moon = { giga_remove_planet = yes }
		}
		event_target:teratre = {
			if = {
				limit = { NOT = { has_global_flag = crystal_disabled } }
				solar_system = {
					spawn_megastructure = {
						type = crystal_megabore_3
						planet = PREV
						owner = ROOT
					}
				}
			}
			change_pc = pc_molten
		}
		#Sets up their shield effect
		capital_scope = {
			create_ambient_object = { #funny shield system effect
				type = "giga_fe_shield"
				location = star
				use_3d_location = yes
				entity_offset = { min = 0 max = 0 }
				entity_offset_angle = { min = 0 max = 0 }
				entity_offset_height = { min = -15 max = -15 }
				scale = 1
		}
		}
		#Brain gaming
		capital_scope = {
			spawn_system = { #Pouchkinn's Big Brain
				min_distance = 5
				max_distance = 8
				initializer = giga_fe_mega_pouchkinn_matrioskha_brain
				hyperlane = yes
				is_discovered = yes
			}
		}

		set_variable = {
			which = giga_pouchkinn_fe_months_till_repeatable
			value = 60
		}

		country_event = { id = giga_fallen_empire_misc.1021 days = 5 }
	}
}

country_event = {
	id = giga_fallen_empire_misc.1021
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		change_government = { #change government to change personality
			authority = auth_imperial
			civics = {
				civic = civic_lethargic_leadership
				civic = civic_empire_in_decline
				civic = civic_bogged_down_researchers
			}
		}
	}
}

event = {
	id = giga_fallen_empire_misc.10221
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = meopa_spawned_as_fe
		has_global_flag = pouchkinn_gatzo_fe
		any_country = {
			has_ai_personality = fallen_empire_pouchkinn
			is_at_war = no
		}
		NOT = { has_global_flag = giga_pouchkinn_engine_started }
		#mid_game_years_passed > 90
		end_game_years_passed > -10 # same effective date under normal settings, but is tied to endgame setting instead of midgame - Pouchkinn is NOT a midgame threat
	}

	immediate = {
		random_list = {
			10 = { event_target:giga_meopa_fe = { country_event = { id = giga_fallen_empire_misc.1022 days = 30 random = 90 } } }
			90 = {}
		}
	}
}

#Pouchkinn Awakens
country_event = {
	id = giga_fallen_empire_misc.1022
	
	hide_window = yes

	is_triggered_only = yes
		
	immediate = {
		set_variable = {
			which = giga_pouchkinn_fe_months_till_repeatable
			value = 2
		}
		set_global_flag = giga_pouchkinn_engine_started
		set_global_flag = sleepers_awake_happened
		set_country_flag = sleepers_awake_first_sleeper
		set_country_type = awakened_fallen_empire
		add_resource = { minerals = 50000 }
		add_resource = { energy = 50000 }
		add_resource = { food = 5000 }
		add_resource = { influence = 1000 }
		country_event = { id = fallen_empires.13 }
		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
				NOT = { has_communications = root }
			}
			
			establish_communications_no_message = root
			root = { save_event_target_as = contact_empire }
			country_event = { id = action.1 }
		}
		change_government = {
			civics = {
				civic = civic_revanchist_fervor
				civic = civic_ancient_caches_of_technology
				civic = civic_deranged_researchers
			}
		}
		every_country = {
			limit = {
				OR = {
					ehof_default_country = yes
					is_ai = no
				}
			}
			country_event = { id = giga_fallen_empire_misc.1023 days = 1 }
		}
		event_target:pouchkinn_laboratory_planet = { #The Pouchkinn Engine
			solar_system = {
				every_system_megastructure = {
					limit = { is_megastructure_type = matrioshka_brain_5_o_star }
					upgrade_megastructure_to = pouchkinn_engine_1
				}
			}
		}
		set_name = "Pouchkinnian Finality"
	}
}

#Pouchkinn speaks
country_event = { 
	id = giga_fallen_empire_misc.1023
	title = "giga_fallen_empire_misc.1023.name"
	desc = "giga_fallen_empire_misc.1023.desc"

	is_triggered_only = yes

	diplomatic = yes
	picture_event_data = {
		portrait = event_target:giga_meopa_fe.ruler
		room = giga_pouchkinn_fe_speaks_room
	}
	
	option = {
		name = "giga_fallen_empire_misc.1023.a"
		hidden_effect = {
			country_event = { id = giga_fallen_empire_misc.1024 }
		}
	}
}

#The Pouchkinn Engine
country_event = { 
	id = giga_fallen_empire_misc.1024
	title = "giga_fallen_empire_misc.1024.name"
	desc = "giga_fallen_empire_misc.1024.desc"
	picture = GFX_evt_supernova
	show_sound = event_mystic_reveal
	location = event_target:pouchkinn_big_brain

	is_triggered_only = yes
	
	option = {
		name = "giga_fallen_empire_misc.1024.a"
	}
}

#The Pouchkinn Engine is halway done
country_event = { 
	id = giga_fallen_empire_misc.1025
	title = "giga_fallen_empire_misc.1025.name"
	desc = "giga_fallen_empire_misc.1025.desc"
	picture = GFX_evt_supernova
	show_sound = event_dyson_sphere_build_upgrade_panel
	location = event_target:pouchkinn_big_brain

	is_triggered_only = yes
	
	option = {
		name = "giga_fallen_empire_misc.1025.a"
	}
}

#The Pouchkinn Engine is complete.
country_event = {
	id = giga_fallen_empire_misc.1026
	
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_global_flag = giga_pouchkinn_engine_activated
		get_galaxy_setup_value = {
			which = giga_hyperlane_density
			setting = num_hyperlanes
		}
		multiply_variable = {
			which = giga_hyperlane_density
			value = 4 #Turns all the pesky .25 increments into a full number
		}
		giga_hyperlane_obliteration = yes
		clear_variable = giga_hyperlane_density
		set_update_modifiers_batch = begin
		every_galaxy_planet = {
			limit = { is_colony = yes }
			add_planet_devastation = 100
		}
		event_target:giga_meopa_fe = { #Turn back to normal FE
			change_government = {
				civics = {
					civic = civic_revanchist_fervor
					civic = civic_ancient_caches_of_technology
				}
			}
			set_name = "Gatzo Directors"
			change_country_flag = random
			every_owned_leader = { kill_leader = { show_notification = yes } }
			create_leader = {
				class = scientist
				species = event_target:flusion_katzens
				effect = { save_global_event_target_as = fe_pouchkinn_leader }
			}
			set_leader = event_target:fe_pouchkinn_leader
			event_target:pouchkinn_big_brain = { #Downgrade big brain
				every_system_megastructure = {
					limit = {
						OR = {
							is_megastructure_type = matrioshka_brain_5_o_star 
							is_megastructure_type = pouchkinn_engine_1 
							is_megastructure_type = pouchkinn_engine_2 
							has_megastructure_flag = pouchkinn_engine
						}
					}
					remove_megastructure = THIS
				}
				every_system_ambient_object = { destroy_ambient_object = THIS }
				destroy_star_system = yes
				star = {
					giga_clear_has_mega_flag = yes
				}
			}
			add_modifier = {
				modifier = giga_pouchkinn_fe_disarray
				days = -1
			}
			every_country = {
				limit = { is_ai = no }
				country_event = { id = giga_fallen_empire_misc.1043 days = 5 }
			}
		}
		set_update_modifiers_batch = end
		country_event = { id = giga_fallen_empire_misc.10261 days = 5 }
	}
}
#Pouchkinn's brain is too big
country_event = {
	id = giga_fallen_empire_misc.10261
	
	trigger = {#If it survives with 0 islands this is unneccessary so don't even try
		any_system = {
			hyperlane_eligible = yes
			NOT = {
				distance = {
					source = event_target:pouchkinn_big_brain
					# type = hyperlane
					use_bypasses = no
					min_jumps = 1
					max_jumps = 999
				}
			}
		}
	}

	hide_window = yes

	is_triggered_only = yes

	immediate = {#Finish the cleanup
	set_spawn_system_batch = begin
		every_system = {
			limit = {
				hyperlane_eligible = yes
				NOT = {
					distance = {
						source = event_target:pouchkinn_big_brain
						# type = hyperlane
						use_bypasses = no
						min_jumps = 1
						max_jumps = 999
					}
				}
			}
			if = {
				limit = {
					NOR = {
						any_neighbor_system = {
							OR = {
								has_star_flag = pouchkinn_connection
								any_neighbor_system = {
									OR = {
										has_star_flag = pouchkinn_connection
										any_neighbor_system = {
											has_star_flag = pouchkinn_connection
										}
									}
								}
							}
						}
						has_star_flag = pouchkinn_connection
					}
				}
				random_neighbor_system_euclidean = {
					limit = {
						hyperlane_eligible = yes
						NOT = {
							distance = {
								source = event_target:pouchkinn_big_brain
								# type = hyperlane
								use_bypasses = no
								min_jumps = 1
								max_jumps = 999
							}
						}
					}
					add_hyperlane_safe = { from = prev to = this }
					set_star_flag = pouchkinn_connection
				}
				every_neighbor_system = {
					if = {
						limit = { NOT = { has_star_flag = pouchkinn_connection } } 
						set_star_flag = pouchkinn_connection
					}
					every_neighbor_system = {
						if = {
							limit = { NOT = { has_star_flag = pouchkinn_connection } }
							set_star_flag = pouchkinn_connection
						}
					}
				}
				set_star_flag = pouchkinn_connection
			}
		}
		set_spawn_system_batch = end
		every_system = {
			remove_star_flag = pouchkinn_connection
		}
		country_event = { id = giga_fallen_empire_misc.10262 days = 5 }# as many times as is needed until its right
	}
}

country_event = {
	id = giga_fallen_empire_misc.10262
	
	trigger = {
		any_system = {
			hyperlane_eligible = yes
			NOT = {
				distance = {
					source = event_target:pouchkinn_big_brain
					# type = hyperlane
					use_bypasses = no
					min_jumps = 1
					max_jumps = 999
				}
			}
		}
	}

	hide_window = yes

	is_triggered_only = yes

	immediate = {#Finish the cleanup
	set_spawn_system_batch = begin
		every_system = {
			limit = {
				hyperlane_eligible = yes
				NOT = {
					distance = {
						source = event_target:pouchkinn_big_brain
						# type = hyperlane
						use_bypasses = no
						min_jumps = 1
						max_jumps = 999
					}
				}
			}
			if = {
				limit = {
					NOR = {
						any_neighbor_system = {
							OR = {
								has_star_flag = pouchkinn_connection
								any_neighbor_system = {
									OR = {
										has_star_flag = pouchkinn_connection
										any_neighbor_system = {
											has_star_flag = pouchkinn_connection
										}
									}
								}
							}
						}
						has_star_flag = pouchkinn_connection
					}
				}
				while = { 
					count = 2
					random_neighbor_system_euclidean = {
						limit = {
							hyperlane_eligible = yes
						}
						add_hyperlane_safe = { from = prev to = this }
						set_star_flag = pouchkinn_connection
					}
				}
				every_neighbor_system = {
					if = {
						limit = { NOT = { has_star_flag = pouchkinn_connection } } 
						set_star_flag = pouchkinn_connection
					}
					every_neighbor_system = {
						if = {
							limit = { NOT = { has_star_flag = pouchkinn_connection } }
							set_star_flag = pouchkinn_connection
						}
					}
				}
				set_star_flag = pouchkinn_connection
			}
		}
		set_spawn_system_batch = end
		every_system = {
			remove_star_flag = pouchkinn_connection
		}
	}
}

#The Pouchkinn Engine is complete.
country_event = { 
	id = giga_fallen_empire_misc.1027
	title = "giga_fallen_empire_misc.1027.name"
	desc = "giga_fallen_empire_misc.1027.desc"
	picture = GFX_evt_supernova
	show_sound = event_screams
	location = event_target:pouchkinn_big_brain

	is_triggered_only = yes
	
	option = {
		name = "giga_fallen_empire_misc.1027.a"
		hidden_effect = {
			country_event = { id = giga_fallen_empire_misc.1028 }
		}
	}
}

#Pouchkinn speaks
country_event = { 
	id = giga_fallen_empire_misc.1028
	title = "giga_fallen_empire_misc.1028.name"
	desc = "giga_fallen_empire_misc.1028.desc"

	is_triggered_only = yes

	diplomatic = yes
	picture_event_data = {
		portrait = event_target:giga_backup_pouchkinn
		room = pouchkinn_ascended_room
	}
	
	option = {
		name = "giga_fallen_empire_misc.1028.a"
		hidden_effect = {
			country_event = { id = giga_fallen_empire_misc.1029 }
		}
	}
}

#The Pouchkinn Engine is complete.
country_event = { 
	id = giga_fallen_empire_misc.1029
	title = "giga_fallen_empire_misc.1029.name"
	desc = "giga_fallen_empire_misc.1029.desc"
	picture = GFX_evt_black_hole
	show_sound = event_ghost_town
	location = event_target:pouchkinn_big_brain

	is_triggered_only = yes
	
	option = {
		name = "giga_fallen_empire_misc.1029.a"
		custom_tooltip = "giga_fallen_empire_misc.1029.a.tooltip"
	}
}

#Monthly event for Pouchkinn
event = {
	id = giga_fallen_empire_misc.1040
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = pouchkinn_gatzo_fe
		NOR = {
			has_global_flag = giga_pouchkinn_event_chain_ended
			has_global_flag = giga_pouchkinn_engine_destroyed
			has_global_flag = giga_pouchkinn_engine_activated
		}
	}

	immediate = {
		if = { #Pouchkinn repeatables
			limit = { any_country = { has_country_flag = giga_pouchkinn_meopa_fe } }
			event_target:giga_meopa_fe = {
				if = {
					limit = { leader = { NOT = { has_leader_flag = fe_pouchkinn_leader } } }
					create_leader = {
						class = scientist
						gender = male
						species = event_target:pouchkinn_species
						immortal = yes
						name = "Weeny Pouchkinn"
						skill = 8
						set_age = 14697
						effect = {
							set_leader_flag = fe_pouchkinn_leader
							save_global_event_target_as = fe_pouchkinn_leader
						}
					}
					set_leader = event_target:fe_pouchkinn_leader
					leader = { add_trait = pouchkinn_trait_deranged }
				}
				subtract_variable = {
					which = giga_pouchkinn_fe_months_till_repeatable
					value = 1
				}
				if = {
					limit = {
						check_variable = {
							which = giga_pouchkinn_fe_months_till_repeatable
							value = 0
						}
					}
					remove_modifier = giga_fe_repeatables_modifier
					change_variable = {
						which = giga_fe_repeatable_count
						value = 1
					}
					add_modifier = {
						modifier = giga_fe_repeatables_modifier
						days = -1
						multiplier = giga_fe_repeatable_count
					}
					if = {
						limit = { is_country_type = fallen_empire }
						set_variable = {
							which = giga_pouchkinn_fe_months_till_repeatable
							value = 60
						}
					}
					else_if = {
						limit = { is_country_type = awakened_fallen_empire }
						set_variable = {
							which = giga_pouchkinn_fe_months_till_repeatable
							value = 12
						}
					}
				}
			}
			if = { #Meopa FE lost the Big Brain
				limit = {
					event_target:giga_meopa_fe = {
						is_country_type = fallen_empire
						has_ai_personality = fallen_empire_pouchkinn
						NOT = { any_owned_megastructure = { is_megastructure_type = matrioshka_brain_5_o_star } }
					}
				}
				set_global_flag = giga_pouchkinn_engine_destroyed
				set_global_flag = giga_pouchkinn_event_chain_ended
				event_target:giga_meopa_fe = { #Turn back to normal FE
					change_government = { #change government to change personality
						authority = auth_imperial
						civics = {
							civic = civic_lethargic_leadership
							civic = civic_empire_in_decline
						}
					}
					set_name = "Gatzo Archivists"
					change_country_flag = random
					every_owned_leader = { kill_leader = { show_notification = yes } }
					create_leader = {
						class = scientist
						species = event_target:flusion_katzens
						effect = { save_global_event_target_as = fe_pouchkinn_leader }
					}
					set_leader = event_target:fe_pouchkinn_leader
				}
				event_target:pouchkinn_big_brain = { #Downgrade big brain
					every_system_megastructure = {
						limit = { is_megastructure_type = matrioshka_brain_5_o_star }
						remove_megastructure = THIS
					}
					spawn_megastructure = {
						type = matrioshka_brain_4_o_star
						planet = PREV
						owner = space_owner
					}
					star = {
						giga_clear_has_mega_flag = yes
					}
				}
				every_country = {
					limit = { is_ai = no }
					country_event = { id = giga_fallen_empire_misc.1041 }
				}
			}
			if = { #Meopa AE lost the Big Brain
				limit = {
					event_target:giga_meopa_fe = {
						is_country_type = awakened_fallen_empire
						has_ai_personality = fallen_empire_awoken_pouchkinn
						NOR = {
							any_owned_megastructure = { is_megastructure_type = matrioshka_brain_5_o_star }
							any_owned_megastructure = { is_megastructure_type = pouchkinn_engine_1 } 
							any_owned_megastructure = { is_megastructure_type = pouchkinn_engine_2 } 
						}
					}
				}
				set_global_flag = giga_pouchkinn_engine_destroyed
				set_global_flag = giga_pouchkinn_event_chain_ended
				event_target:giga_meopa_fe = { #Turn back to normal FE
					change_government = {
						civics = {
							civic = civic_revanchist_fervor
							civic = civic_ancient_caches_of_technology
						}
					}
					set_name = "Gatzo Directors"
					change_country_flag = random
					every_owned_leader = { kill_leader = { show_notification = yes } }
					create_leader = {
						class = scientist
						species = event_target:flusion_katzens
						effect = { save_global_event_target_as = fe_pouchkinn_leader }
					}
					set_leader = event_target:fe_pouchkinn_leader
				}
				event_target:pouchkinn_big_brain = { #Downgrade big brain
					every_system_megastructure = {
						limit = {
							OR = {
								is_megastructure_type = matrioshka_brain_5_o_star 
								is_megastructure_type = pouchkinn_engine_1 
								is_megastructure_type = pouchkinn_engine_2 
							}
						}
						remove_megastructure = THIS
					}
					spawn_megastructure = {
						type = matrioshka_brain_4_o_star
						planet = PREV
						owner = space_owner
					}
					star = {
						giga_clear_has_mega_flag = yes
					}
				}
				add_modifier = {
					modifier = giga_pouchkinn_fe_disarray
					days = -1
				}
				every_country = {
					limit = { is_ai = no }
					country_event = { id = giga_fallen_empire_misc.1042 }
				}
			}
		}
		else_if = { #Pouchkinn gone during AE
			limit = {
				NOT = { any_country = { has_country_flag = giga_pouchkinn_meopa_fe } }
				has_global_flag = giga_pouchkinn_engine_started
			}
			set_global_flag = giga_pouchkinn_engine_destroyed
			set_global_flag = giga_pouchkinn_event_chain_ended
			event_target:pouchkinn_big_brain = {
				if = {
					limit = {
						any_system_megastructure = {
							OR = {
								is_megastructure_type = matrioshka_brain_5_o_star 
								is_megastructure_type = pouchkinn_engine_1 
								is_megastructure_type = pouchkinn_engine_2 
							}
						}
					}
					every_system_megastructure = {
						limit = {
							OR = {
								is_megastructure_type = matrioshka_brain_5_o_star 
								is_megastructure_type = pouchkinn_engine_1 
								is_megastructure_type = pouchkinn_engine_2 
							}
						}
						remove_megastructure = THIS
					}
					spawn_megastructure = {
						type = matrioshka_brain_4_o_star
						planet = PREV
						owner = space_owner
					}
					star = {
						giga_clear_has_mega_flag = yes
					}
				}
			}
			every_country = {
				limit = { is_ai = no }
				country_event = { id = giga_fallen_empire_misc.1044 }
			}
		}
		else_if = { #Destroyed FE before awakening
			limit = {
				NOT = { any_country = { has_country_flag = giga_pouchkinn_meopa_fe } }
				NOT = { has_global_flag = giga_pouchkinn_engine_started }
			}
			set_global_flag = giga_pouchkinn_event_chain_ended
			set_global_flag = giga_pouchkinn_engine_destroyed
			event_target:pouchkinn_big_brain = {
				if = {
					limit = {
						any_system_megastructure = {
							OR = {
								is_megastructure_type = matrioshka_brain_5_o_star 
								is_megastructure_type = pouchkinn_engine_1 
								is_megastructure_type = pouchkinn_engine_2 
							}
						}
					}
					every_system_megastructure = {
						limit = {
							OR = {
								is_megastructure_type = matrioshka_brain_5_o_star 
								is_megastructure_type = pouchkinn_engine_1 
								is_megastructure_type = pouchkinn_engine_2 
							}
						}
						remove_megastructure = THIS
					}
					spawn_megastructure = {
						type = matrioshka_brain_4_o_star
						planet = PREV
						owner = space_owner
					}
					star = {
						giga_clear_has_mega_flag = yes
					}
				}
			}
			every_country = {
				limit = { is_ai = no }
				country_event = { id = giga_fallen_empire_misc.1045 }
			}
		}
	}
}

#Brain seized pre-awakening
country_event = { 
	id = giga_fallen_empire_misc.1041
	title = "giga_fallen_empire_misc.1041.name"
	desc = "giga_fallen_empire_misc.1041.desc"
	picture = GFX_evt_sapient_AI
	show_sound = event_mystic_reveal
	location = event_target:pouchkinn_big_brain

	is_triggered_only = yes
	
	option = {
		name = "giga_fallen_empire_misc.1041.a"
		custom_tooltip = "giga_fallen_empire_misc.1041.a.tooltip"
	}
}

#Brain seized post-awakening
country_event = { 
	id = giga_fallen_empire_misc.1042
	title = "giga_fallen_empire_misc.1042.name"
	desc = "giga_fallen_empire_misc.1042.desc"
	picture = GFX_evt_supernova
	show_sound = event_super_explosion
	location = event_target:pouchkinn_big_brain

	is_triggered_only = yes
	
	option = {
		name = "giga_fallen_empire_misc.1042.a"
		custom_tooltip = "giga_fallen_empire_misc.1042.a.tooltip"
		event_target:giga_meopa_fe = {
			add_modifier = {
				modifier = giga_pouchkinn_fe_disarray
				days = -1
			}
		}
	}
}

#Post-awakening
country_event = { 
	id = giga_fallen_empire_misc.1043
	title = "giga_fallen_empire_misc.1043.name"
	desc = "giga_fallen_empire_misc.1043.desc"
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot
	location = event_target:pouchkinn_big_brain

	is_triggered_only = yes
	
	option = {
		name = "giga_fallen_empire_misc.1043.a"
		custom_tooltip = "giga_fallen_empire_misc.1043.a.tooltip"
		event_target:giga_meopa_fe = {
			add_modifier = {
				modifier = giga_pouchkinn_fe_disarray
				days = -1
			}
		}
	}
}

country_event = { 
	id = giga_fallen_empire_misc.1044
	title = "giga_fallen_empire_misc.1044.name"
	desc = "giga_fallen_empire_misc.1044.desc"
	picture = GFX_evt_death_from_above
	show_sound = event_super_explosion
	location = event_target:pouchkinn_big_brain

	is_triggered_only = yes
	
	option = {
		name = "giga_fallen_empire_misc.1044.a"
	}
}

country_event = { 
	id = giga_fallen_empire_misc.1045
	title = "giga_fallen_empire_misc.1045.name"
	desc = "giga_fallen_empire_misc.1045.desc"
	picture = GFX_evt_death_from_above
	show_sound = event_super_explosion
	location = event_target:pouchkinn_big_brain

	is_triggered_only = yes
	
	option = {
		name = "giga_fallen_empire_misc.1045.a"
	}
}

country_event = {
	id = giga_fallen_empire_misc.1046
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_megastructure = {
			limit = { is_megastructure_type = pouchkinn_engine_1 }
			upgrade_megastructure_to = pouchkinn_engine_2
		}
	}
}

# give FEs adjusted buildings for supertensiles
country_event = {
	id = giga_fallen_empire_misc.1047
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# set half of forges to foundries
		every_owned_planet = {
			limit = {
				num_buildings = {
					type = building_nano_forge
					value > 0
				}
			}

			while = {
				count = value:giga_amb_fe_conversion

				remove_building = building_nano_forge
				add_building = building_giga_fe_megaworkshop_2
			}

			prev = { set_country_flag = fe_megaworkshop }
		}

		# if we didn't set any, try for an affluence centre
		if = {
			limit = {
				not = {
					has_country_flag = fe_megaworkshop
				}
			}

			random_owned_planet = {
				limit = {
					num_buildings = {
						type = building_affluence_center
						value > 0
					}
				}

				remove_building = building_affluence_center
				add_building = building_giga_fe_megaworkshop_2

				prev = { set_country_flag = fe_megaworkshop }
			}

			# and if that didn't work, go for a nourishment centre
			if = {
				limit = {
					not = {
						has_country_flag = fe_megaworkshop
					}
				}
	
				random_owned_planet = {
					limit = {
						num_buildings = {
							type = building_nourishment_center
							value > 0
						}
					}
	
					remove_building = building_nourishment_center
					add_building = building_giga_fe_megaworkshop_2
				}
			}
		}

		# if those didn't work... idk lol guess they don't get any

		# clean up after yourself
		remove_country_flag = fe_megaworkshop
	}
}

#For when GPM is drunk and needs to go home
namespace = giga_fe_cleanup
planet_event = {
	id = giga_fe_cleanup.001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = guillis_planet_modifiers_active
		has_planet_flag = gigas_fe_modifier_cleanup
	}
	#bang, bang, there all clean again
	immediate = {
		gpm_remove_fallen_empire_modifiers = yes
		remove_planet_flag = gigas_fe_modifier_cleanup
	}
}