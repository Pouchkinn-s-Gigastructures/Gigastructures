namespace = giga_ring_origins

### Great Ring Origin
country_event = {
	id = giga_ring_origins.001
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_origin = origin_great_ring }

	immediate = {
		if = {
			limit = { is_ai = yes }
			capital_scope.solar_system = { set_star_flag = gigas_new_planets }
			giga_reset_ai_start = yes
		}
		else = {
			capital_scope = {
				solar_system = {
					remove_star_flag = sol_sector	# cleanup of stuff used to block New Frontiers subclasser
					star = {
						add_deposit = d_dark_matter_deposit_2
						while = { count = 5 giga_field_debris = yes }
						giga_set_has_mega_flag = yes
					}
					while = { count = 5 giga_field_system_debris = yes }

					spawn_megastructure = { type = "ring_world_behemoth_ruined"		orbit_angle = 90	orbit_distance = 134 }
					spawn_megastructure = { type = "ring_world_behemoth_ruined"		orbit_angle = 180	orbit_distance = 134 }
					spawn_megastructure = { type = "ring_world_behemoth_ruined"		orbit_angle = 270	orbit_distance = 134 }

					spawn_planet = {
						class = pc_ringworld_tech
						location = solar_system
						orbit_angle_offset = 300
						orbit_distance_offset = 134
						size = 15

						init_effect = {
							set_name = "Ring Section"
							root = {
								giga_set_ringworld_graphical_culture = {
									TARGET = prev
									SOURCE = this
									SIZE = behemoth
									TYPE = tech
								}
							}

							save_event_target_as = ring_section
							trigger_megastructure_icon = yes

							set_planet_flag = forbid_guillis_planet_modifiers
							set_planet_flag = gpm_has_planet_rings
							set_planet_flag = hot_zone				# Real Space (Prevents Rings)
							set_planet_flag = megastructure
							set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
							set_planet_flag = giga_ringworld_tit
							set_planet_flag = giga_ringworld_beh
						}
					}

					spawn_planet = {
						class = pc_ringworld_seam
						location = solar_system
						orbit_angle_offset = 270
						orbit_distance_offset = 134
						size = 15

						init_effect = {
							set_name = "Ring Section"
							root = {
								giga_set_ringworld_graphical_culture = {
									TARGET = prev
									SOURCE = this
									SIZE = behemoth
									TYPE = seam
								}
							}

							save_event_target_as = ring_section
							trigger_megastructure_icon = yes

							set_planet_flag = forbid_guillis_planet_modifiers
							set_planet_flag = gpm_has_planet_rings
							set_planet_flag = hot_zone				# Real Space (Prevents Rings)
							set_planet_flag = megastructure
							set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
							set_planet_flag = giga_ringworld_tit
							set_planet_flag = giga_ringworld_beh
						}
					}

					add_asteroid_belt = { type = icy_asteroid_belt		radius = 30 }
					# 'asteroid' belt : energy 1
					spawn_planet = {
						class = pc_ice_asteroid
						size = 2
						location = star
						orbit_distance_offset = 30
						orbit_angle_offset = 0
						init_effect = {
							set_name = "Bountiful Debris"
							set_planet_flag = ignore_startup_effect
							set_planet_flag = starting_deposit
							clear_deposits = yes
							add_deposit = d_energy_3
							add_deposit = d_energy_3
							add_deposit = d_energy_3
						}
					}
					# 'asteroid' belt : energy 2
					spawn_planet = {
						class = pc_ice_asteroid
						size = 2
						location = star
						orbit_distance_offset = 30
						orbit_angle_offset = 60
						init_effect = {
							set_name = "Bountiful Debris"
							set_planet_flag = ignore_startup_effect
							set_planet_flag = starting_deposit
							clear_deposits = yes
							add_deposit = d_energy_3
							add_deposit = d_energy_3
							add_deposit = d_energy_3
						}
					}
					# 'asteroid' belt : science
					spawn_planet = {
						class = pc_ice_asteroid
						size = 2
						location = star
						orbit_distance_offset = 30
						orbit_angle_offset = 120
						init_effect = {
							set_name = "Bountiful Debris"
							set_planet_flag = ignore_startup_effect
							set_planet_flag = starting_deposit
							clear_deposits = yes
							add_deposit = d_physics_3
							add_deposit = d_society_3
							add_deposit = d_engineering_3
						}
					}
					# 'asteroid' belt : minerals 1
					spawn_planet = {
						class = pc_ice_asteroid
						size = 2
						location = star
						orbit_distance_offset = 30
						orbit_angle_offset = 180
						init_effect = {
							set_name = "Bountiful Debris"
							set_planet_flag = ignore_startup_effect
							set_planet_flag = starting_deposit
							clear_deposits = yes
							add_deposit = d_minerals_3
							add_deposit = d_minerals_3
							add_deposit = d_minerals_3
						}
					}
					# 'asteroid' belt : minerals 2
					spawn_planet = {
						class = pc_ice_asteroid
						size = 2
						location = star
						orbit_distance_offset = 30
						orbit_angle_offset = 240
						init_effect = {
							set_name = "Bountiful Debris"
							set_planet_flag = ignore_startup_effect
							set_planet_flag = starting_deposit
							clear_deposits = yes
							add_deposit = d_minerals_3
							add_deposit = d_minerals_3
							add_deposit = d_minerals_3
						}
					}
					# 'asteroid' belt : energy 3
					spawn_planet = {
						class = pc_ice_asteroid
						size = 2
						location = star
						orbit_distance_offset = 30
						orbit_angle_offset = 300

						init_effect = {
							set_name = "Bountiful Debris"
							set_planet_flag = ignore_startup_effect
							set_planet_flag = starting_deposit
							clear_deposits = yes
							add_deposit = d_energy_3
							add_deposit = d_energy_3
							add_deposit = d_energy_3
						}
					}

					# Create mining stations
					every_system_planet = {
						limit = { is_star = no }
						if = {
							limit = {
								has_deposit_for = shipclass_mining_station
								has_mining_station = no
							}
							create_mining_station = { owner = root }
						}
						else_if = {
							limit = {
								has_deposit_for = shipclass_research_station
								has_research_station = no
							}
							create_research_station = { owner = root }
						}
					}
				}

				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = gpm_has_planet_rings
				set_planet_flag = hot_zone				# Real Space (Prevents Rings)
				set_planet_flag = megastructure
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_ringworld_tit
				set_planet_flag = giga_ringworld_beh
				root = {
					giga_set_ringworld_graphical_culture = {
						TARGET = prev
						SOURCE = this
						SIZE = behemoth
						TYPE = gaia_habitable
					}
				}

				prevent_anomaly = yes
				trigger_megastructure_icon = yes
				clear_blockers = yes
				clear_deposits = yes
				remove_all_districts = yes

				add_deposit = d_giga_arcane_generator
				add_deposit = d_giga_decrepit_tunnels_1
				add_deposit = d_giga_decrepit_tunnels_2
				add_deposit = d_giga_decrepit_tunnels_3
				add_deposit = d_great_ring_excavated_mountain
				add_deposit = d_ringworld_capital_city
				add_deposit = d_segment_rubble_3
				add_deposit = d_segment_rubble_4
				add_district = district_rw_industrial

				# special deposit blockers for DA/RS machines
				if = {
					limit = {
						root = {
							OR = {
								has_valid_civic = civic_machine_servitor
								has_valid_civic = civic_machine_assimilator
							}
						}
					}
					add_deposit = d_segment_rubble_1
					add_deposit = d_segment_rubble_1
					add_deposit = d_segment_rubble_2
					add_deposit = d_segment_rubble_2
				}

				# normal empires
				if = {
					limit = {
						root = { is_gestalt = no }
					}
					add_district = district_rw_city
					# is biological
					if = {
						limit = { root = { is_lithoid_empire = no } }
						add_district = district_rw_farming
					}
					# is lithoid
					else = {
						add_deposit = d_interstellar_ringworld_commerce_blocker
						add_district = district_rw_commercial
						add_deposit = d_great_ring_excavated_mountain
					}
				}
				# hiveminds
				if = {
					limit = { root = { is_hive_empire = yes } }
					add_district = district_rw_hive
					# is biological
					if = {
						limit = { root = { is_lithoid_empire = no } }
						add_district = district_rw_farming
					}
					# is lithoid
					else = {
						add_district = district_rw_generator
						add_deposit = d_great_ring_excavated_mountain
					}
				}
				# machine empires
				else_if = {
					limit = { root = { is_machine_empire = yes } }
					add_district = district_rw_nexus
					# is normal machine empire
					if = {
						limit = {
							root = {
								NOR = {
									has_valid_civic = civic_machine_assimilator
									has_valid_civic = civic_machine_servitor
								}
							}
						}
						add_district = district_rw_generator
					}
					else = {
						# rogue servitor / determined assimilator with biological pops
						if = {
							limit = {
								root = { NOT = { any_owned_pop = { has_trait = trait_lithoid } } }
							}
							add_district = district_rw_nexus
							add_building = building_giga_interstellar_hydroponic_farm
							remove_deposit = d_segment_rubble_1
							remove_deposit = d_segment_rubble_1
							remove_deposit = d_segment_rubble_2
							remove_deposit = d_segment_rubble_2
						}
						# rogue servitor / determined assimilator with lithoid pops
						else = {
							add_district = district_rw_nexus
							add_deposit = d_great_ring_excavated_mountain
							remove_deposit = d_segment_rubble_2
							remove_deposit = d_segment_rubble_2
						}
					}
				}
			}
		}
	}
}

### Penrose Origin
country_event = {
	id = giga_ring_origins.002
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_origin = origin_penrose_ring }

	immediate = {
		if = {
			limit = { is_ai = yes }
			capital_scope.solar_system = { set_star_flag = gigas_new_planets }
			giga_reset_ai_start = yes
		}
		else = {
			capital_scope = {
				solar_system = {
					remove_star_flag = sol_sector	# cleanup of stuff used to block New Frontiers subclasser
					star = {
						giga_field_debris = yes
						giga_set_has_mega_flag = yes
					}
					while = { count = 2 giga_field_system_debris = yes }
					spawn_megastructure = {
						type = relic_penrose_sphere_1
						owner = root
					}

					### gigastructures / interstellar ringworld section - block 1
					spawn_planet = {
						class = pc_giga_penrose_habitable
						location = solar_system
						orbit_angle_offset = 90
						orbit_distance_offset = 45
						size = 28

						init_effect = {
							set_name = "Penrose Ringworld Section B"
							set_planet_entity = {
								entity = "penrose_sphere_ringworld_01_entity"
								graphical_culture = owner
							}

							save_event_target_as = penrose_section
							trigger_megastructure_icon = yes

							set_planet_flag = forbid_guillis_planet_modifiers
							set_planet_flag = gpm_has_planet_rings
							set_planet_flag = hot_zone				# Real Space (Prevents Rings)
							set_planet_flag = megastructure
							set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
							set_planet_flag = giga_penrose
						}
					}
				}

				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = gpm_has_planet_rings
				set_planet_flag = hot_zone				# Real Space (Prevents Rings)
				set_planet_flag = megastructure
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_penrose

				prevent_anomaly = yes
				trigger_megastructure_icon = yes
				clear_blockers = yes
				clear_deposits = yes
				remove_all_districts = yes
				add_deposit = d_giga_arcane_generator
				add_deposit = d_giga_decrepit_tunnels_1
				add_deposit = d_giga_decrepit_tunnels_2
				add_deposit = d_giga_decrepit_tunnels_3
				add_deposit = d_great_ring_excavated_mountain
				add_deposit = d_ringworld_capital_city
				add_deposit = d_segment_rubble_3
				add_deposit = d_segment_rubble_4
				# add_district = district_penrose_industrial

				# special deposit blockers for DA/RS machines
				if = {
					limit = {
						root = {
							OR = {
								has_valid_civic = civic_machine_servitor
								has_valid_civic = civic_machine_assimilator
							}
						}
					}
					add_deposit = d_segment_rubble_1
					add_deposit = d_segment_rubble_1
					add_deposit = d_segment_rubble_2
					add_deposit = d_segment_rubble_2
				}
				ROOT = {#Habitability force change for secondary species
					every_owned_pop_species = { 
						if = {
							limit = {
								has_trait = trait_pc_continental_preference
							}
							change_species_characteristics = {
								remove_trait = trait_pc_continental_preference
								add_traits_at_start_of_list = yes
								add_trait = trait_pc_giga_penrose_habitable_preference
							}
						}
					}
				}
				# normal empires
				if = {
					limit = { root = { is_gestalt = no } }
					# add_district = district_penrose_city
					# is biological
					if = {
						limit = { root = { is_lithoid_empire = no } }
						# add_district = district_penrose_farming
					}
					# is lithoid
					else = {
						# add_district = district_penrose_commercial
						add_deposit = d_great_ring_excavated_mountain
					}
				}
				# hivemind empires
				if = {
					limit = { root = { is_hive_empire = yes } }
					# add_district = district_penrose_hive
					# is biological
					if = {
						limit = { root = { is_lithoid_empire = no } }
						# add_district = district_penrose_farming
					}
					# is lithoid
					else = {
						# add_district = district_penrose_generator
						add_deposit = d_great_ring_excavated_mountain
					}
				}
				# machine empires
				else_if = {
					limit = { root = { is_machine_empire = yes } }
					# add_district = district_penrose_nexus
					# add_district = district_penrose_generator
					# rogue servitor / determined assimilator with biological pops
					if = {
						limit = {
							root = {
								OR = {
									has_valid_civic = civic_machine_assimilator
									has_valid_civic = civic_machine_servitor
								}
							}
						}
						if = {
							limit = {
								root = { NOT = { any_owned_pop = { has_trait = trait_lithoid } } }
							}
							add_building = building_giga_interstellar_hydroponic_farm
							remove_deposit = d_segment_rubble_1
							remove_deposit = d_segment_rubble_1
							remove_deposit = d_segment_rubble_2
						}
						# rogue servitor / determined assimilator with lithoid pops
						else = {
							add_deposit = d_great_ring_excavated_mountain
							remove_deposit = d_segment_rubble_2
							remove_deposit = d_segment_rubble_2
						}
					}
				}
			}
		}
	}
}

### Interstellar Origin
country_event = {
	id = giga_ring_origins.003
	hide_window = yes
	is_triggered_only = yes

	trigger = { has_origin = origin_interstellar_ring }

	immediate = {
		if = {
			limit = { is_ai = yes }
			capital_scope.solar_system = { set_star_flag = gigas_new_planets }
			giga_reset_ai_start = yes
		}
		else = {
			capital_scope = {
				solar_system = {
					remove_star_flag = sol_sector	# cleanup of stuff used to block New Frontiers subclasser
					star = {
						giga_field_debris = yes
						giga_set_has_mega_flag = yes
					}
					while = { count = 2 giga_field_system_debris = yes }
					spawn_megastructure = {
						type = interstellar_habitat_completed_core
						owner = root
					}

					### gigastructures / interstellar ringworld section - block 1
					spawn_planet = {
						class = pc_interstellar_ringworld_habitable
						location = solar_system
						orbit_angle_offset = 0
						orbit_distance_offset = 45
						size = 10

						init_effect = {
							set_name = "Interstellar Ringworld Section B"
							set_planet_entity = {
								entity = "interstellar_ringworld_01_entity"
								graphical_culture = owner
							}

							save_event_target_as = interstellar_section
							trigger_megastructure_icon = yes

							set_planet_flag = forbid_guillis_planet_modifiers
							set_planet_flag = gpm_has_planet_rings
							set_planet_flag = hot_zone				# Real Space (Prevents Rings)
							set_planet_flag = megastructure
							set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
							set_planet_flag = giga_interstellar_ring
						}
					}

					### gigastructures / interstellar ringworld section - block 2
					spawn_planet = {
						class = pc_interstellar_ringworld_habitable
						location = solar_system
						orbit_angle_offset = 90
						orbit_distance_offset = 45
						size = 10

						init_effect = {
							set_name = "Interstellar Ringworld Section C"
							set_planet_entity = {
								entity = "interstellar_ringworld_01_entity"
								graphical_culture = owner
							}

							save_event_target_as = interstellar_section
							trigger_megastructure_icon = yes

							set_planet_flag = forbid_guillis_planet_modifiers
							set_planet_flag = gpm_has_planet_rings
							set_planet_flag = hot_zone				# Real Space (Prevents Rings)
							set_planet_flag = megastructure
							set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
							set_planet_flag = giga_interstellar_ring
						}
					}

					### gigastructures / interstellar ringworld section - block 3
					spawn_planet = {
						class = pc_interstellar_ringworld_habitable
						location = solar_system
						orbit_angle_offset = 180
						orbit_distance_offset = 45
						size = 10

						init_effect = {
							set_name = "Interstellar Ringworld Section D"
							set_planet_entity = {
								entity = "interstellar_ringworld_01_entity"
								graphical_culture = owner
							}

							save_event_target_as = interstellar_section
							trigger_megastructure_icon = yes

							set_planet_flag = forbid_guillis_planet_modifiers
							set_planet_flag = gpm_has_planet_rings
							set_planet_flag = hot_zone				# Real Space (Prevents Rings)
							set_planet_flag = megastructure
							set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
							set_planet_flag = giga_interstellar_ring
						}
					}
				}

				set_planet_size = 10

				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = gpm_has_planet_rings
				set_planet_flag = hot_zone				# Real Space (Prevents Rings)
				set_planet_flag = megastructure
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_interstellar_ring

				prevent_anomaly = yes
				trigger_megastructure_icon = yes
				clear_blockers = yes
				clear_deposits = yes
				remove_all_districts = yes

				add_deposit = d_giga_arcane_generator
				add_deposit = d_giga_decrepit_tunnels_1
				add_deposit = d_giga_decrepit_tunnels_2
				add_deposit = d_giga_decrepit_tunnels_3
				add_deposit = d_great_ring_excavated_mountain
				add_deposit = d_ringworld_capital_city
				#add_deposit = d_segment_rubble_3
				#add_deposit = d_segment_rubble_4
				# add_district = district_interstellar_industrial

				# normal empires
				if = {
					limit = { root = { is_gestalt = no } }
					# add_district = district_interstellar_city
					# is biological
					if = {
						limit = { root = { is_lithoid_empire = no } }
						# add_district = district_interstellar_commercial
						add_building = building_giga_interstellar_hydroponic_farm
					}
					# is lithoid
					else = {
						# add_district = district_interstellar_commercial
						add_deposit = d_great_ring_excavated_mountain
					}
				}
				# hiveminds
				else_if = {
					limit = { root = { is_hive_empire = yes } }
					# add_district = district_interstellar_hive
					# is biological
					if = {
						limit = { root = { is_lithoid_empire = no } }
						# add_district = district_interstellar_generator
						add_building = building_giga_interstellar_hydroponic_farm
					}
					# is lithoid
					else = {
						# add_district = district_interstellar_generator
						add_deposit = d_great_ring_excavated_mountain
					}
				}
				# machine empires
				else_if = {
					limit = { root = { is_machine_empire = yes } }
					# add_district = district_interstellar_nexus
					# add_district = district_interstellar_generator
					# rogue servitor / determined assimilator with biological pops
					if = {
						limit = {
							root = {
								OR = {
									has_valid_civic = civic_machine_assimilator
									has_valid_civic = civic_machine_servitor
								}
							}
						}
						if = {
							limit = {
								root = { NOT = { any_owned_pop = { has_trait = trait_lithoid } } }
							}
							add_building = building_giga_interstellar_hydroponic_farm
						}
						# rogue servitor / determined assimilator with lithoid pops
						else = {
							add_deposit = d_great_ring_excavated_mountain
						}
					}
				}
			}
		}
	}
}

### On relic Penrose sphere restored
country_event = {
	id = giga_ring_origins.101
	title = "giga_ring_origins.101.name"
	desc = "giga_ring_origins.101.desc"
	picture = GFX_evt_black_hole
	show_sound = event_dyson_sphere_build_complete
	location = event_target:relic_penrose_sphere
	is_triggered_only = yes
	immediate = { set_country_flag = has_built_or_repaired_gigastructure }
	option = { name = EXCELLENT }
}