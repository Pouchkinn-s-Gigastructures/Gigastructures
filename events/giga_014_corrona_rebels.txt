namespace = giga_flusionoperations_debug

country_event = {
	id = giga_flusionoperations_debug.1

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:gigaflusion = {
			change_pc = {
				class = pc_giga_siegfried_world
				inherit_entity = yes
			}
		}
	}
}

country_event = {
	id = giga_flusionoperations_debug.2

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = "solak_resources"
				value = 100
			}
		}
	}
}

country_event = {
	id = giga_flusionoperations_debug.3

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			set_variable = {
				which = "katzen_wary"
				value = 0
			}
		}
	}
}

country_event = {
	id = giga_flusionoperations_debug.4

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:gigaflusion = {
			set_planet_entity = { entity = flusion_planet_ecugaia_01_entity }
		}
	}
}

planet_event = {
	id = giga_flusionoperations_debug.5

	hide_window = yes
	is_triggered_only = yes


	immediate = {
		change_pc = {
			class = pc_giga_siegfried_world
			inherit_entity = yes
		}
	}
}

country_event = { #Populate Flusion
	id = giga_flusionoperations_debug.6

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:gigaflusion = {
			while = {
				count = 100
				random_list = {
					2 = { create_pop = { species = event_target:flusion_katzens } }
					1 = { create_pop = { species = event_target:flusionians } }
					1 = { create_pop = { species = event_target:solakians } }
					1 = { create_pop = { species = event_target:arcticezics } }
					1 = { create_pop = { species = event_target:kronks } }
				}
			}
		}
	}
}

country_event = { #Flusion resistance to max
	id = giga_flusionoperations_debug.7

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		while = { count = 3 increase_katown_partisans = yes }
		while = { count = 3 increase_katzen_partisans = yes }
		while = { count = 3 increase_solak_partisans = yes }
		while = { count = 3 increase_ezicania_partisans = yes }
		while = { count = 3 increase_symby_partisans = yes }
		while = { count = 3 increase_puffy_partisans = yes }
		while = { count = 3 increase_lyuin_partisans = yes }
		while = { count = 3 increase_laurn_partisans = yes }
		while = { count = 3 increase_ravka_partisans = yes }
		while = { count = 3 increase_zousa_partisans = yes }
		while = { count = 3 increase_mercuria_partisans = yes }
		event_target:flusion_primitives_country = {
			set_variable = { which = ezic_resistance_value value = 5 }
		}
	}
}

country_event = { #Flusion operations all done
	id = giga_flusionoperations_debug.8

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:gigaflusion = {
			set_planet_flag = sonya_rescued
			set_planet_flag = loris_dam_blown
			set_planet_flag = solak_dam_blown
			set_planet_flag = katzen_panzers_stolen
			set_planet_flag = loris_removed
		}
		set_global_flag = flusionians_mourned_loris
	}
}

country_event = { #Delete Kaiser armies
	id = giga_flusionoperations_debug.9

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = { #Nuke Katzen armies
			every_owned_army = {
				limit = { planet = { has_planet_flag = gigaflusion } }
				remove_army = yes
			}
		}
	}
}


namespace = giga_flusionoperations
#OPERATION DIFFICULTY:
#-10% (Low)
#-20% (Medium)
#-30% (Hard)
#-40% (Extreme)
#Steal Panzers#
country_event = {
	id = giga_flusionoperations.1000
	title = "giga_flusionoperations.1000.name"
	desc = "giga_flusionoperations.1000.desc"
	is_triggered_only = yes
	picture = GFX_evt_katzen_panzers
	show_sound = event_construction

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_katzen_panzers
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = flusion_total_res_perc
				value = flusion_total_res_value
			}
			multiply_variable = { #TOTAL resistance (each global resistance adds 1%)
				which = flusion_total_res_perc
				value = 1
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 70
			}
			change_variable = { #add total
				which = flusion_success_chance_total
				value = flusion_total_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add difficulty
				which = flusion_success_chance_total
				value = 20
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_flusionoperations.1000.a #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_flusionoperations.1000.b #4 resources
		allow = {
			custom_tooltip = "needs_4_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 4
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_flusionoperations.1000.c #5 resources
		allow = {
			custom_tooltip = "needs_5_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 5
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#Panzers acquired!
country_event = {
	id = giga_flusionoperations.1001
	title = "giga_flusionoperations.1001.name"
	desc = "giga_flusionoperations.1001.desc"
	is_triggered_only = yes
	picture = GFX_evt_katzen_panzers
	show_sound = event_celebration

	immediate = {
		update_total_flusion_res_value = yes
		event_target:gigaflusion = { set_planet_flag = katzen_panzers_stolen }
		set_country_flag = panzer_tech_possible
	}

	option = {
		name = "giga_flusionoperations.1001.a"
		custom_tooltip = "giga_flusionoperations.1001.a.tooltip"
		add_research_option = giga_tech_katzen_panzers
		add_tech_progress = {
			tech = giga_tech_katzen_panzers
			progress = 0.10
		}
		hidden_effect = {
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
		}
	}
}

#Panzers failure...
country_event = {
	id = giga_flusionoperations.1002
	title = "giga_flusionoperations.1002.name"
	desc = "giga_flusionoperations.1002.desc"
	is_triggered_only = yes
	picture = GFX_evt_burning_settlement
	show_sound = event_open_revolt

	immediate = {
		increase_katzen_wary = yes
		update_total_flusion_res_value = yes
	}

	option = {
		name = "giga_flusionoperations.1002.a"
		custom_tooltip = "giga_flusionoperations.1002.a.tooltip"
		hidden_effect = {
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
		}
	}
}

#Rescue Sonya#
country_event = {
	id = giga_flusionoperations.2000
	title = "giga_flusionoperations.2000.name"
	desc = "giga_flusionoperations.2000.desc"
	is_triggered_only = yes
	picture = GFX_evt_robot_encounter
	show_sound = event_construction

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_sonya_rescue
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = flusion_total_res_perc
				value = flusion_total_res_value
			}
			multiply_variable = { #TOTAL resistance (each global resistance adds 1%)
				which = flusion_total_res_perc
				value = 1
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 70
			}
			change_variable = { #add total
				which = flusion_success_chance_total
				value = flusion_total_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add difficulty
				which = flusion_success_chance_total
				value = 30
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_flusionoperations.1000.a #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_flusionoperations.1000.b #4 resources
		allow = {
			custom_tooltip = "needs_4_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 4
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_flusionoperations.1000.c #5 resources
		allow = {
			custom_tooltip = "needs_5_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 5
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#Sonya Rescued!
country_event = {
	id = giga_flusionoperations.2001
	title = "giga_flusionoperations.2001.name"
	desc = "giga_flusionoperations.2001.desc"
	is_triggered_only = yes
	picture = GFX_evt_robot_encounter
	show_sound = event_celebration

	immediate = {
		country_event = { id = giga_katzen.2004 days = 180 } #katzens find out
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		update_total_flusion_res_value = yes
		event_target:gigaflusion = {
			set_planet_flag = sonya_rescued
			if = {
				limit = { NOT = { has_global_flag = silly_flusionian_portraits_enabled } }
				create_species = {
					name = "Roqualian Soulbot"
					plural = "Roqualian Soulbots"
					class = POUCHKINN
					portrait = sonyarobot
					homeworld = event_target:gigaflusion
					traits = {
						trait = trait_pc_continental_preference
						trait = trait_mechanical
					}
					effect = {
						save_global_event_target_as = sonya_portrait
					}
				}
			}
			else = {
				create_species = {
					name = "Roqualian Soulbot"
					plural = "Roqualian Soulbots"
					class = POUCHKINN
					portrait = sonyarobot
					homeworld = event_target:gigaflusion
					traits = {
						trait = trait_pc_continental_preference
						trait = trait_mechanical
					}
					effect = {
						save_global_event_target_as = sonya_portrait
					}
				}
			}
		}
		event_target:flusion_primitives_country = {
			create_leader = {
				class = commander
				species = event_target:sonya_portrait
				name = "Sonya Soul"
				skill = 4
				gender = female
				traits = {
					trait = katzen_trait_elite
				}
				effect = {
					save_global_event_target_as = sonya_leader
				}
			}
		}
	}

	option = {
		name = "giga_flusionoperations.2001.a"
		custom_tooltip = "giga_flusionoperations.2001.a.tooltip"
		event_target:flusion_primitives_country = {
			add_modifier = {
				modifier = katzen_soulbot_research_busted
				days = -1
			}
		}
		hidden_effect = {
			country_event = { id = giga_flusionoperations.2003 }
		}
	}
}

#Sonya speaks
country_event = {
	id = giga_flusionoperations.2003
	title = "giga_flusionoperations.2003.name"
	desc = "giga_flusionoperations.2003.desc"

	is_triggered_only = yes

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:sonya_leader
		room = "flusion_solak_room"
	}

	#Discuss smth else
	option = {
		is_dialog_only = yes
		name = "giga_flusionoperations.2003.whoareyou"
		response_text = "giga_flusionoperations.2003.whoareyou.response"
	}

	option = {
		is_dialog_only = yes
		name = "giga_flusionoperations.2003.lakia"
		response_text = "giga_flusionoperations.2003.lakia.response"
	}

	option = {
		is_dialog_only = yes
		name = "giga_flusionoperations.2003.soulbot"
		response_text = "giga_flusionoperations.2003.soulbot.response"
	}

	#join us!
	option = {
		default_hide_option = yes
		name = "giga_flusionoperations.2003.joinus"
		custom_tooltip = "giga_flusionoperations.2003.joinus.tooltip"
		response_text = "giga_flusionoperations.2003.joinus.response"
		hidden_effect = {
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
			event_target:flusion_primitives_country = {
				event_target:sonya_leader = { kill_leader = { show_notification = no } }
			}
		}
		create_leader = {
			class = commander
			species = event_target:sonya_portrait
			name = "Sonya Soul"
			skill = 10
			gender = female
			set_age = 46
			immortal = yes
			traits = {
				trait = katzen_trait_elite
				trait = leader_trait_synthetic
				#trait = leader_trait_general_psionic
				# trait = leader_trait_glory_seeker
				trait = trait_sonya
			}
			effect = {
				save_global_event_target_as = sonya_leader
			}
		}
	}

	#bye
	option = {
		name = "giga_flusionoperations.2003.bye"
		response_text = "giga_flusionoperations.2003.bye.response"
		add_resource = { influence = 100 }
		hidden_effect = {
			event_target:flusion_primitives_country = {
				event_target:sonya_leader = { kill_leader = { show_notification = no } }
			}
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
		}
	}
}

#Angry Kaiser
country_event = { 
	id = giga_katzen.2004
	title = "giga_katzen.2004.name"
	desc = "giga_katzen.2004.desc"
	location = from
	is_triggered_only = yes

	location = from

	diplomatic = yes

	trigger = {
		NOT = { has_global_flag = katzenartig_imperium_defeated }
		NOT = { ROOT = { is_at_war_with = event_target:flusion_primitives_country } }
	}

	picture_event_data = {
		portrait = event_target:flusion_douclaw
		room = "flusion_space_room"
	}

	option = {
		name = "giga_katzen.2004.a" #pay
		custom_tooltip = "giga_katzen.2004.a.tooltip"
		response_text = "giga_katzen.2004.a.response"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 10000
			}
		}
		add_resource = { energy = -10000 }
		hidden_effect = {
			decrease_kaiser_opinion = yes
		}
	}

	option = {
		name = "giga_katzen.2004.b" #no
		custom_tooltip = "giga_katzen.2004.b.tooltip"
		response_text = "giga_katzen.2004.b.response"
		hidden_effect = {
			decrease_kaiser_opinion = yes
			decrease_kaiser_opinion = yes
		}
	}
}

#Sonya failure...
country_event = {
	id = giga_flusionoperations.2002
	title = "giga_flusionoperations.2002.name"
	desc = "giga_flusionoperations.2002.desc"
	is_triggered_only = yes
	picture = GFX_evt_exploding_ship
	show_sound = event_ground_battle

	immediate = {
		increase_katzen_wary = yes
		update_total_flusion_res_value = yes
	}

	option = {
		name = "giga_flusionoperations.2002.a"
		hidden_effect = {
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
		}
	}
}

#Blow Roqual Dam#
country_event = {
	id = giga_flusionoperations.3000
	title = "giga_flusionoperations.3000.name"
	desc = "giga_flusionoperations.3000.desc"
	is_triggered_only = yes
	picture = GFX_evt_solaktropa_dam
	show_sound = event_mystic_reveal_light

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_solak_dam
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = flusion_total_res_perc
				value = flusion_total_res_value
			}
			multiply_variable = { #TOTAL resistance (each global resistance adds 1%)
				which = flusion_total_res_perc
				value = 1
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 70
			}
			change_variable = { #add total
				which = flusion_success_chance_total
				value = flusion_total_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add difficulty
				which = flusion_success_chance_total
				value = 40
			}
			set_variable = {
				which = mercuria_res_perc
				value = mercuria_res
			}
			multiply_variable = { #resistance in mercuria percentage display
				which = mercuria_res_perc
				value = 10
			}
			change_variable = { #add mercuria
				which = flusion_success_chance_total
				value = mercuria_res_perc
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 10
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 30
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_flusionoperations.3000.a #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_flusionoperations.3000.b #4 resources
		allow = {
			custom_tooltip = "needs_4_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 4
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_flusionoperations.3000.c #5 resources
		custom_tooltip = "giga_flusionoperations.3000.c.tooltip"
		allow = {
			custom_tooltip = "needs_5_solak_res_and_mercurreich_resistance"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 5
					}
					check_variable = {
						which = mercuria_res
						value >= 2
					}
				}
			}
		}
		hidden_effect = {
			set_global_flag = nuked_solak_dam
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#Damn Blown! (Damn!)
country_event = {
	id = giga_flusionoperations.3001
	title = "giga_flusionoperations.3001.name"
	desc = {
		text = "giga_flusionoperations.3001.desc"
		trigger = { NOT = { has_global_flag = nuked_solak_dam } }
	}
	desc = {
		text = "giga_flusionoperations.3001.nuked.desc"
		trigger = { has_global_flag = nuked_solak_dam }
	} 
	is_triggered_only = yes
	picture = GFX_evt_flusion_tidal_wave
	show_sound = event_ship_explosion

	immediate = {
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		decrease_ravka_partisans = yes
		decrease_ravka_partisans = yes
		decrease_solak_partisans = yes
		decrease_solak_partisans = yes
		if = {
			limit = { has_global_flag = nuked_solak_dam }
			decrease_ravka_partisans = yes
			decrease_solak_partisans = yes
		}
		update_total_flusion_res_value = yes
		event_target:gigaflusion = { set_planet_flag = solak_dam_blown }
	}

	option = {
		name = "giga_flusionoperations.3001.a"
		custom_tooltip = "giga_flusionoperations.3001.a.tooltip"
		trigger = {
			NOT = { has_global_flag = nuked_solak_dam }
		}
		event_target:gigaflusion = {
			remove_deposit = d_solaktropa_project
			add_deposit = d_solaktropa_project_wreck
		}
		event_target:flusion_primitives_country = {
			add_modifier = {
				modifier = solaktropa_economic_crisis
				days = 3600
			}
		}
		hidden_effect = {
			if = {
				limit = {
					event_target:gigaflusion = {
						has_planet_flag = loris_dam_blown
						has_planet_flag = solak_dam_blown
					}
				}
				event_target:flusion_primitives_country = {
					country_event = { id = giga_flusionoperations.504 days = 90 } #agri crisis
				}
			}
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = "giga_flusionoperations.3001.b"
		custom_tooltip = "giga_flusionoperations.3001.b.tooltip"
		trigger = {
			has_global_flag = nuked_solak_dam
		}
		event_target:gigaflusion = {
			remove_deposit = d_solaktropa_project
			add_deposit = d_solaktropa_project_wreck
			add_deposit = d_radioactive_wasteland
			add_deposit = d_radioactive_wasteland
		}
		event_target:flusion_primitives_country = {
			add_modifier = {
				modifier = solaktropa_economic_crisis
				days = 3600
			}
		}
		hidden_effect = {
			if = {
				limit = {
					event_target:gigaflusion = {
						has_planet_flag = loris_dam_blown
						has_planet_flag = solak_dam_blown
					}
				}
				event_target:flusion_primitives_country = {
					country_event = { id = giga_flusionoperations.504 days = 90 } #agri crisis
				}
			}
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
		}
	}
}

#Dam failure (Damn...)
country_event = {
	id = giga_flusionoperations.3002
	title = "giga_flusionoperations.3002.name"
	desc = "giga_flusionoperations.3002.desc"
	is_triggered_only = yes
	picture = GFX_evt_surrender
	show_sound = event_planetary_riot

	immediate = {
		increase_katzen_wary = yes
		update_total_flusion_res_value = yes
		if = {
			limit = { has_global_flag = nuked_solak_dam }
			remove_global_flag = nuked_solak_dam
		}
	}

	option = {
		name = "giga_flusionoperations.3002.a"
		hidden_effect = {
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
		}
	}
}

#Blow Loris Dam#
country_event = {
	id = giga_flusionoperations.4000
	title = "giga_flusionoperations.4000.name"
	desc = "giga_flusionoperations.4000.desc"
	is_triggered_only = yes
	picture = GFX_evt_loris_dam
	show_sound = event_mystic_reveal_light

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_loris_dam
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = flusion_total_res_perc
				value = flusion_total_res_value
			}
			multiply_variable = { #TOTAL resistance (each global resistance adds 1%)
				which = flusion_total_res_perc
				value = 1
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 70
			}
			change_variable = { #add total
				which = flusion_success_chance_total
				value = flusion_total_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add difficulty
				which = flusion_success_chance_total
				value = 30
			}
			set_variable = {
				which = mercuria_res_perc
				value = mercuria_res
			}
			multiply_variable = { #resistance in mercuria percentage display
				which = mercuria_res_perc
				value = 10
			}
			change_variable = { #add mercuria
				which = flusion_success_chance_total
				value = mercuria_res_perc
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_flusionoperations.1000.a #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_flusionoperations.1000.b #4 resources
		allow = {
			custom_tooltip = "needs_4_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 4
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_flusionoperations.1000.c #5 resources
		allow = {
			custom_tooltip = "needs_5_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 5
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#Loris Damn Blown! (DOOOOOO NOOOOOOOO!)
country_event = {
	id = giga_flusionoperations.4001
	title = "giga_flusionoperations.4001.name"
	desc = "giga_flusionoperations.4001.desc"
	is_triggered_only = yes
	picture = GFX_evt_ocean
	show_sound = event_ship_explosion

	immediate = {
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		decrease_lyuin_partisans = yes
		decrease_puffy_partisans = yes
		update_total_flusion_res_value = yes
		event_target:gigaflusion = { set_planet_flag = loris_dam_blown }
	}

	option = {
		name = "giga_flusionoperations.4001.a"
		custom_tooltip = "giga_flusionoperations.4001.a.tooltip"
		event_target:gigaflusion = {
			remove_deposit = d_katlantropa_project
			add_deposit = d_katlantropa_project_wreck
		}
		event_target:flusion_primitives_country = {
			add_modifier = {
				modifier = katlantropa_economic_crisis
				days = 3600
			}
		}
		hidden_effect = {
			if = {
				limit = {
					event_target:gigaflusion = {
						has_planet_flag = loris_dam_blown
						has_planet_flag = solak_dam_blown
					}
				}
				event_target:flusion_primitives_country = {
					country_event = { id = giga_flusionoperations.504 days = 90 } #agri crisis
				}
			}
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
		}
	}
}

#Loris Damn Failure (the CREMOERLIKE XENONS are FOILED AGAIN by mighty loris brain yes yes)
country_event = {
	id = giga_flusionoperations.4002
	title = "giga_flusionoperations.4002.name"
	desc = "giga_flusionoperations.4002.desc"
	is_triggered_only = yes
	picture = GFX_evt_surrender
	show_sound = event_planetary_riot

	immediate = {
		increase_katzen_wary = yes
		update_total_flusion_res_value = yes
	}

	option = {
		name = "giga_flusionoperations.4002.a"
		hidden_effect = {
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
		}
	}
}

#Kill Loris (NOOOOOOOOOOOOOOOOOO!!!!!)
country_event = {
	id = giga_flusionoperations.5000
	title = "giga_flusionoperations.5000.name"
	desc = "giga_flusionoperations.5000.desc"
	is_triggered_only = yes
	picture = GFX_evt_civil_action
	show_sound = event_mystic_reveal_light

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_loris_himself
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = flusion_total_res_perc
				value = flusion_total_res_value
			}
			multiply_variable = { #TOTAL resistance (each global resistance adds 1%)
				which = flusion_total_res_perc
				value = 1
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 70
			}
			change_variable = { #add total
				which = flusion_success_chance_total
				value = flusion_total_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add difficulty
				which = flusion_success_chance_total
				value = 40
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_flusionoperations.5000.a #SHOOT LORIS - Low chance of success IF Kleinkalien is gone.
		allow = {
			custom_tooltip = {
				fail_text = "needs_3_solak_res"
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
			custom_tooltip = {
				fail_text = "cant_if_loris_soulbot"
				NOT = { has_global_flag = giga_loris_is_now_soulbot }
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_global_flag = giga_shooting_loris
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_flusionoperations.5000.b #POISON LORIS - Average chance of success if Kleinkalien is gone
		allow = {
			custom_tooltip = {
				fail_text = "needs_4_solak_res"
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 4
					}
				}
			}
			custom_tooltip = {
				fail_text = "cant_if_loris_soulbot"
				NOT = { has_global_flag = giga_loris_is_now_soulbot }
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_global_flag = giga_poisoning_loris
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_flusionoperations.5000.c #BLOW THE BUNDESHALLE - Can't revive him but hella expensive + lowers resistance
		custom_tooltip = "giga_flusionoperations.5000.c.tooltip"
		allow = {
			custom_tooltip = "needs_6_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 6
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_global_flag = giga_blowing_up_loris
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			run_flusion_resistance_operation_special = yes
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#Fails to kill Loris
country_event = {
	id = giga_flusionoperations.5001
	title = "giga_flusionoperations.5001.name"
	desc = "giga_flusionoperations.5001.desc"
	is_triggered_only = yes
	picture = GFX_evt_surrender
	show_sound = event_planetary_riot

	immediate = {
		increase_katzen_wary = yes
		update_total_flusion_res_value = yes
	}

	option = {
		name = "giga_flusionoperations.5001.a"
		custom_tooltip = "giga_flusionoperations.5001.a.tooltip"
		hidden_effect = {
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
		}
	}
}

#Loris is poisoned but lives
country_event = {
	id = giga_flusionoperations.5002
	title = "giga_flusionoperations.5002.name"
	desc = "giga_flusionoperations.5002.desc"
	is_triggered_only = yes
	picture = GFX_evt_machine_sapience
	show_sound = event_synthetic_evolution

	immediate = {
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		update_total_flusion_res_value = yes
	}

	option = {
		name = "giga_flusionoperations.5002.a"
		custom_tooltip = "giga_flusionoperations.5002.a.tooltip"
		event_target:flusion_loris = { add_trait = leader_trait_synthetic }
		hidden_effect = {
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
			if = {
				limit = { NOT = { has_global_flag = giga_loris_is_now_soulbot } }
				set_global_flag = giga_loris_is_now_soulbot
			}
		}
	}
}

#Loris is poisoned but dies (no Kleinkalien)
country_event = {
	id = giga_flusionoperations.5003
	title = "giga_flusionoperations.5003.name"
	desc = "giga_flusionoperations.5003.desc"
	is_triggered_only = yes
	picture = GFX_evt_space_funeral
	show_sound = event_bad_omen

	immediate = {
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		update_total_flusion_res_value = yes
	}

	option = {
		name = "giga_flusionoperations.5003.a"
		custom_tooltip = "giga_flusionoperations.5003.a.tooltip"
		event_target:flusion_primitives_country = {
			add_modifier = {
				modifier = giga_loris_removed_modifier
				days = -1
			}
		}
		event_target:flusion_loris = { kill_leader = { show_notification = yes } }
		hidden_effect = {
			country_event = { id = giga_flusionoperations.5007 days = 90 random = 90 } #Loris Mourning
			event_target:gigaflusion = { set_planet_flag = loris_removed }
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
			set_global_flag = loris_removed #NOOOOOOOOOOOOOOOOOOOOO!!!!!!
		}
	}
}

#Loris is shot but lives
country_event = {
	id = giga_flusionoperations.5004
	title = "giga_flusionoperations.5004.name"
	desc = "giga_flusionoperations.5004.desc"
	is_triggered_only = yes
	picture = GFX_evt_machine_sapience
	show_sound = event_synthetic_evolution

	immediate = {
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		update_total_flusion_res_value = yes
	}

	option = {
		name = "giga_flusionoperations.5004.a"
		custom_tooltip = "giga_flusionoperations.5004.a.tooltip"
		event_target:flusion_loris = { add_trait = leader_trait_synthetic }
		hidden_effect = {
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
			if = {
				limit = { NOT = { has_global_flag = giga_loris_is_now_soulbot } }
				set_global_flag = giga_loris_is_now_soulbot
			}
		}
	}
}

#Loris is shot but dies (no Kleinkalien)
country_event = {
	id = giga_flusionoperations.5005
	title = "giga_flusionoperations.5005.name"
	desc = "giga_flusionoperations.5005.desc"
	is_triggered_only = yes
	picture = GFX_evt_space_funeral
	show_sound = event_bad_omen

	immediate = {
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		update_total_flusion_res_value = yes
	}

	option = {
		name = "giga_flusionoperations.5005.a"
		custom_tooltip = "giga_flusionoperations.5005.a.tooltip"
		event_target:flusion_primitives_country = {
			add_modifier = {
				modifier = giga_loris_removed_modifier
				days = -1
			}
		}
		event_target:flusion_loris = { kill_leader = { show_notification = yes } }
		hidden_effect = {
			country_event = { id = giga_flusionoperations.5007 days = 90 random = 90 } #Loris Mourning
			event_target:gigaflusion = { set_planet_flag = loris_removed }
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
			set_global_flag = loris_removed #NOOOOOOOOOOOOOOOOOOOOO!!!!!!
		}
	}
}

#Loris is blown up (NOOOOOOOOOOOO!!!!!!)
country_event = {
	id = giga_flusionoperations.5006
	title = "giga_flusionoperations.5006.name"
	desc = "giga_flusionoperations.5006.desc"
	is_triggered_only = yes
	picture = GFX_evt_nuclear_explosion
	show_sound = event_super_explosion

	immediate = {
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		decrease_puffy_partisans = yes
		decrease_puffy_partisans = yes
		update_total_flusion_res_value = yes
	}

	option = {
		name = "giga_flusionoperations.5006.a"
		custom_tooltip = "giga_flusionoperations.5006.a.tooltip"
		event_target:flusion_primitives_country = {
			add_modifier = {
				modifier = giga_loris_removed_modifier
				days = -1
			}
		}
		event_target:flusion_loris = { kill_leader = { show_notification = yes } }
		event_target:gigaflusion = {
			add_deposit = d_bomb_crater
			add_planet_devastation = 10
		}
		hidden_effect = {
			country_event = { id = giga_flusionoperations.5007 days = 90 random = 90 } #Loris Mourning
			remove_global_flag = flusion_special_resistance_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
			event_target:gigaflusion = { set_planet_flag = loris_removed }
			set_global_flag = loris_removed #NOOOOOOOOOOOOOOOOOOOOO!!!!!!
		}
	}
}

#The Loris Mourning
country_event = {
	id = giga_flusionoperations.5007
	title = "giga_flusionoperations.5007.name"
	desc = "giga_flusionoperations.5007.desc"
	is_triggered_only = yes
	picture = GFX_evt_worrying_signal
	show_sound = event_ghost_town

	immediate = {
		set_global_flag = flusionians_mourned_loris
		decrease_puffy_partisans = yes
		decrease_katzen_partisans = yes
		decrease_ravka_partisans = yes
		decrease_symby_partisans = yes
	}

	option = {
		name = "giga_flusionoperations.5007.a"
		custom_tooltip = "giga_flusionoperations.5007.a.tooltip"
	}
}

###STORM THE PYRAMID###
country_event = {
	id = giga_flusionoperations.6000
	title = "giga_flusionoperations.6000.name"
	desc = "giga_flusionoperations.6000.desc"
	is_triggered_only = yes
	picture = GFX_evt_coronation
	show_sound = event_mystic_reveal_light

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		#Calculate Roqualian Willingness
		set_variable = {
			which = solakian_willingness
			value = 50
		}
		#Militarist reduces it
		if = {
			limit = { has_ethic = ethic_militarist }
			change_variable = { which = solakian_willingness value = -10 }
		}
		if = {
			limit = { has_ethic = ethic_fanatic_militarist }
			change_variable = { which = solakian_willingness value = -20 }
		}
		#Xenophobe reduces it
		if = {
			limit = { has_ethic = ethic_xenophobe }
			change_variable = { which = solakian_willingness value = -20 }
		}
		if = {
			limit = { has_ethic = ethic_fanatic_xenophobe }
			change_variable = { which = solakian_willingness value = -40 }
		}
		#Pacifist increases it
		if = {
			limit = { has_ethic = ethic_pacifist }
			change_variable = { which = solakian_willingness value = 10 }
		}
		if = {
			limit = { has_ethic = ethic_fanatic_pacifist }
			change_variable = { which = solakian_willingness value = 20 }
		}
		#Xenophile increases it
		if = {
			limit = { has_ethic = ethic_xenophile }
			change_variable = { which = solakian_willingness value = 10 }
		}
		if = {
			limit = { has_ethic = ethic_fanatic_xenophile }
			change_variable = { which = solakian_willingness value = 20 }
		}
		#Egalitarian increases it
		if = {
			limit = { has_ethic = ethic_egalitarian }
			change_variable = { which = solakian_willingness value = 20 }
		}
		if = {
			limit = { has_ethic = ethic_fanatic_egalitarian }
			change_variable = { which = solakian_willingness value = 40 }
		}
		#Authoritarian decreases it
		if = {
			limit = { has_ethic = ethic_authoritarian }
			change_variable = { which = solakian_willingness value = -15 }
		}
		if = {
			limit = { has_ethic = ethic_fanatic_authoritarian }
			change_variable = { which = solakian_willingness value = -30 }
		}
		#Slavers decreases it
		if = {
			limit = { has_civic = civic_slaver_guilds }
			change_variable = { which = solakian_willingness value = -30 }
		}
		#Beacon of Liberty increases it
		if = {
			limit = { has_civic = civic_beacon_of_liberty }
			change_variable = { which = solakian_willingness value = 20 }
		}
		#Idealistic Foundation increases it
		if = {
			limit = { has_civic = civic_idealistic_foundation }
			change_variable = { which = solakian_willingness value = 20 }
		}
		#Shared Burdens increases it
		if = {
			limit = { has_civic = civic_shared_burden }
			change_variable = { which = solakian_willingness value = 20 }
		}
		#Rogue Servitors
		if = {
			limit = { has_civic = civic_machine_servitor }
			change_variable = { which = solakian_willingness value = 60 }
		}
		if = { #yeah i think you can guess why lmao
			limit = { is_gestalt = yes NOT = { has_civic = civic_machine_servitor } }
			set_variable = { which = solakian_willingness value = -100 }
		}
	}

	option = { #Let's go.
		name = "giga_flusionoperations.6000.a"
		add_resource = {
			energy = -25000
			alloys = -10000
		}
		allow = {
			custom_tooltip = {
				fail_text = "needs_10_solak_res"
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 10
					}
				}
				ROOT = {
					is_at_war_with = event_target:flusion_primitives_country
					resource_stockpile_compare = {
						resource = energy
						value >= 25000
					}
					resource_stockpile_compare = {
						resource = alloys
						value >= 10000
					}
					capital_scope = {
						count_planet_army = {
							count >= 3
							limit = { army_type = riesigerkatzenpanzer_assault }
						}
					}
				}
			}
		}
		hidden_effect = {
			save_global_event_target_as = giga_storming_pyramid_country
			set_country_flag = giga_storming_pyramid_country
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			set_global_flag = giga_storming_pyramid
			set_global_flag = giga_storming_pyramid_prep
			set_global_flag = flusion_special_resistance_operation_ongoing
			set_country_flag = is_the_country_doing_flusion_op
			capital_scope = {
				while = {
					count = 3
					random_planet_army = {
						limit = { army_type = riesigerkatzenpanzer_assault }
						remove_army = yes
					}
				}
			}
			country_event = { id = giga_flusionoperations.6001 }
			country_event = { id = giga_flusionoperations.6002 days = 180 }
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

country_event = {
	id = giga_flusionoperations.6001
	title = "giga_flusionoperations.6001.name"
	desc = "giga_flusionoperations.6001.desc"
	is_triggered_only = yes
	picture = GFX_evt_civil_action
	show_sound = event_radio_chatter


	option = { #Let's go.
		name = "giga_flusionoperations.6001.a"
	}
}

#THE UPRISING BEGINS#
country_event = {
	id = giga_flusionoperations.6002
	title = "giga_flusionoperations.6002.name"
	desc = "giga_flusionoperations.6002.desc"
	is_triggered_only = yes
	picture = GFX_evt_ground_combat
	show_sound = event_ground_battle
	location = event_target:gigaflusion

	trigger = {
		has_global_flag = giga_storming_pyramid
		has_global_flag = giga_storming_pyramid_prep
	}

	immediate = {
		remove_global_flag = giga_storming_pyramid_prep
		set_global_flag = giga_storming_pyramid_active
		create_leader = {
			class = commander
			species = event_target:sonya_portrait
			name = "Sonya Soul"
			skill = 10
			gender = female
			set_age = 46
			immortal = yes
			traits = {
				trait = katzen_trait_elite
				trait = leader_trait_synthetic
				#trait = leader_trait_general_psionic
				# trait = leader_trait_glory_seeker
				trait = trait_sonya
			}
			effect = {
				save_global_event_target_as = sonya_rebel_leader
			}
		}
		event_target:gigaflusion = {
			create_army = { name = NAME_solakian_rebel	owner = ROOT species = event_target:solakians type = "flusion_army" leader = event_target:sonya_rebel_leader }
			create_army = { name = NAME_ezic_rebel	owner = ROOT species = event_target:arcticezics type = "flusion_army" }
			create_army = { name = NAME_zousanian_rebel	owner = ROOT species = event_target:flusionians type = "flusion_army" }
			create_army = { name = NAME_laurnaise_rebel	owner = ROOT species = event_target:flusionians type = "flusion_army" }
			create_army = { name = NAME_kronk_rebel	owner = ROOT species = event_target:kronks type = "flusion_army" }
			create_army = { name = NAME_cookian_rebel	owner = ROOT species = event_target:flusionians type = "flusion_army" }
			create_army = { name = NAME_byuncyat_rebel	owner = ROOT species = event_target:flusionians type = "flusion_army" }
			create_army = { name = NAME_ravkan_rebel	owner = ROOT species = event_target:flusionians type = "flusion_army" }
			create_army = { name = NAME_symbian_rebel	owner = ROOT species = event_target:flusionians type = "flusion_army" }
			while = {
				count = 3
				create_army = { name = NAME_katzenpanzer_rebel	owner = ROOT species = event_target:flusion_katzens type = "riesigerkatzenpanzer_assault" }
			}
		}
	}

	option = { #Let's go.
		name = "giga_flusionoperations.6002.a"
		event_target:flusion_primitives_country = {
			add_modifier = {
				modifier = sudden_flusion_rebellion
				days = 720
			}
		}
		hidden_effect = {
			event_target:flusion_primitives_country = {
				if = {
					limit = { NOT = { has_country_flag = solakian_ability_morale_set } }
					set_country_flag = solakian_ability_morale_set
					set_variable = {
						which = solakian_ability_morale_used
						value = 1
					}
				}
			}
			country_event = { id = giga_flusionoperations.6004 }
			every_playable_country = {
				limit = { NOT = { is_country = ROOT } }
				country_event = { id = giga_flusionoperations.6003 }
			}
		}
	}
}

#popup
country_event = {
	id = giga_flusionoperations.6003
	title = "giga_flusionoperations.6002.name"
	desc = "giga_flusionoperations.6002.desc"
	is_triggered_only = yes
	picture = GFX_evt_ground_combat
	show_sound = event_ground_battle

	option = { #Let's go.
		name = "giga_flusionoperations.6003.a"
	}
}

#the rebellion
country_event = {
	id = giga_flusionoperations.6004
	title = "giga_flusionoperations.6004.name"
	desc = "giga_flusionoperations.6004.desc"
	is_triggered_only = yes
	picture = GFX_evt_ground_combat
	show_sound = event_sensor_ping

	option = { #Let's go.
		name = "giga_flusionoperations.6004.a"
	}
}

#ABILITIES
#Nuke
country_event = {
	id = giga_flusionoperations.6010
	is_triggered_only = yes
	hide_window = yes
	show_sound = event_super_explosion

	immediate = {
		set_timed_global_flag = {
			flag = giga_storming_pyramid_ability_cooldown
			days = 15
		}
		event_target:giga_storming_pyramid_country = {
			change_variable = {
				which = solakian_willingness
				value = -5
			}
		}
		event_target:flusion_primitives_country = { #Nuke Katzen armies
			random_list = {
				1 = { #1 good army
					modifier = {
						factor = 0
						NOT = { any_owned_army = { planet = { has_planet_flag = gigaflusion } army_type = flusion_army } }
						NOT = { any_owned_army = { planet = { has_planet_flag = gigaflusion } army_type = riesigerkatzenpanzer_defence } }
						NOT = { any_owned_army = { planet = { has_planet_flag = gigaflusion } army_type = riesigerkatzenpanzer_assault } }
					}
					random_owned_army = {
						limit = {
							planet = { has_planet_flag = gigaflusion }
							OR = {
								army_type = flusion_army
								army_type = riesigerkatzenpanzer_defence
								army_type = riesigerkatzenpanzer_assault
							}
						}
						remove_army = yes
					}
				}
				1 = { #2-5 regular armies
					modifier = {
						factor = 0
						NOT = { any_owned_army = { planet = { has_planet_flag = gigaflusion } army_type = defense_army } }
					}
					random_list = {
						1 = {
							while = {
								count = 2
								random_owned_army = {
									limit = {
										planet = { has_planet_flag = gigaflusion }
										army_type = defense_army
									}
									remove_army = yes
								}
							}
						}
						1 = {
							while = {
								count = 3
								random_owned_army = {
									limit = {
										planet = { has_planet_flag = gigaflusion }
										army_type = defense_army
									}
									remove_army = yes
								}
							}
						}
						1 = {
							while = {
								count = 4
								random_owned_army = {
									limit = {
										planet = { has_planet_flag = gigaflusion }
										army_type = defense_army
									}
									remove_army = yes
								}
							}
						}
						1 = {
							while = {
								count = 5
								random_owned_army = {
									limit = {
										planet = { has_planet_flag = gigaflusion }
										army_type = defense_army
									}
									remove_army = yes
								}
							}
						}
					}
				}
			}
		}
	}
}

#Infiltrate
country_event = {
	id = giga_flusionoperations.6011
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		set_timed_global_flag = {
			flag = giga_storming_pyramid_ability_cooldown
			days = 15
		}
		event_target:flusion_primitives_country = { #Nuke Katzen armies
			random_list = {
				2 = { #stole army
					modifier = {
						factor = 0
						NOT = { any_owned_army = { planet = { has_planet_flag = gigaflusion } army_type = flusion_army } }
					}
					random_owned_army = {
						limit = {
							planet = { has_planet_flag = gigaflusion }
							army_type = flusion_army
						}
						remove_army = yes
						event_target:gigaflusion = {
							create_army = { name = NAME_generic_rebel	owner = ROOT species = event_target:flusion_katzens type = "flusion_army" }
						}
					}
				}
				1 = { #stole panzer
					modifier = {
						factor = 0
						NOT = { any_owned_army = { planet = { has_planet_flag = gigaflusion } army_type = riesigerkatzenpanzer_defence } }
						NOT = { any_owned_army = { planet = { has_planet_flag = gigaflusion } army_type = riesigerkatzenpanzer_assault } }
					}
					random_owned_army = {
						limit = {
							planet = { has_planet_flag = gigaflusion }
							OR = {
								army_type = riesigerkatzenpanzer_defence
								army_type = riesigerkatzenpanzer_assault
							}
						}
						remove_army = yes
						event_target:gigaflusion = {
							create_army = { name = NAME_katzenpanzer_rebel	owner = ROOT species = event_target:flusion_katzens type = "riesigerkatzenpanzer_assault" }
						}
					}
				}
			}
		}
	}
}

#propaganda
country_event = {
	id = giga_flusionoperations.6012
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:giga_storming_pyramid_country = {
			change_variable = {
				which = solakian_willingness
				value = 2.5
			}
		}
		set_timed_global_flag = {
			flag = giga_storming_pyramid_ability_cooldown
			days = 15
		}
		random_list = {
			4 = {}
			1 = {
				event_target:gigaflusion = {
					while = {
						count = 3
						create_army = { name = NAME_flusionian_rebel	owner = ROOT species = event_target:solakians type = assault_army }
					}
				}
			}
			1 = {
				event_target:gigaflusion = {
					while = {
						count = 4
						create_army = { name = NAME_flusionian_rebel	owner = ROOT species = event_target:solakians type = assault_army }
					}
				}
			}
			1 = {
				event_target:gigaflusion = {
					while = {
						count = 5
						create_army = { name = NAME_flusionian_rebel	owner = ROOT species = event_target:solakians type = assault_army }
					}
				}
			}
			1 = {
				event_target:gigaflusion = {
					while = {
						count = 6
						create_army = { name = NAME_flusionian_rebel	owner = ROOT species = event_target:solakians type = assault_army }
					}
				}
			}
		}
	}
}

#coerce
country_event = {
	id = giga_flusionoperations.6013
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		set_timed_global_flag = {
			flag = giga_storming_pyramid_ability_cooldown
			days = 15
		}
		event_target:giga_storming_pyramid_country = {
			change_variable = {
				which = solakian_willingness
				value = -2.5
			}
		}
		event_target:flusion_primitives_country = { #Remove Katzen armies
			random_list = {
				1 = {
					modifier = {
						factor = 0
						count_owned_army = {
							count < 3
							limit = {
								exists = planet
								planet = { has_planet_flag = gigaflusion }
								army_type = defense_army
							}
						}
					}
					while = {
						count = 3
						random_owned_army = {
							limit = {
								exists = planet
								planet = { has_planet_flag = gigaflusion }
								army_type = defense_army
							}
							remove_army = yes
						}
						event_target:gigaflusion = {
							create_army = { name = NAME_flusionian_defector	owner = ROOT species = event_target:flusionians type = "assault_army" }
						}
					}
				}
				1 = {
					modifier = {
						factor = 0
						count_owned_army = {
							count < 4
							limit = {
								exists = planet
								planet = { has_planet_flag = gigaflusion }
								army_type = defense_army
							}
						}
					}
					while = {
						count = 4
						random_owned_army = {
							limit = {
								exists = planet
								planet = { has_planet_flag = gigaflusion }
								army_type = defense_army
							}
							remove_army = yes
						}
						event_target:gigaflusion = {
							create_army = { name = NAME_flusionian_defector	owner = ROOT species = event_target:flusionians type = "assault_army" }
						}
					}
				}
				1 = {
					modifier = {
						factor = 0
						count_owned_army = {
							count < 5
							limit = {
								exists = planet
								planet = { has_planet_flag = gigaflusion }
								army_type = defense_army
							}
						}
					}
					while = {
						count = 5
						random_owned_army = {
							limit = {
								exists = planet
								planet = { has_planet_flag = gigaflusion }
								army_type = defense_army
							}
							remove_army = yes
						}
						event_target:gigaflusion = {
							create_army = { name = NAME_flusionian_defector	owner = ROOT species = event_target:flusionians type = "assault_army" }
						}
					}
				}
				1 = {
					modifier = {
						factor = 0
						count_owned_army = {
							count < 6
							limit = {
								exists = planet
								planet = { has_planet_flag = gigaflusion }
								army_type = defense_army
							}
						}
					}
					while = {
						count = 6
						random_owned_army = {
							limit = {
								exists = planet
								planet = { has_planet_flag = gigaflusion }
								army_type = defense_army
							}
							remove_army = yes
						}
						event_target:gigaflusion = {
							create_army = { name = NAME_flusionian_defector	owner = ROOT species = event_target:flusionians type = "assault_army" }
						}
					}
				}
			}
		}
	}
}

#Defeat...
country_event = {
	id = giga_flusionoperations.6015
	title = "giga_flusionoperations.6015.name"
	desc = "giga_flusionoperations.6015.desc"
	is_triggered_only = yes
	picture = GFX_evt_surrender
	show_sound = event_ghost_town
	location = event_target:gigaflusion

	trigger = {
		has_global_flag = katzenartig_imperium_happened
		NOT = { has_global_flag = katzenartig_imperium_defeated }
		fromfrom = { has_planet_flag = gigaflusion }
		has_global_flag = giga_storming_pyramid
	}
	
	immediate = {
		remove_global_flag = giga_storming_pyramid
		remove_global_flag = giga_storming_pyramid_prep
		remove_global_flag = flusion_resistance_operation_ongoing
		remove_global_flag = flusion_special_resistance_operation_ongoing
		set_timed_global_flag = {
			flag = giga_storming_pyramid_cooldown
			days = 1800
		}
	}

	option = { #NOOOO
		name = "giga_flusionoperations.6015.a"
		custom_tooltip = "giga_flusionoperations.6015.a.tooltip"
		hidden_effect = {
			decrease_lyuin_partisans = yes
			decrease_puffy_partisans = yes
			decrease_katzen_partisans = yes
			decrease_solak_partisans = yes

			decrease_ravka_partisans = yes
			decrease_symby_partisans = yes
			decrease_mercuria_partisans = yes
			decrease_ezicania_partisans = yes

			decrease_zousa_partisans = yes

			decrease_laurn_partisans = yes

			event_target:sonya_rebel_leader = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

#We won, but the pyramid is not yet secure... 
country_event = {
	id = giga_flusionoperations.6020
	title = "giga_flusionoperations.6020.name"
	desc = "giga_flusionoperations.6020.desc"
	is_triggered_only = yes
	picture = GFX_evt_victorious_army
	show_sound = event_ground_battle
	location = event_target:gigaflusion

	trigger = {
		has_global_flag = katzenartig_imperium_happened
		NOT = { has_global_flag = katzenartig_imperium_defeated }
		fromfrom = { has_planet_flag = gigaflusion }
		has_global_flag = giga_storming_pyramid
	}

	immediate = { #Put Flusion under the control of a temp UFS country
		giga_create_kaiser_kattail_portrait = yes #Kaiser portrait if not already a thing
		create_country = {
			species = event_target:solakians
			name = "Flusionian Occupation Government"
			authority = auth_democratic
			ethos = {
				ethic = ethic_xenophile
				ethic = ethic_materialist
				ethic = ethic_egalitarian
			}
			origin = origin_katzen_splinter
			civics = random
			flag = {
				icon={
					category="flusionian"
					file="ufs_flag.dds"
				}
				background={
					category="backgrounds"
					file="double_triangles.dds"
				}
				colors={
					"green"
					"light_blue"
					"null"
					"null"
				}
			}
			type = default
			effect = {
				create_leader = {
					class = official
					species = event_target:solakians
					name = "Dofus Tequenik Machina"
					gender = male
					effect = {
						save_event_target_as = solakia_ruler
						set_dofus_real_portrait = yes
					}
				}
				set_leader = event_target:solakia_ruler
				save_global_event_target_as = pyramid_storm_ufs_country
			}
		}
		event_target:gigaflusion = {
			set_owner = event_target:pyramid_storm_ufs_country
			set_controller = event_target:pyramid_storm_ufs_country
			set_capital = yes
			solar_system = {
				starbase = { set_owner = event_target:pyramid_storm_ufs_country }
			}
		}
	}

	option = { #Let's go.
		name = "giga_flusionoperations.6020.a"
		hidden_effect = {
			country_event = { id = giga_flusionoperations.6021 }
		}
	}
}

#Pyramid breaches
country_event = {
	id = giga_flusionoperations.6021
	title = "giga_flusionoperations.6021.name"
	desc = "giga_flusionoperations.6021.desc"
	is_triggered_only = yes
	show_sound = event_ground_battle
	picture = GFX_evt_interior_battle

	after = {
		country_event = { id = giga_flusionoperations.6022 }
	}

	option = { #Shoot
		name = "giga_flusionoperations.6021.a"
		hidden_effect = {
			set_country_flag = tried_shooting_kaiser
		}
	}

	option = { #Surrender
		name = "giga_flusionoperations.6021.b"
		hidden_effect = {
			set_country_flag = tried_offering_surrender_kaiser
		}
	}

	option = { #Nothing
		name = "giga_flusionoperations.6021.c"
		hidden_effect = {
			set_country_flag = did_nothing_to_kaiser
		}
	}
}

#Hello Kaiser
country_event = {
	id = giga_flusionoperations.6022
	title = "giga_flusionoperations.6022.name"

	desc = {
		text = "giga_flusionoperations.6022.desc.shoot"
		trigger = { has_country_flag = tried_shooting_kaiser }
	}
	
	desc = {
		text = "giga_flusionoperations.6022.desc.surrender"
		trigger = { has_country_flag = tried_offering_surrender_kaiser }
	}

	desc = {
		text = "giga_flusionoperations.6022.desc.nothing"
		trigger = { has_country_flag = did_nothing_to_kaiser }
	}

	is_triggered_only = yes
	show_sound = event_mystic_reveal

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:globalevent_kaiser_portrait
		room = "flusion_katown_ruined_room"
	}

	after = {
		country_event = { id = giga_flusionoperations.6023 }
	}

	option = { #Your leadership only brought war.
		name = "giga_flusionoperations.6022.a"
		hidden_effect = {
			set_country_flag = told_kaiser_about_war
		}
	}

	option = { #You are a curse upon this universe!
		name = "giga_flusionoperations.6022.b"
		hidden_effect = {
			set_country_flag = told_kaiser_about_curse
		}
	}
}

#Hello Kaiser 2
country_event = {
	id = giga_flusionoperations.6023
	title = "giga_flusionoperations.6023.name"

	desc = {
		text = "giga_flusionoperations.6023.desc.war"
		trigger = { has_country_flag = told_kaiser_about_war }
	}
	
	desc = {
		text = "giga_flusionoperations.6023.desc.curse"
		trigger = { has_country_flag = told_kaiser_about_curse }
	}

	is_triggered_only = yes
	show_sound = event_mystic_reveal

	after = {
		country_event = { id = giga_flusionoperations.6024 }
	}

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:globalevent_kaiser_portrait
		room = "flusion_katown_ruined_room"
	}

	option = { #Who?
		name = "giga_flusionoperations.6023.a"
	}
}

#Hello Kaiser 3
country_event = {
	id = giga_flusionoperations.6024
	title = "giga_flusionoperations.6024.name"
	desc = "giga_flusionoperations.6024.desc"
	
	is_triggered_only = yes
	show_sound = event_mystic_reveal

	diplomatic = yes

	after = {
		country_event = { id = giga_flusionoperations.6025 }
	}

	picture_event_data = {
		portrait = event_target:globalevent_kaiser_portrait
		room = "flusion_katown_ruined_room"
	}

	option = { #SURRENDER
		name = "giga_flusionoperations.6024.a"
		hidden_effect = {
			set_country_flag = offered_kaiser_surrender_again
		}
	}

	option = { #Shoot
		name = "giga_flusionoperations.6024.b"
		hidden_effect = {
			set_country_flag = tried_shooting_kaiser_again
		}
	}

	option = { #oh ok
		name = "giga_flusionoperations.6024.c"
		hidden_effect = {
			set_country_flag = thinks_kaiser_is_right
		}
	}
}

#Hello Kaiser 4
country_event = {
	id = giga_flusionoperations.6025
	title = "giga_flusionoperations.6025.name"

	desc = {
		text = "giga_flusionoperations.6025.desc.surrender"
		trigger = { has_country_flag = offered_kaiser_surrender_again }
	}
	
	desc = {
		text = "giga_flusionoperations.6025.desc.shoot"
		trigger = { 
			NOT = { has_country_flag = tried_shooting_kaiser }
			has_country_flag = tried_shooting_kaiser_again 
		}
	}

	desc = {
		text = "giga_flusionoperations.6025.desc.shoot2"
		trigger = { 
			has_country_flag = tried_shooting_kaiser
			has_country_flag = tried_shooting_kaiser_again 
		}
	}

	desc = {
		text = "giga_flusionoperations.6025.desc.right"
		trigger = { has_country_flag = thinks_kaiser_is_right }
	}

	after = {
		country_event = { id = giga_flusionoperations.6026 }
	}

	diplomatic = yes

	is_triggered_only = yes
	show_sound = event_mystic_reveal

	picture_event_data = {
		portrait = event_target:globalevent_kaiser_portrait
		room = "flusion_katown_ruined_room"
	}

	option = {
		name = "giga_flusionoperations.6025.a"
	}
}

#HE GONE
country_event = {
	id = giga_flusionoperations.6026
	title = "giga_flusionoperations.6026.name"

	desc = "giga_flusionoperations.6026.desc"

	after = {
		country_event = { id = giga_flusionoperations.6030 }
	}

	diplomatic = yes

	is_triggered_only = yes
	show_sound = event_mystic_reveal_light

	picture_event_data = {
		#portrait = event_target:globalevent_kaiser_portrait
		room = "flusion_katown_ruined_room"
	}

	option = {
		name = "giga_flusionoperations.6026.a"
	}

	option = {
		name = "giga_flusionoperations.6026.b"
		trigger = {
			has_country_flag = thinks_kaiser_is_right
		}
		if = {
			limit = { is_gestalt = no }
			shift_ethic = ethic_militarist
		}
		add_monthly_resource_mult = {
			resource = unity
			value = 4
		}
	}
}

#Victory
country_event = {
	id = giga_flusionoperations.6030
	title = "giga_flusionoperations.6030.name"
	desc = "giga_flusionoperations.6030.desc"

	picture = GFX_evt_victorious_army
	show_sound = event_celebration

	is_triggered_only = yes

	immediate = {
		event_target:sonya_rebel_leader = {
			kill_leader = { show_notification = no }
		}
		save_global_event_target_as = flusion_conqueror
		set_country_flag = defeated_katzens
		if = {
			limit = { has_global_flag = giga_storming_pyramid_prep }
			remove_global_flag = giga_storming_pyramid_prep
		}
		if = {
			limit = { has_global_flag = giga_storming_pyramid }
			remove_global_flag = giga_storming_pyramid
		}
		if = {
			limit = { has_global_flag = giga_storming_pyramid_active }
			remove_global_flag = giga_storming_pyramid_active
		}
		event_target:gigaflusion = {
			solar_system = {
				every_system_planet = {
					limit = {
						is_colony = yes
						NOT = {
							has_planet_flag = gigaflusion
						}
					}
					set_owner = event_target:pyramid_storm_ufs_country
				}
			}
		}
		set_global_flag = katzenartig_imperium_defeated
		every_playable_country = {
			limit = {
				NOT = { is_country = ROOT }
				
			}
			country_event = { id = giga_katzen.094 }
		}
		if = {
			limit = { NOT = { any_country = { is_country_type = katzenartig_imperium } } }
			create_country = {
				type = katzenartig_imperium_defeated
				name = "Defeated Katzens"
				effect = { save_global_event_target_as = flusion_primitives_country }
			}
		}
		event_target:flusion_primitives_country = {
			country_event = { id = giga_katzen.096 days = 15 } #collapse of katzenartig
		}
	}

	option = {
		name = "giga_flusionoperations.6030.a"
		hidden_effect = {
			determine_if_solakia_gives_flusion_back = yes
		}
	}
}

#Dofus hands it back :)
country_event = {
	id = giga_flusionoperations.6031
	title = "giga_flusionoperations.6031.name"
	desc = "giga_flusionoperations.6031.desc"

	is_triggered_only = yes

	picture = GFX_evt_dofus_solakia
	show_sound = event_celebration

	option = {
		name = "giga_flusionoperations.6031.a"
		custom_tooltip = "giga_flusionoperations.6031.a.tooltip"
		event_target:gigaflusion = {
			add_modifier = {
				modifier = solakia_free_state
				days = -1
			}
		}
		if = {
			limit = { exists = event_target:solakia }
			event_target:solakia = {
				add_opinion_modifier = {
					who = ROOT
					modifier = opinion_flusion_gave_land_back
				}
			}
		}
		event_target:gigaflusion = {
			set_controller = ROOT
			set_owner = ROOT
			solar_system = {
				every_system_planet = {
					limit = {
						is_colony = yes
						NOT = {
							has_planet_flag = gigaflusion
						}
					}
					set_owner = ROOT
				}
			}
		}
		hidden_effect = {
			country_event = { id = giga_katzen.0941 days = 45 } #where kaysor??
			if = {
				limit = { event_target:gigaflusion = { is_planet_class = pc_flusion_gaia_ecu } }
				country_event = { id = giga_flusionoperations.6035 days = 10 }
			}
			event_target:pyramid_storm_ufs_country = {
				destroy_country = yes
			}
		}
	}
}

#Dofus keeps it :(
country_event = {
	id = giga_flusionoperations.6032
	title = "giga_flusionoperations.6032.name"
	desc = "giga_flusionoperations.6032.desc"

	is_triggered_only = yes

	picture = GFX_evt_announcement
	show_sound = event_radio_chatter

	option = {
		name = "giga_flusionoperations.6032.a"
		hidden_effect = {
			event_target:pyramid_storm_ufs_country = {
				set_name = "United Flusionian States"
				if = {
					limit = { has_global_flag = solak_laurn_collapse }
					country_event = { id = giga_flusionoperations.6033 days = 60 }
				}
			}
		}
		every_playable_country = {
			establish_communications_no_message = event_target:pyramid_storm_ufs_country
		}
	}
}

country_event = {
	id = giga_flusionoperations.6033
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { 
			limit = { exists = event_target:solakia }
			event_target:solakia = {
				every_owned_fleet = { set_owner = event_target:pyramid_storm_ufs_country }
				every_owned_leader = { set_owner = event_target:pyramid_storm_ufs_country }
				every_owned_planet = {
					set_owner = event_target:pyramid_storm_ufs_country
					set_controller = event_target:pyramid_storm_ufs_country
				}
			}
		}
		if = { 
			limit = { exists = event_target:laurandar }
			event_target:laurandar = {
				every_owned_fleet = { set_owner = event_target:pyramid_storm_ufs_country }
				every_owned_leader = { set_owner = event_target:pyramid_storm_ufs_country }
				every_owned_planet = {
					set_owner = event_target:pyramid_storm_ufs_country
					set_controller = event_target:pyramid_storm_ufs_country
				}
			}
		}
		if = { 
			limit = { exists = event_target:kronkcountry }
			event_target:kronkcountry = {
				every_owned_fleet = { set_owner = event_target:pyramid_storm_ufs_country }
				every_owned_leader = { set_owner = event_target:pyramid_storm_ufs_country }
				every_owned_planet = {
					set_owner = event_target:pyramid_storm_ufs_country
					set_controller = event_target:pyramid_storm_ufs_country
				}
			}
		}
		every_playable_country = {
			country_event = { id = giga_flusionoperations.6034 days = 1 }
		}
	}
}

#Laurn, Roqual and Kronk federalize into the UFS
country_event = {
	id = giga_flusionoperations.6034
	title = "giga_flusionoperations.6034.name"
	desc = "giga_flusionoperations.6034.desc"

	is_triggered_only = yes

	picture = GFX_evt_announcement
	show_sound = event_radio_chatter

	option = {
		name = "giga_flusionoperations.6034.a"
	}
}

#Flusion is wrecked
country_event = {
	id = giga_flusionoperations.6035
	title = "giga_flusionoperations.6035.name"
	desc = "giga_flusionoperations.6035.desc"

	is_triggered_only = yes

	picture = GFX_evt_burning_settlement
	show_sound = event_structural_collapse

	option = {
		name = "giga_flusionoperations.6035.a"
		event_target:gigaflusion = {
			add_deposit = d_flusio_arcology_wreck
			add_deposit = d_flusio_arcology_wreck
			add_deposit = d_flusio_arcology_wreck
			add_deposit = d_flusio_arcology_wreck
			add_deposit = d_flusio_arcology_wreck
			add_deposit = d_flusio_arcology_anarchy
			add_deposit = d_flusio_arcology_anarchy
			add_deposit = d_flusio_arcology_anarchy
			add_deposit = d_flusio_arcology_anarchy
			add_deposit = d_flusio_arcology_anarchy
		}
	}
}

#Determine outcome of operation
country_event = {
	id = giga_flusionoperations.100
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { has_global_flag = targeting_katzen_panzers }
			country_event = { id = giga_flusionoperations.1001 }
		}
		if = {
			limit = { has_global_flag = targeting_sonya_rescue }
			country_event = { id = giga_flusionoperations.2001 }
		}
		if = {
			limit = { has_global_flag = targeting_solak_dam }
			country_event = { id = giga_flusionoperations.3001 }
		}
		if = {
			limit = { has_global_flag = targeting_loris_dam }
			country_event = { id = giga_flusionoperations.4001 }
		}
		if = {
			limit = { has_global_flag = targeting_loris_himself }
			if = { #Loris is poisoned, but revived
				limit = {
					NOT = { event_target:gigaflusion = { has_planet_flag = sonya_rescued } }
					has_global_flag = giga_poisoning_loris
				}
				remove_global_flag = giga_poisoning_loris
				country_event = { id = giga_flusionoperations.5002 }
			}
			if = { #Loris is poisoned, but dies
				limit = {
					event_target:gigaflusion = { has_planet_flag = sonya_rescued }
					has_global_flag = giga_poisoning_loris
				}
				remove_global_flag = giga_poisoning_loris
				country_event = { id = giga_flusionoperations.5003 }
			}
			if = { #Loris is shot, but revived
				limit = {
					NOT = { event_target:gigaflusion = { has_planet_flag = sonya_rescued } }
					has_global_flag = giga_shooting_loris
				}
				remove_global_flag = giga_shooting_loris
				country_event = { id = giga_flusionoperations.5004 }
			}
			if = { #Loris is shot, but dies
				limit = {
					event_target:gigaflusion = { has_planet_flag = sonya_rescued }
					has_global_flag = giga_shooting_loris
				}
				remove_global_flag = giga_shooting_loris
				country_event = { id = giga_flusionoperations.5005 }
			}
			if = { #Loris is blown up and dies
				limit = {
					has_global_flag = giga_blowing_up_loris
				}
				remove_global_flag = giga_blowing_up_loris
				country_event = { id = giga_flusionoperations.5006 }
			}
		}
	}
}

country_event = {
	id = giga_flusionoperations.200
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { has_global_flag = targeting_katzen_panzers }
			country_event = { id = giga_flusionoperations.1002 }
		}
		if = {
			limit = { has_global_flag = targeting_sonya_rescue }
			country_event = { id = giga_flusionoperations.2002 }
		}
		if = {
			limit = { has_global_flag = targeting_solak_dam }
			country_event = { id = giga_flusionoperations.3002 }
		}
		if = {
			limit = { has_global_flag = targeting_loris_dam }
			country_event = { id = giga_flusionoperations.4002 }
		}
		if = {
			limit = { has_global_flag = targeting_loris_himself }
			country_event = { id = giga_flusionoperations.5001 }
		}
	}
}

#Dofus is PISSED
country_event = {
	id = giga_flusionoperations.500
	title = "giga_flusionoperations.500.name"
	desc = "giga_flusionoperations.500.desc"

	is_triggered_only = yes

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:one_use_dofus_comms
		room = "flusion_solak_room"
	}

	option = {
		name = "giga_flusionoperations.500.a"
		response_text = "giga_flusionoperations.500.a.response"
		hidden_effect = {
			event_target:one_use_dofus_comms = { kill_leader = { show_notification = no } }
			defect_sonya = yes
		}
	}
}

#all small nations get pissed
country_event = {
	id = giga_flusionoperations.501
	title = "giga_flusionoperations.501.name"
	desc = "giga_flusionoperations.501.desc"

	is_triggered_only = yes
	picture = GFX_evt_assembly_fight
	show_sound = event_planetary_riot

	option = {
		name = "giga_flusionoperations.501.a"
		every_country = {
			limit = {
				has_country_flag = katzen_splinter_state
			}
			add_opinion_modifier = {
				who = ROOT
				modifier = opinion_splinter_state_destroyed_flusion
			}
		}
		every_country = {
			limit = {
				OR = {
					has_country_flag = kronkcountry
					has_country_flag = laurandar
					has_country_flag = katzen_civil_war_faction
				}
			}
			add_opinion_modifier = {
				who = ROOT
				modifier = opinion_major_splinter_state_destroyed_flusion
			}
		}
		every_country = {
			limit = { has_country_flag = solakia }
			if = {
				limit = { ROOT = { has_country_flag = contacted_solak_rebels } }
				add_opinion_modifier = {
					who = ROOT
					modifier = opinion_solakia_splinter_state_destroyed_flusion
				}
			}
			else = {
				add_opinion_modifier = {
					who = ROOT
					modifier = opinion_major_splinter_state_destroyed_flusion
				}
			}
		}
	}
}

#united flusionian front
country_event = {
	id = giga_flusionoperations.502
	title = "giga_flusionoperations.502.name"
	desc = "giga_flusionoperations.502.desc"

	is_triggered_only = yes
	picture = GFX_evt_hand_shake
	show_sound = event_radio_chatter

	immediate = {
		random_country = { #pick president
			limit = {
				has_country_flag = solakia
			}
			set_country_flag = giga_uff_leader
			save_global_event_target_as = giga_uff_leader
			set_timed_country_flag = { flag = ai_no_leave_fed days = 10800 }
			if = {
				limit = { has_federation = yes }
				leave_alliance = { override_requirements = yes }
			}
			join_alliance = {
				who = event_target:giga_uff_leader
				name = "United Flusionian Front"
				override_requirements = yes
			}
			federation = {
				set_federation_type = military_federation
				add_cohesion = 100
				add_federation_experience = 5600
				save_global_event_target_as = uff_federation
				set_federation_succession_term = years_10
			}
			if = {
				limit = { is_at_war = yes }
				every_war = { remove_war_participant = prev }
			}
		}
		every_country = { #join UFF
			limit = {
				OR = {
					has_country_flag = laurandar
					has_country_flag = kronkcountry
				}
			}
			set_timed_country_flag = { flag = ai_no_leave_fed days = 10800 }
			join_alliance = {
				who = event_target:giga_uff_leader
				override_requirements = yes
			}
			federation = {
				add_cohesion = 100
				add_federation_experience = 150
			}
			if = {
				limit = { is_at_war = yes }
				every_war = { remove_war_participant = prev }
			}
		}
	}

	option = {
		name = "giga_flusionoperations.502.a"
		custom_tooltip = "giga_flusionoperations.502.a.tooltip"
	}
}

#Sonya defects
country_event = {
	id = giga_flusionoperations.503
	title = "giga_flusionoperations.503.name"
	desc = "giga_flusionoperations.503.desc"

	picture = GFX_evt_robot_encounter
	show_sound = event_ship_thrusters
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { exists = event_target:solakia }
			event_target:sonya_leader = { exile_leader_as = sonya_defecting }
			event_target:solakia = { set_leader = sonya_defecting }
		}
		else = { event_target:sonya_leader = { kill_leader = { show_notification = no } } }
	}


	option = {
		name = "giga_flusionoperations.503.a"
		custom_tooltip = "giga_flusionoperations.503.a.tooltip"
	}
}

#Agricultural crisis from dams
#Lasts for a year, every month, each planet aside from Flusion has a 5% chance of rebelling
country_event = {
	id = giga_flusionoperations.504
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = { has_global_flag = katzenartig_imperium_defeated }
		NOT = { has_global_flag = katzen_agri_crisis_ended }
	}
	
	immediate = {
		event_target:flusion_primitives_country = {
			if = {
				limit = { NOT = { has_country_flag = katzen_agri_crisis_started } }
				set_variable = {
					which = katzen_agri_crisis_months
					value = 8
				}
				set_country_flag = katzen_agri_crisis_started
				every_country = {
					limit = { is_ai = no }
					country_event = { id = giga_flusionoperations.506 }
				}
				every_owned_planet = {
					limit = { 
						is_colony = yes
						NOT = { has_planet_flag = gigaflusion } 
					}
					add_modifier = {
						modifier = katzen_agri_crisis_starvation
						days = 720
					}
				}
			}
			if = {
				limit = {
					check_variable = {
						which = katzen_agri_crisis_months
						value = 1
					}
				}
				set_global_flag = katzen_agri_crisis_ended
			}
			if = {
				limit = {
					check_variable = {
						which = katzen_agri_crisis_months
						value > 1
					}
				}
				subtract_variable = {
					which = katzen_agri_crisis_months
					value = 1
				}
				event_target:flusion_primitives_country = {
					country_event = { id = giga_flusionoperations.504 days = 30 }
				}
				set_update_modifiers_batch = begin
				every_owned_planet = {
					limit = {
						is_colony = yes
						NOT = { has_planet_flag = gigaflusion }
						NOT = { has_planet_flag = katzen_colony_rebelled_agri_crisis }
						NOT = {
							solar_system = { any_system_planet = { has_planet_flag = katzen_colony_rebelled_agri_crisis } }
						}
						solar_system = { NOT = { has_star_flag = flusion_system } }
					}
					random_list = {
						5 = {
							set_planet_flag = katzen_colony_rebelled_agri_crisis
							planet_event = { id = giga_flusionoperations.507 days = 5 random = 20 }
						}
						95 = {}
					}
				}
				set_update_modifiers_batch = end	
			}
		}
	}
}

#popup about war

country_event = {
	id = giga_flusionoperations.505
	title = "giga_flusionoperations.505.name"
	desc = "giga_flusionoperations.505.desc"
	is_triggered_only = yes
	picture = GFX_evt_small_space_battle
	show_sound = event_ground_battle
	location = event_target:giga_katzen_agri_crisis_planet

	option = {
		name = "giga_flusionoperations.505.a"
	}

	#send support!
	option = {
		name = "giga_flusionoperations.505.b"
		allow = {
			event_target:giga_katzen_agri_crisis_country = {
				NOT = { has_modifier = katzen_rebel_got_support }
			}
			resource_stockpile_compare = {
				resource = energy
				value >= 750
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= 200
			}
		}
		add_resource = {
			energy = -750
			alloys = -200
		}
		event_target:giga_katzen_agri_crisis_country = {
			add_modifier = {
				modifier = katzen_rebel_got_support
				days = 1080
				multiplier = 1
			}
		}
	}

	option = {
		name = "giga_flusionoperations.505.c"
		allow = {
			event_target:giga_katzen_agri_crisis_country = {
				NOT = { has_modifier = katzen_rebel_got_support }
			}
			resource_stockpile_compare = {
				resource = energy
				value >= 1500
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= 400
			}
		}
		add_resource = {
			energy = -1500
			alloys = -400
		}
		event_target:giga_katzen_agri_crisis_country = {
			add_modifier = {
				modifier = katzen_rebel_got_support
				days = 1080
				multiplier = 3
			}
		}
	}

	option = {
		name = "giga_flusionoperations.505.d"
		allow = {
			event_target:giga_katzen_agri_crisis_country = {
				NOT = { has_modifier = katzen_rebel_got_support }
			}
			resource_stockpile_compare = {
				resource = energy
				value >= 2500
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= 800
			}
		}
		add_resource = {
			energy = -2500
			alloys = -800
		}
		event_target:giga_katzen_agri_crisis_country = {
			add_modifier = {
				modifier = katzen_rebel_got_support
				days = 1080
				multiplier = 6
			}
		}
	}

	#Declare war
	option = {
		name = "giga_flusionoperations.505.e"
		declare_war = {
			target = event_target:giga_katzen_agri_crisis_country
			attacker_war_goal = "wg_katzen_conquest"
			name = "Katzenkrieg"
		}
	}
}

#popup about agri crisis
country_event = {
	id = giga_flusionoperations.506
	title = "giga_flusionoperations.506.name"
	desc = "giga_flusionoperations.506.desc"
	is_triggered_only = yes
	picture = GFX_evt_crisis_declared
	show_sound = event_planetary_riot
	location = event_target:gigaflusion

	option = {
		name = "giga_flusionoperations.506.a"
		custom_tooltip = "giga_flusionoperations.506.a.tooltip"
	}
}

#Revolt
planet_event = {
	id = giga_flusionoperations.507
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		create_katzen_splinter_state_agri_crisis = yes
	}
}

namespace = giga_katzother
ship_event = { #tropics
	id = giga_katzother.001
	title = "giga_katzother.001.name"
	desc = "giga_katzother.001.desc"
	picture = GFX_evt_ruined_system
	show_sound = event_radio_chatter
	location = from
	is_triggered_only = yes

	trigger = {
		from = {
			has_star_flag = tropics_system
		}
	}

	option = {
		name = "giga_katzother.001.a"
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}
}

country_event = {
	id = giga_katzother.002
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = {
				NOT = { has_global_flag = giga_achievements_disabled }
				any_owned_pop = { is_species = event_target:arcticezics }
				any_owned_pop = { is_species = event_target:infusedezics }
				any_owned_pop = { is_species = event_target:tropicsezics }
				any_owned_leader = { has_leader_flag = jeimza }
				NOT = { has_country_flag = giga_achievement_kaiser10 }
			}
			set_country_flag = giga_achievement_kaiser10
			set_timed_country_flag = { flag = giga_achievement_kaiser10_notification days = 30 }
			giga_achievement_sound = yes
		}
		if = {
			limit = {
				NOT = { has_global_flag = giga_achievements_disabled }
				exists = event_target:flusion_primitives_country
				NOT = { has_country_flag = giga_achievement_kaiser9 }
				event_target:flusion_primitives_country = {
					check_variable = {
						which = "katown_res"
						value = 3
					}
					check_variable = {
						which = "lyuin_res"
						value = 3
					}
					check_variable = {
						which = "ravka_res"
						value = 3
					}
					check_variable = {
						which = "laurn_res"
						value = 3
					}
					check_variable = {
						which = "zousa_res"
						value = 3
					}
					check_variable = {
						which = "mercuria_res"
						value = 3
					}
					check_variable = {
						which = "katzen_res"
						value = 3
					}
					check_variable = {
						which = "symby_res"
						value = 3
					}
					check_variable = {
						which = "solak_res"
						value = 3
					}
					check_variable = {
						which = "ezicania_res"
						value = 3
					}
				}
			}
			set_country_flag = giga_achievement_kaiser9
			set_timed_country_flag = { flag = giga_achievement_kaiser9_notification days = 30 }
			giga_achievement_sound = yes
		}
	}
}

namespace = giga_katehof

country_event = { #check for systems to build katzen EHOFs in
	id = giga_katehof.001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_country = { is_country_type = katzenartig_imperium }
		NOT = { has_global_flag = ehof_disabled }
	}

	immediate = {
		country_event = { id = giga_katehof.001 days = 720 }
		event_target:flusion_primitives_country = {
			if = {
				limit = {
					any_system_within_border = { #locate a system that either has a EHOF, or nothing
						any_system_planet = { is_planet_class = pc_black_hole }
						NOT = { has_star_flag = has_kaiser_ehof }
					}
					check_variable = {
						which = kaiser_ehof_count
						value < 4
					}
					NOT = {
						any_owned_megastructure = { is_megastructure_type = kaiser_ehof_0 }
					}
				}
				random_system_within_border = {
					limit = {
						any_system_planet = { is_planet_class = pc_black_hole }
						NOR = {
							has_star_flag = has_kaiser_ehof
							any_system_megastructure = { is_megastructure_type = kaiser_ehof_1 }
						}
					}
					save_global_event_target_as = kaiser_ehof_target_system
					random_system_planet = {
						limit = { is_planet_class = pc_black_hole }
						save_global_event_target_as = kaiser_ehof_target_planet
					}
				}
				event_target:kaiser_ehof_target_system = {
					if = {
						limit = { #if it already has an EHOF, Kaiser will convert it to a Kaiser EHOF over 5 years
							any_system_megastructure = {
								OR = {
									is_megastructure_type = ehof_megastructure_phase1
									is_megastructure_type = ehof_megastructure_phase2
									is_megastructure_type = ehof_megastructure_phase3
									is_megastructure_type = ehof_megastructure_phase4
								}
							}
						}
						set_timed_star_flag = {
							flag = converting_to_kaiser_ehof
							days = 1800
						}
						event_target:kaiser_ehof_target_planet = {
							planet_event = { id = giga_katehof.005 days = 1800 }
						}
						every_country = {
							country_event = { id = giga_katehof.003 } #notif
						}
					}
					else = {
						set_star_flag = has_kaiser_ehof
						spawn_megastructure = {
							type = kaiser_ehof_0
							coords_from = event_target:kaiser_ehof_target_planet
							owner = event_target:flusion_primitives_country
						}
						random_system_megastructure = {
							limit = { is_megastructure_type = kaiser_ehof_0 }
							upgrade_megastructure_to = kaiser_ehof_1
						}
						every_country = {
							country_event = { id = giga_katehof.002 } #notif
						}
					}
				}
			}
		}
	}
}

country_event = { #check for systems to build katzen EHOFs in
	id = giga_katehof.002
	title = "giga_katehof.002.name"
	desc = "giga_katehof.002.desc"
	is_triggered_only = yes
	picture = GFX_evt_ehof
	show_sound = event_dyson_sphere_build_start

	immediate = {
		if = {
			limit = { NOT = { has_global_flag = first_kaiser_ehof } }
			set_global_flag = first_kaiser_ehof
		}
	}

	option = {
		name = "giga_katehof.002.a"
		custom_tooltip = "giga_katehof.002.a.tooltip"
		if = {
			limit = { NOT = { has_point_of_interest = { poi = katzenartig_chain.10 } } }
			create_point_of_interest = {
				id = katzenartig_chain.10
				name = "katzenartig_chain_2"
				desc = "katzenartig_chain_2_desc"
				event_chain = "katzenartig_chain"
				location = event_target:giga_jublio_system
			}
		}
	}
}

country_event = { #convert
	id = giga_katehof.003
	title = "giga_katehof.003.name"
	desc = "giga_katehof.003.desc"
	is_triggered_only = yes
	picture = GFX_evt_ehof
	show_sound = event_dyson_sphere_build_start

	option = {
		name = "giga_katehof.003.a"
		custom_tooltip = "giga_katehof.003.a.tooltip"
	}
}

country_event = { #built
	id = giga_katehof.004
	title = "giga_katehof.004.name"
	desc = "giga_katehof.004.desc"
	is_triggered_only = yes
	picture = GFX_evt_ehof
	show_sound = event_dyson_sphere_build_complete

	option = {
		name = "giga_katehof.004.a"
	}
}

planet_event = { #converted
	id = giga_katehof.005
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		space_owner = { is_country_type = katzenartig_imperium }
		solar_system = { has_star_flag = converting_to_kaiser_ehof }
	}

	immediate = {
		solar_system = {
			random_system_megastructure = {
				limit = {
					OR = {
						is_megastructure_type = ehof_megastructure_phase1
						is_megastructure_type = ehof_megastructure_phase2
						is_megastructure_type = ehof_megastructure_phase3
						is_megastructure_type = ehof_megastructure_phase4
					}
				}
				delete_megastructure = THIS
			}
		}
		save_global_event_target_as = captured_ehof_location
		solar_system = {
			spawn_megastructure = {
				type = kaiser_ehof_1
				coords_from = event_target:captured_ehof_location
				owner = event_target:flusion_primitives_country
			}
		}
	}
}

#destroyed
country_event = {
	id = giga_katehof.006
	title = "giga_katehof.006.name"
	desc = "giga_katehof.006.desc"
	is_triggered_only = yes
	picture = GFX_evt_large_explosion
	show_sound = event_ship_explosion

	immediate = {
		if = {
			limit = {
				event_target:flusion_primitives_country = {
					NOT = {
						any_owned_megastructure = {
							is_megastructure_type = kaiser_ehof_1
						}
					}
				}
			}
			if = {
				limit = { has_global_flag = generating_katzen_wormhole }
				remove_global_flag = generating_katzen_wormhole
			}
			clear_global_event_target = katzen_wormhole_target
			every_megastructure = {
				limit = { is_megastructure_type = katzen_ehof_wormhole }
				delete_megastructure = THIS
			}
			every_country = {
				country_event = { id = giga_katehof.007 days = 10 }
			}
		}
	}


	option = {
		name = "giga_katehof.006.a"
		custom_tooltip = "giga_katehof.006.a.tooltip"
		add_resource = {
			physics_research = 5000
			alloys = 2500
			energy = 5000
		}
		trigger = {
			is_ai = no
			NOT = { has_global_flag = ehof_disabled }
		}
		hidden_effect = {
			event_target:ehof_destroyed_system = {
				every_system_planet = {
					remove_planet_flag = cant_build_here
				}
				random_system_planet = {
					limit = { is_planet_class = pc_black_hole }
					save_global_event_target_as = ehof_destroyed_planet
					giga_set_has_mega_flag = yes
				}
				spawn_megastructure = {
					type = ehof_megastructure_ruined
					coords_from = event_target:ehof_destroyed_planet
					owner = space_owner
				}
			}
		}
	}

	option = {
		name = "giga_katehof.006.b"
		custom_tooltip = "giga_katehof.006.b.tooltip"
		ai_chance = {
			factor = 100
		}
		add_resource = {
			physics_research = 10000
			alloys = 2500
			energy = 5000
			influence = 100
		}
	}
}

country_event = {
	id = giga_katehof.007
	title = "giga_katehof.007.name"
	desc = "giga_katehof.007.desc"
	is_triggered_only = yes
	picture = GFX_evt_space_funeral
	show_sound = event_structural_collapse

	option = {
		name = "giga_katehof.007.a"
	}
}

#targets by priority: (checks are performed every 5 years, 1 year if no valid target found)
#systems that kaiser cannot reach at all
#the L cluster (only once)
#random systems in player empires he is at war with
#systems that he can reach but whose owner he is at war with, and that are over 30 jumps from Flusion
country_event = { #check for systems the Kaiser cannot access
	id = giga_katehof.010
	hide_window = yes
	is_triggered_only = yes

	trigger ={
		event_target:flusion_primitives_country = {
			NOT = { has_country_flag = kaiser_moon_destroyed }
		}
		NOT = { has_global_flag = ehof_disabled }
	}

	immediate = {
		every_system = {
			limit = { has_star_flag = kaiser_cannot_reach }
			remove_star_flag = kaiser_cannot_reach
		}
		every_system = { #search for a system the kaiser cannot reach
			save_global_event_target_as = katzen_access_check
			if = {
				limit = {
					event_target:flusion_douclaw = {
						exists = fleet
						fleet = {
							NOT = { can_access_system = event_target:katzen_access_check }
						}
					}
				}
				event_target:katzen_access_check = {
					set_star_flag = kaiser_cannot_reach
				}
			}
		}
		if = { #target system kaiser can't reach
			limit = {
				any_system = { has_star_flag = kaiser_cannot_reach }
				event_target:flusion_primitives_country = {
					NOT = { has_country_flag = kaiser_moon_destroyed }
					any_owned_megastructure = {
						is_megastructure_type = kaiser_ehof_1
					}
				}
				NOT = { has_global_flag = generating_katzen_wormhole }
				#mid_game_years_passed >= 25 #CHANGE
			}
			random_system = {
				limit = {
					has_star_flag = kaiser_cannot_reach
					NOT = { has_star_flag = maginot_anti_jump_star }
				}
				save_global_event_target_as = katzen_wormhole_target
				set_global_flag = found_kaiser_ehof_target
			}
			every_system = {
				limit = { has_star_flag = kaiser_cannot_reach }
				remove_star_flag = kaiser_cannot_reach
			}
		}
		else_if = { #target player-owned l cluster
			limit = {
				NOR = {
					has_global_flag = kaiser_breached_l_cluster
					has_global_flag = generating_katzen_wormhole
				}
				event_target:flusion_primitives_country = {
					NOT = { has_country_flag = kaiser_moon_destroyed }
					any_owned_megastructure = {
						is_megastructure_type = kaiser_ehof_1
					}
				}
				any_country = {
					is_ai = no
					any_system_within_border = {
						NOT = { has_star_flag = maginot_anti_jump_star }
						OR = {
							has_star_flag = lcluster
							has_star_flag = lcluster1
							has_star_flag = lcluster1b
							has_star_flag = lcluster2
							has_star_flag = lcluster2b
							has_star_flag = lcluster3
							has_star_flag = lcluster3b
							has_star_flag = lcluster4
							has_star_flag = lcluster4b
							has_star_flag = lcluster5
						}
					}
				}
			}
			set_global_flag = found_kaiser_ehof_target
			random_system = {
				limit = {
					OR = {
						has_star_flag = lcluster
						has_star_flag = lcluster1
						has_star_flag = lcluster1b
						has_star_flag = lcluster2
						has_star_flag = lcluster2b
						has_star_flag = lcluster3
						has_star_flag = lcluster3b
						has_star_flag = lcluster4
						has_star_flag = lcluster4b
						has_star_flag = lcluster5
					}
					space_owner = { is_ai = no }
				}
				set_global_flag = kaiser_breached_l_cluster
				save_global_event_target_as = katzen_wormhole_target
			}
		}
		else_if = {
			limit = {
				NOT = { has_global_flag = generating_katzen_wormhole }
				event_target:flusion_primitives_country = {
					any_owned_megastructure = {
						is_megastructure_type = kaiser_ehof_1
					}
				}
				any_country = {
					is_ai = no
					is_at_war_with = event_target:flusion_primitives_country
				}
			}
			event_target:flusion_primitives_country = {
				set_variable = {
					which = "kaiser_trade_value"
					value = 1
				}
				set_variable = {
					which = "kaiser_max_system_value"
					value = 0
				}
			}
			random_country = {
				limit = {
					is_ai = no
					is_at_war_with = event_target:flusion_primitives_country
				}
				every_system_within_border = {
					limit = {
						NOR = {
							has_star_flag = maginot_anti_jump_star
							any_system_planet = { is_capital = yes }
							any_system_megastructure = { is_megastructure_type = katzen_ehof_wormhole }
						}
					}
					calculate_system_value_kaiser = yes
					if = {
						limit = {
							event_target:flusion_primitives_country = {
								check_variable = {
									which = "kaiser_trade_value"
									value > kaiser_max_system_value
								}
							}
						}
						event_target:flusion_primitives_country = {
							set_variable = {
								which = "kaiser_max_system_value"
								value = kaiser_trade_value
							}
						}
						save_global_event_target_as = katzen_wormhole_target #the most valuable system gets targeted
					}
					event_target:flusion_primitives_country = {
						set_variable = {
							which = "kaiser_trade_value"
							value = 0
						}
					}
				}
			}
			event_target:flusion_primitives_country = {
				set_variable = {
					which = "kaiser_trade_value"
					value = 0
				}
			}
			set_global_flag = found_kaiser_ehof_target
		}
		else_if = {
			limit = {
				NOT = { has_global_flag = generating_katzen_wormhole }
				event_target:flusion_primitives_country = {
					any_owned_megastructure = {
						is_megastructure_type = kaiser_ehof_1
					}
				}
				any_country = {
					is_ai = yes
					is_at_war_with = event_target:flusion_primitives_country
				}
			}
			event_target:flusion_primitives_country = {
				set_variable = {
					which = "kaiser_trade_value"
					value = 1
				}
				set_variable = {
					which = "kaiser_max_system_value"
					value = 0
				}
			}
			random_country = {
				limit = {
					is_ai = yes
					is_at_war_with = event_target:flusion_primitives_country
				}
				every_system_within_border = {
					limit = {
						NOR = {
							has_star_flag = maginot_anti_jump_star
							any_system_megastructure = { is_megastructure_type = katzen_ehof_wormhole }
						}
					}
					calculate_system_value_kaiser = yes
					if = {
						limit = {
							event_target:flusion_primitives_country = {
								check_variable = {
									which = "kaiser_trade_value"
									value > kaiser_max_system_value
								}
							}
						}
						event_target:flusion_primitives_country = {
							set_variable = {
								which = "kaiser_max_system_value"
								value = kaiser_trade_value
							}
						}
						save_global_event_target_as = katzen_wormhole_target #the most valuable system gets targeted
					}
					event_target:flusion_primitives_country = {
						set_variable = {
							which = "kaiser_trade_value"
							value = 0
						}
					}
				}
			}
			event_target:flusion_primitives_country = {
				set_variable = {
					which = "kaiser_trade_value"
					value = 0
				}
			}
			set_global_flag = found_kaiser_ehof_target
		}
		if = {
			limit = { has_global_flag = found_kaiser_ehof_target }
			event_target:katzen_wormhole_target = {
				if = {
					limit = {
						exists = space_owner
					}
					space_owner = { country_event = { id = giga_katehof.011 days = 5 } }
					space_owner = { country_event = { id = giga_katehof.012 days = 720 } }
				}
			}
			remove_global_flag = found_kaiser_ehof_target
			set_global_flag = generating_katzen_wormhole
		}
		every_system = {
			limit = { has_star_flag = kaiser_cannot_reach }
			remove_star_flag = kaiser_cannot_reach
		}
		if = {
			limit = { has_global_flag = generating_katzen_wormhole }
			country_event = { id = giga_katehof.010 days = 2160 } #try again in 6 years
		}
		else = {
			country_event = { id = giga_katehof.010 days = 720 } #try again in 2 years
		}
	}
}

country_event = {
	id = giga_katehof.011
	title = "giga_katehof.011.name"
	desc = "giga_katehof.011.desc"
	is_triggered_only = yes
	picture = GFX_evt_ehof
	show_sound = event_red_alert

	option = {
		name = "giga_katehof.011.a"
		custom_tooltip = "giga_katehof.011.a.tooltip"
	}
}

#wormhole!
country_event = {
	id = giga_katehof.012
	title = "giga_katehof.012.name"
	desc = "giga_katehof.012.desc"
	is_triggered_only = yes
	picture = GFX_evt_wormhole
	show_sound = event_air_raid_siren

	trigger = {
		event_target:flusion_primitives_country = {
			any_owned_megastructure = {
				is_megastructure_type = kaiser_ehof_1
			}
		}
	}

	immediate = {
		event_target:katzen_wormhole_target = {
			spawn_megastructure = {
				type = katzen_ehof_wormhole
				orbit_distance = 300
				orbit_angle = 360
				owner = event_target:flusion_primitives_country
			}
		}
		remove_global_flag = generating_katzen_wormhole
	}

	option = {
		name = "giga_katehof.012.a"
		custom_tooltip = "giga_katehof.012.a.tooltip"
	}
}

country_event = { #debug
	id = giga_katehof.999
	title = "giga_katehof.012.name"
	desc = "giga_katehof.999.desc"
	is_triggered_only = yes
	picture = GFX_evt_ehof
	show_sound = event_red_alert

	option = {
		name = OK
		custom_tooltip = "giga_katehof.999.desc"
	}
}

namespace = giga_katmoons

country_event = {
	id = giga_katmoons.001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = kaiser_moon_destroyed
		NOR = {
			has_global_flag = katzenartig_imperium_defeated
			has_global_flag = katzenartig_stellarite
			has_global_flag = katzenartig_improbable
		}
	}

	immediate = { #locate a suitable candidate for the Kaiser Moon:tm:, searching outwards from Jublio
		country_event = { id = giga_katmoons.001 days = 1080 } #try again in 2 years
		if = {
			limit = {
				NOT = { any_owned_megastructure = { is_megastructure_type = kaiser_moon_1 } }
			}
			event_target:giga_jublio_system = {
				set_star_flag = checked_for_kaiser_moon
			}
			while = {
				limit = {
					NOT = { any_owned_megastructure = { is_megastructure_type = kaiser_moon_1 } }
				}
				every_system_within_border = {
					limit = { has_star_flag = checked_for_kaiser_moon }
					every_neighbor_system = {
						limit = {
							NOT = { has_star_flag = checked_for_kaiser_moon }
							owner = { is_country_type = katzenartig_imperium }
						}
						if = {
							limit = {
								event_target:flusion_primitives_country = {
									NOT = { any_owned_megastructure = { is_megastructure_type = kaiser_moon_1 } }
								}
								any_system_planet = {
									is_valid_kaiser_moon_candidate = yes
								}
							}
							random_system_planet = {
								limit = { is_valid_kaiser_moon_candidate = yes }
								save_global_event_target_as = new_kaiser_moon_planet
								set_planet_size = 6
								solar_system = {
									spawn_megastructure = {
										type = kaiser_moon_1
										coords_from = event_target:new_kaiser_moon_planet
										owner = event_target:flusion_primitives_country
									}
									create_fleet = {
										name = "Kaiser Moon Defence System"
										settings = {
											spawn_debris = no
										}
										effect = {
											set_owner = event_target:flusion_primitives_country
											create_ship = {
												name = "Katzenkriegsschmiedekanone"
												design = "Meoder"
												upgradable = no
											}
											set_location = {
												target = event_target:new_kaiser_moon_planet
												distance = 15
												angle = 0
											}
											set_fleet_flag = kaisermoon_platform
										}
									}
									create_fleet = {
										name = "Kaiser Moon Defence System"
										settings = {
											spawn_debris = no
										}
										effect = {
											set_owner = event_target:flusion_primitives_country
											create_ship = {
												name = "Katzenkriegsschmiedekanone"
												design = "Meoder"
												upgradable = no
											}
											set_location = {
												target = event_target:new_kaiser_moon_planet
												distance = 15
												angle = 90
											}
											set_fleet_flag = kaisermoon_platform
										}
									}
									create_fleet = {
										name = "Kaiser Moon Defence System"
										settings = {
											spawn_debris = no
										}
										effect = {
											set_owner = event_target:flusion_primitives_country
											create_ship = {
												name = "Katzenkriegsschmiedekanone"
												design = "Meoder"
												upgradable = no
											}
											set_location = {
												target = event_target:new_kaiser_moon_planet
												distance = 15
												angle = 180
											}
											set_fleet_flag = kaisermoon_platform
										}
									}
									create_fleet = {
										name = "Kaiser Moon Defence System"
										settings = {
											spawn_debris = no
										}
										effect = {
											set_owner = event_target:flusion_primitives_country
											create_ship = {
												name = "Katzenkriegsschmiedekanone"
												design = "Meoder"
												upgradable = no
											}
											set_location = {
												target = event_target:new_kaiser_moon_planet
												distance = 15
												angle = 270
											}
											set_fleet_flag = kaisermoon_platform
										}
									}
									save_global_event_target_as = new_kaiser_moon_system
								}
							}
							event_target:flusion_primitives_country = {
								random_owned_megastructure = {
									limit = { is_megastructure_type = kaiser_moon_1 }
									add_modifier = {
										modifier = kaiser_moon_build_speed #slow it down
										days = -1
									}
									upgrade_megastructure_to = kaiser_moon_2
								}
							}
							every_country = {
								country_event = { id = giga_katmoons.002 }
							}
						}
						else = { set_star_flag = checked_for_kaiser_moon }
					}
				}
			}
			every_system = {
				limit = { has_star_flag = checked_for_kaiser_moon }
				remove_star_flag = checked_for_kaiser_moon
			}
		}
	}
}

country_event = { #OH NO
	id = giga_katmoons.002
	title = "giga_katmoons.002.name"
	desc = "giga_katmoons.002.desc"
	is_triggered_only = yes
	picture = GFX_evt_cold_barren
	show_sound = event_red_alert
	location = event_target:new_kaiser_moon_system

	option = {
		name = "giga_katmoons.002.a"
	}
}

country_event = {
	id = giga_katmoons.005
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = kaiser_moon_destroyed
		NOT = { has_global_flag = katzenartig_imperium_defeated }
	}

	immediate = {
		every_owned_fleet = {
			limit = { has_fleet_flag = kaisermoon_platform }
			delete_fleet = THIS
		}
		if = {
			limit = {
				NOT = {
					any_owned_leader = { has_leader_flag = flusiondouclaw }
				}
			}
			create_leader = {
				class = commander
				species = event_target:flusion_katzens
				name = "Douclaw MacCathur"
				skill = 4
				gender = male
				traits = {
					trait = katzen_trait_elite
					trait = katzen_trait_nukelad
					trait = katzen_trait_blitzkrieg
				}
				effect = {
					save_global_event_target_as = flusion_douclaw
					set_douclaw_real_portrait = yes
				}
			}
		}
		create_fleet = { #Spawn the cooler attack moon and an escort fleet.
			name = "Kaiservorherrschaft"
			settings = {
				spawn_debris = no
				can_upgrade = no
				can_change_composition = yes
				uses_naval_capacity = yes
			}
			effect = {
				set_owner = event_target:flusion_primitives_country
				create_ship = {
					name = "Kaiservorherrschaft"
					design = "Kaiser Moon"
					upgradable = no
					effect = {
						set_ship_flag = kaiser_moon_ship
						save_global_event_target_as = target_kaiser_moon_ship
					}
				}
				while = {
					count = 4 #4 escort ships
					create_ship = {
						name = random
						design = "Neu-Clermeowth"
						prefix = no
					}
				}
				while = {
					count = 12 #12 bombers
					create_ship = {
						name = random
						design = "Douclaw"
						prefix = no
					}
				}
				while = {
					count = 24 #24 panzers
					create_ship = {
						name = random
						design = "Katzchen"
						prefix = no
					}
				}
				assign_leader = event_target:flusion_douclaw
				set_location = event_target:giga_planet
				set_fleet_flag = kaiser_moon_fleet
				save_global_event_target_as = target_kaiser_moon_fleet
				set_fleet_stance = aggressive
			}
		}
		remove_country_flag = kaiser_moon_destroyed
		remove_modifier = katzenartig_disarray
		every_ambient_object = {
			limit = {
				is_ambient_object_type = kaiser_moon_broken_object
			}
			destroy_ambient_object = THIS
		}
		every_country = {
			country_event = { id = giga_katmoons.006 }
		}
	}
}

country_event = { #OH NO
	id = giga_katmoons.006
	title = "giga_katmoons.006.name"
	desc = "giga_katmoons.006.desc"
	is_triggered_only = yes
	picture = GFX_evt_cold_barren
	show_sound = event_red_alert
	location = event_target:new_kaiser_moon_system

	option = {
		name = "giga_katmoons.006.a"
		custom_tooltip = "giga_katmoons.006.a.tooltip"
	}
}

#destroyed
country_event = {
	id = giga_katmoons.007
	title = "giga_katmoons.007.name"
	desc = "giga_katmoons.007.desc"
	is_triggered_only = yes
	picture = GFX_evt_large_explosion
	show_sound = event_ship_explosion
	location = event_target:kaiser_moon_destroyed_system

	immediate = {
		event_target:flusion_primitives_country = {
			every_megastructure = {
				limit = { is_megastructure_type = kaiser_moon_1 }
				delete_megastructure = THIS
			}
		}
	}

	option = {
		name = "giga_katehof.007.a"
		add_resource = {
			alloys = 5000
		}
	}
}

country_event = {
	id = giga_katmoons.999
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			country_event = { id = giga_katmoons.001 }
		}
	}
}

namespace = giga_corrona

ship_event = { #jupitwo
	id = giga_corrona.001
	title = "giga_corrona.001.name"
	desc = "giga_corrona.001.desc"
	picture = GFX_evt_browndwarf
	show_sound = event_radio_chatter
	location = from
	is_triggered_only = yes

	trigger = {
		owner = { NOT = { has_country_flag = encountered_jupitwo } }
		from = {
			has_star_flag = jupitwo_system
			any_system_planet = { has_planet_flag = corrona }
		}
		NOT = { has_global_flag = giga_jublio_disabled }
	}

	immediate = { owner = { set_country_flag = encountered_jupitwo } }
	option = {
		name = "giga_corrona.001.a"
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier3researchreward
				min = @tier3researchmin
				max = @tier3researchmax
			}
		}
	}
}

ship_event = { #surveyed corrona
	id = giga_corrona.002
	title = "giga_corrona.002.name"
	desc = "giga_corrona.002.desc"
	picture = GFX_evt_surreal_visions
	show_sound = event_mystic_reveal
	location = from
	is_triggered_only = yes
	trigger = {
		from = {
			has_planet_flag = corrona
			NOT = { is_planet_class = pc_shrouded }
		}
	}

	option = {
		name = "giga_corrona.002.a"
		owner = {
			add_monthly_resource_mult = {
				resource = physics_research
				value = @tier4researchreward
				min = @tier4researchmin
				max = @tier4researchmax
			}
		}
	}
}

country_event = { #corrona start
	id = giga_corrona.004
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		any_country = {
			is_country_type = katzenartig_imperium
		}
		NOR = {
			has_global_flag = katzenartig_imperium_defeated
			has_global_flag = katzenartig_improbable
		}
		exists = event_target:corrona
	}

	immediate = {
		event_target:global_event_country = {
			country_event = { id = giga_corrona.006 days = 30 }
		}
		every_country = { country_event = { id = giga_corrona.005 } }
	}
}

country_event = { #energy spike
	id = giga_corrona.005
	title = "giga_corrona.005.name"
	desc = "giga_corrona.005.desc"

	is_triggered_only = yes

	show_sound = event_alien_signal
	picture = GFX_evt_surreal_visions

	location = event_target:corrona

	trigger = {
		any_country = {
			is_country_type = katzenartig_imperium
		}
	}

	option = {
		name = "giga_corrona.005.a"
	}
}

#The Corronian Magocracy
country_event = {
	id = giga_corrona.006
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:corrona_country = {
			apply_katzen_difficulty = yes
			set_country_type = awakaned_corrona
			create_leader = {
				class = commander
				species = event_target:corronaskeletons
				name = "Skeletor"
				skill = 5
				gender = male
				traits = {
					trait = leader_trait_gale_speed
					trait = leader_trait_aggressive
				}
				effect = {
					save_event_target_as = corrona_admiral
				}
			}
			change_government = {
				authority = auth_imperial
			}
			set_name = "Corronian Magocracy"
			create_fleet = {
				name = "Grand Corronian Dominance"
				settings = {
					uses_naval_capacity = no
					spawn_debris = no
					can_change_composition = no
					can_change_leader = no
					can_upgrade = no
					can_disband = no
					is_boss = yes
				}
				effect = {
					save_global_event_target_as = corrona_fleet
					set_fleet_flag = corrona_fleet
					set_owner = event_target:corrona_country
					create_ship = {
						name = "Corrona Worldcraft"
						design = "Esoteric Planetcraft"
						prefix = no
						effect = {
							save_global_event_target_as = corrona_craft
							set_ship_flag = corrona_craft
						}
					}
					while = {
						count = 50
						create_ship = {
							name = random
							design = "Beast of War"
							prefix = no
						}
					}
					assign_leader = event_target:corrona_admiral
					set_location = {
						target = event_target:corrona
						distance = 15
						angle = random
					}
				}
			}
			create_corrona_dragon_fleet_corrona = yes
			create_corrona_dragon_fleet_corrona = yes
			create_corrona_dragon_fleet_corrona = yes
		}
		event_target:corrona = {
			destroy_colony = yes
			remove_planet = yes
		}
		every_country = {
			country_event = { id = giga_corrona.007 days = 1 }
		}
	}
}

country_event = { #here they come
	id = giga_corrona.007
	title = "giga_corrona.007.name"
	desc = "giga_corrona.007.desc"

	is_triggered_only = yes

	show_sound = event_red_alert
	picture = GFX_evt_binary_stars

	location = event_target:corrona_fleet

	trigger = {
		any_country = {
			is_country_type = katzenartig_imperium
		}
	}

	option = {
		name = "giga_corrona.007.a"
		hidden_effect = {
			country_event = { id = giga_corrona.008 }
		}
	}
}

country_event = { #here they come
	id = giga_corrona.008
	title = "giga_corrona.008.name"
	desc = "giga_corrona.008.desc"

	is_triggered_only = yes

	show_sound = event_corrona_skeletor

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:corrona_country.ruler
		room = "corrona_room"
	}

	option = {
		name = "giga_corrona.008.a"
		custom_tooltip = "giga_corrona.008.a.tooltip"
	}
}

#destroyed
country_event = { #Corrona Moon destroyed :(
	id = giga_corrona.020
	title = "giga_corrona.020.name"
	desc = "giga_corrona.020.desc"
	location = from
	is_triggered_only = yes

	picture = GFX_evt_surreal_visions
	show_sound = event_structural_collapse

	trigger = {
		from = { is_country_type = awakaned_corrona }
		fromfromfrom = {
			is_ship_size = giga_corrona_planetcraft
		}
	}

	immediate = {
		set_country_flag = corrona_moon_slayer
		save_global_event_target_as = corrona_moon_slayer
		every_country = {
			limit = {
				NOT = { has_country_flag = corrona_moon_slayer }
			}
			if = {
				limit = { ROOT = { is_country_type = katzenartig_imperium } }
				country_event = { id = giga_corrona.022 }
			}
			else = { country_event = { id = giga_corrona.021 } }
		}
		event_target:corrona_country = {
			destroy_country = yes
		}
	}

	option = { #RIP
		name = "giga_corrona.020.a"
		add_resource = {
			sr_zro = 10000
			physics_research = 15000
			energy = 15000
		}
		add_monthly_resource_mult = {
			resource = unity
			value = @tier5unityreward
			min = @tier5unitymin
			max = @tier5unitymax
		}
	}
}

country_event = { #Corrona Moon destroyed (broadcast) :(
	id = giga_corrona.021
	title = "giga_corrona.021.name"
	desc = "giga_corrona.021.desc"
	location = from
	is_triggered_only = yes

	picture = GFX_evt_surreal_visions
	show_sound = event_structural_collapse

	option = { #RIP
		name = "giga_corrona.021.a"
	}
}

country_event = { #Corrona Moon destroyed by Katzens (broadcast) :(
	id = giga_corrona.022
	title = "giga_corrona.022.name"
	desc = "giga_corrona.022.desc"
	location = from
	is_triggered_only = yes

	picture = GFX_evt_surreal_visions
	show_sound = event_structural_collapse

	option = { #RIP
		name = "giga_corrona.022.a"
	}
}

planet_event = { #bombing
	id = giga_corrona.023
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		planet_devastation > 90
		OR = {
			habitable_structure = no
			is_planet_class = pc_habitat
			is_planet_class = pc_gigaorbital_ring
			is_planet_class = pc_giga_elysium
		}
		NOT = { has_planet_flag = gigaflusion }
		from = { is_country_type = awakaned_corrona }
	}

	immediate = {
		if = {
			limit = { habitable_structure = yes }
			destroy_colony = yes
			remove_planet = yes
		}
		else = {
			destroy_colony = yes
			change_pc = pc_shrouded
		}
	}
}

namespace = giga_katrebels
#Cracks in the seams: Events to contact Roqualian & Zuspri resistance
country_event = {
	id = giga_katrebels.0001
	title = "giga_katrebels.0001.name"
	desc = "giga_katrebels.0001.desc"

	is_triggered_only = yes

	show_sound = event_radio_chatter
	picture = GFX_evt_smugglers_in_bar

	trigger = {
		any_country = {
			is_country_type = katzenartig_imperium
		}
		NOT = { has_country_flag = katzen_vassal }
	}

	option = {
		name = "giga_katrebels.0001.a"
		custom_tooltip = "giga_katrebels.0001.a.tooltip"
		enable_special_project = {
			name = "CONTACT_EZIC_REBELS_PROJECT"
			owner = root
		}
		enable_special_project = {
			name = "CONTACT_SOLAK_REBELS_PROJECT"
			owner = root
		}
	}

	# option = {
	# 	name = "giga_katrebels.0001.b"
	# }
}

# Roqualia contacted
country_event = {
	id = giga_katrebels.2000
	title = "giga_katrebels.2000.name"
	desc = "giga_katrebels.2000.desc"

	is_triggered_only = yes

	show_sound = event_radio_chatter
	picture = GFX_evt_voting

	immediate = {
		if = {
			limit = { NOT = { has_global_flag = solak_resistance_active } }
			event_target:flusion_primitives_country = {
				create_leader = {
					name = "Naming Tool"
					class = scientist
					skill = 5
					traits = {
						trait = katzen_trait_elite
					}
					effect = {
						set_leader_flag = katzen_name_tool
						save_global_event_target_as = katzen_name_tool
					}
				}
				set_variable = { #initialize solak resources
					which = "solak_resources"
					value = 2
				}
				set_variable = { #initialize katzen wary
					which = "katzen_wary"
					value = 1
				}
				#state resistance
				set_variable = {
					which = "laurn_res"
					value = 0
				}
				set_variable = {
					which = "katzen_res"
					value = 0
				}
				set_variable = {
					which = "katown_res"
					value = 0
				}
				set_variable = {
					which = "solak_res"
					value = 0
				}
				set_variable = {
					which = "zousa_res"
					value = 0
				}
				set_variable = {
					which = "lyuin_res"
					value = 0
				}
				set_variable = {
					which = "mercuria_res"
					value = 0
				}
				set_variable = {
					which = "puffy_res"
					value = 0
				}
				set_variable = {
					which = "symby_res"
					value = 0
				}
				set_variable = {
					which = "ravka_res"
					value = 0
				}
				set_variable = {
					which = "ezicania_res"
					value = 0
				}
			}
		}
	}
	option = {
		name = "giga_katrebels.2000.a"
		hidden_effect = {
			country_event = { id = giga_katrebels.2001 }
		}
	}
}

# Hi Dofus
country_event = {
	id = giga_katrebels.2001
	title = "giga_katrebels.2001.name"
	desc = "giga_katrebels.2001.desc"

	is_triggered_only = yes

	diplomatic = yes

	trigger = {
		any_country = {
			is_country_type = katzenartig_imperium
		}
	}

	picture_event_data = {
		portrait = event_target:dofus
		room = "flusion_solak_room"
	}

	immediate = {
		set_country_flag = katzen_diplomacy_engaged
	}

	option = {
		default_hide_option = yes
		name = "giga_katrebels.2001.a"
		custom_tooltip = "giga_katrebels.2001.a.tooltip"
		hidden_effect = {
			event_target:flusion_katzens = {
				set_variable = {
					which = flusion_success_chance_total
					value = 0
				}
				set_variable = {
					which = flusion_operation_odds
					value = 0
				}
			}
			set_country_flag = gigas_diplo_engaged
			set_country_flag = contacted_solak_rebels
			set_global_flag = solak_resistance_active
			country_event = { id = giga_katrebels.2002 }
		}
	}
}

event = { #yearly wary
	id = giga_katrebels.2007
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		any_country = { is_country_type = katzenartig_imperium }
		NOT = { has_global_flag = katzenartig_imperium_defeated }
		has_global_flag = solak_resistance_active
	}

	immediate = {
		if = {
			limit = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = katzen_wary
						value > 0
					}
				}
			}
			decrease_katzen_wary = yes
			random_list = {
				10 = {
					decrease_katzen_wary = yes
					modifier = {
						add = 10
						any_country = {
							is_ai = no
							has_country_flag = kaiser_happy_1
						}
					}
					modifier = {
						add = 20
						any_country = {
							is_ai = no
							has_country_flag = kaiser_happy_2
						}
					}
					modifier = {
						add = 30
						any_country = {
							is_ai = no
							has_country_flag = kaiser_happy_3
						}
					}
					modifier = {
						add = 40
						any_country = {
							is_ai = no
							has_country_flag = kaiser_happy_4
						}
					}
					modifier = {
						add = -10
						any_country = {
							is_ai = no
							has_country_flag = kaiser_angry_1
						}
					}
					modifier = {
						add = -20
						any_country = {
							is_ai = no
							has_country_flag = kaiser_angry_2
						}
					}
					modifier = {
						add = -30
						any_country = {
							is_ai = no
							has_country_flag = kaiser_angry_3
						}
					}
				}
				90 = {
					modifier = {
						add = -10
						any_country = {
							is_ai = no
							has_country_flag = kaiser_happy_1
						}
					}
					modifier = {
						add = -20
						any_country = {
							is_ai = no
							has_country_flag = kaiser_happy_2
						}
					}
					modifier = {
						add = -30
						any_country = {
							is_ai = no
							has_country_flag = kaiser_happy_3
						}
					}
					modifier = {
						add = -40
						any_country = {
							is_ai = no
							has_country_flag = kaiser_happy_4
						}
					}
					modifier = {
						add = 10
						any_country = {
							is_ai = no
							has_country_flag = kaiser_angry_1
						}
					}
					modifier = {
						add = 20
						any_country = {
							is_ai = no
							has_country_flag = kaiser_angry_2
						}
					}
					modifier = {
						add = 30
						any_country = {
							is_ai = no
							has_country_flag = kaiser_angry_3
						}
					}
				}
			}
		}
	}
}

#EPIC MAP#
country_event = {
	id = giga_katrebels.2002
	title = "giga_katrebels.2001.name"
	desc = {
		text = "giga_katrebels.dofus.low.a"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "flusion_total_res_value"
					value < 8
				}
			}
		}
	}
	desc = {
		text = "giga_katrebels.dofus.low.b"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "flusion_total_res_value"
					value < 8
				}
			}
		}
	}
	desc = {
		text = "giga_katrebels.dofus.low.c"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "flusion_total_res_value"
					value < 8
				}
			}
		}
	}
	desc = {
		text = "giga_katrebels.dofus.low.d"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "flusion_total_res_value"
					value < 8
				}
			}
		}
	}

	desc = {
		text = "giga_katrebels.dofus.mid.a"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "flusion_total_res_value"
					value > 7
				}
				check_variable = {
					which = "flusion_total_res_value"
					value < 20
				}
			}
		}
	}
	desc = {
		text = "giga_katrebels.dofus.mid.b"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "flusion_total_res_value"
					value > 7
				}
				check_variable = {
					which = "flusion_total_res_value"
					value < 20
				}
			}
		}
	}
	desc = {
		text = "giga_katrebels.dofus.mid.c"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "flusion_total_res_value"
					value > 7
				}
				check_variable = {
					which = "flusion_total_res_value"
					value < 20
				}
			}
		}
	}
	desc = {
		text = "giga_katrebels.dofus.mid.d"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "flusion_total_res_value"
					value > 7
				}
				check_variable = {
					which = "flusion_total_res_value"
					value < 20
				}
			}
		}
	}

	desc = {
		text = "giga_katrebels.dofus.high.a"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "flusion_total_res_value"
					value > 19
				}
			}
		}
	}
	desc = {
		text = "giga_katrebels.dofus.high.b"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "flusion_total_res_value"
					value > 19
				}
			}
		}
	}
	desc = {
		text = "giga_katrebels.dofus.high.c"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "flusion_total_res_value"
					value > 19
				}
			}
		}
	}
	desc = {
		text = "giga_katrebels.dofus.high.d"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "flusion_total_res_value"
					value > 19
				}
			}
		}
	}

	diplomatic = yes
	custom_gui = "giga_flusion_map"
	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = flusion_map_active }
	}

	picture_event_data = {
		portrait = event_target:dofus
		room = "flusion_solak_room"
	}

	immediate = {
		set_country_flag = flusion_map_active
		event_target:flusion_primitives_country = {
			set_variable = {
				which = "flusion_total_res_value"
				value = 0
			}
			change_variable = {
				which = "flusion_total_res_value"
				value = katzen_res
			}
			change_variable = {
				which = "flusion_total_res_value"
				value = solak_res
			}
			change_variable = {
				which = "flusion_total_res_value"
				value = zousa_res
			}
			change_variable = {
				which = "flusion_total_res_value"
				value = laurn_res
			}
			change_variable = {
				which = "flusion_total_res_value"
				value = mercuria_res
			}
			change_variable = {
				which = "flusion_total_res_value"
				value = symby_res
			}
			change_variable = {
				which = "flusion_total_res_value"
				value = puffy_res
			}
			change_variable = {
				which = "flusion_total_res_value"
				value = ravka_res
			}
			change_variable = {
				which = "flusion_total_res_value"
				value = lyuin_res
			}
			change_variable = {
				which = "flusion_total_res_value"
				value = katown_res
			}
		}
	}

	option = {
		name = EXIT
		hidden_effect = {
			remove_country_flag = flusion_map_active
			remove_country_flag = katzen_diplomacy_engaged
		}
	}
}

#manage wary
country_event = {
	id = giga_katrebels.2006
	title = "giga_katrebels.2006.name"
	desc = "giga_katrebels.2006.desc"
	is_triggered_only = yes
	picture = GFX_evt_night_raid
	show_sound = event_mystic_reveal

	trigger = {
		NOR = {
			has_global_flag = managing_res
			has_global_flag = flusion_resistance_operation_ongoing
		}
	}

	immediate = {
		set_global_flag = managing_res
	}

	option = { #Spend 12500 energy --> -1 wary
		name = "giga_katrebels.2006.a"
		custom_tooltip = "giga_katrebels.2006.a.tooltip"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = katzen_wary
					value > 0
				}
			}
		}
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 7500
			}
			custom_tooltip = "already_bribed_wary"
			hidden_trigger = { NOT = { has_global_flag = spent_energy_wary } }
		}
		hidden_effect = {
			add_resource = {
				energy = -7500
			}
			set_timed_global_flag = {
				flag = spent_energy_wary
				days = 360
			}
			decrease_katzen_wary = yes
			remove_global_flag = managing_res
		}
	}

	option = { #Spend 150 influence --> -1 wary
		name = "giga_katrebels.2006.b"
		custom_tooltip = "giga_katrebels.2006.b.tooltip"
		trigger = {
			NOT = { is_at_war_with = event_target:flusion_primitives_country }
			event_target:flusion_primitives_country = {
				check_variable = {
					which = katzen_wary
					value > 0
				}
			}
		}
		allow = {
			resource_stockpile_compare = {
				resource = influence
				value >= 150
			}
			custom_tooltip = "already_bribed_wary"
			hidden_trigger = { NOT = { has_global_flag = spent_influence_wary } }
		}
		hidden_effect = {
			add_resource = {
				influence = -150
			}
			decrease_katzen_wary = yes
			set_timed_global_flag = {
				flag = spent_influence_wary
				days = 360
			}
			remove_global_flag = managing_res
		}
	}

	option = { #Spend 1 resistance --> -2 wary
		name = "giga_katrebels.2006.c"
		custom_tooltip = "giga_katrebels.2006.c.tooltip"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = katzen_wary
					value > 0
				}
			}
		}
		allow = {
			custom_tooltip = "already_bribed_wary"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 1
					}
				}
				NOT = {
					has_global_flag = spent_res_wary
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_katzen_wary = yes
			decrease_katzen_wary = yes
			set_timed_global_flag = {
				flag = spent_res_wary
				days = 360
			}
			remove_global_flag = managing_res
		}
	}

	option = { #no
		name = "giga_katrebels.2003.e"
		hidden_effect = {
			remove_global_flag = managing_res
		}
	}
}

#manage res
country_event = {
	id = giga_katrebels.2003
	title = "giga_katrebels.2003.name"
	desc = "giga_katrebels.2003.desc"
	is_triggered_only = yes
	picture = GFX_evt_smugglers_in_bar
	show_sound = event_mystic_reveal

	trigger = {
		NOR = {
			has_global_flag = managing_res
			has_global_flag = flusion_resistance_operation_ongoing
		}
	}

	immediate = {
		set_global_flag = managing_res
	}

	option = { #Spend 5000 energy --> 1 res
		name = "giga_katrebels.2003.a"
		custom_tooltip = "giga_katrebels.2003.a.tooltip"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = solak_resources
					value < 10
				}
			}
		}
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 7500
			}
			custom_tooltip = "already_spent_energy_res"
			hidden_trigger = { NOT = { has_global_flag = spent_energy_res } }
		}
		hidden_effect = {
			add_resource = {
				energy = -7500
			}
			set_timed_global_flag = {
				flag = spent_energy_res
				days = 180
			}
			increase_solak_resources = yes
			remove_global_flag = managing_res
		}
	}

	option = { #Spend 1000 alloys --> 1 res
		name = "giga_katrebels.2003.b"
		custom_tooltip = "giga_katrebels.2003.b.tooltip"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = solak_resources
					value < 10
				}
			}
		}
		allow = {
			resource_stockpile_compare = {
				resource = alloys
				value >= 1500
			}
			custom_tooltip = "already_spent_energy_res"
			hidden_trigger = { NOT = { has_global_flag = spent_alloys_res } }
		}
		hidden_effect = {
			add_resource = {
				alloys = -1500
			}
			set_timed_global_flag = {
				flag = spent_alloys_res
				days = 180
			}
			increase_solak_resources = yes
			remove_global_flag = managing_res
		}
	}

	option = { #Spend 50 influence --> 2 res
		name = "giga_katrebels.2003.c"
		custom_tooltip = "giga_katrebels.2003.c.tooltip"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = solak_resources
					value < 10
				}
			}
		}
		allow = {
			resource_stockpile_compare = {
				resource = influence
				value >= 75
			}
			custom_tooltip = "already_spent_energy_res"
			hidden_trigger = { NOT = { has_global_flag = spent_influence_res } }
		}
		hidden_effect = {
			add_resource = {
				influence = -75
			}
			set_timed_global_flag = {
				flag = spent_influence_res
				days = 180
			}
			if = {
				limit = { has_global_flag = solakia_recognised is_galactic_community_member = yes }
				increase_solak_resources = yes
			}
			increase_solak_resources = yes
			remove_global_flag = managing_res
			random = {
				chance = 15
				country_event = { id = giga_katrebels.0103 days = 10 } #kaiser pissed
			}
		}
	}

	option = { #Raid katzen stuff --> 65% chance of 1 res, 35% chance of 1 wary
		name = "giga_katrebels.2003.d"
		custom_tooltip = "giga_katrebels.2003.d.tooltip"
		trigger = {
			event_target:flusion_primitives_country = {
				check_variable = {
					which = solak_resources
					value < 10
				}
			}
		}
		allow = {
			custom_tooltip = "already_spent_energy_res"
			hidden_trigger = { NOT = { has_global_flag = already_raided_res } }
		}
		hidden_effect = {
			remove_global_flag = managing_res
			set_timed_global_flag = {
				flag = already_raided_res
				days = 180
			}
			set_global_flag = flusion_resistance_operation_ongoing
			set_global_flag = flusion_warehouse_raid_ongoing
			set_country_flag = is_the_one_who_raided_warehouses
		}
	}

	option = { #no
		name = "giga_katrebels.2003.e"
		hidden_effect = {
			remove_global_flag = managing_res
		}
	}
}

#raid failed
country_event = {
	id = giga_katrebels.2004
	title = "giga_katrebels.2004.name"
	desc = "giga_katrebels.2004.desc"
	is_triggered_only = yes
	picture = GFX_evt_surrender
	show_sound = event_planetary_riot

	immediate = {
		increase_katzen_wary = yes
	}

	option = {
		name = "giga_katrebels.2004.a"
		custom_tooltip = "giga_katrebels.2004.a.tooltip"
		hidden_effect = {
			remove_country_flag = is_the_one_who_raided_warehouses
			remove_global_flag = flusion_warehouse_raid_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#raid success
country_event = {
	id = giga_katrebels.2005
	title = "giga_katrebels.2005.name"
	desc = "giga_katrebels.2005.desc"
	is_triggered_only = yes
	picture = GFX_evt_treasure_pile
	show_sound = event_ship_thrusters

	immediate = {
		increase_solak_resources = yes
		increase_solak_resources = yes
		if = {
			limit = { has_global_flag = laurandar_recognised is_galactic_community_member = yes }
			increase_solak_resources = yes
			increase_solak_resources = yes
		}
	}

	option = {
		name = "giga_katrebels.2005.a"
		custom_tooltip = "giga_katrebels.2005.a.tooltip"
		hidden_effect = {
			remove_country_flag = is_the_one_who_raided_warehouses
			remove_global_flag = flusion_warehouse_raid_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#####OPERATIONS#####
#SOLAKIEN#
country_event = {
	id = giga_katrebels.2010
	title = "giga_katrebels.2010.name"
	desc = "giga_katrebels.2010.desc"
	is_triggered_only = yes
	picture = GFX_evt_voting
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_solak
		event_target:katzen_name_tool = { set_name = Rokalien }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = katzen_res_perc
				value = katzen_res
			}
			multiply_variable = { #resistance in herzlands percentage display
				which = katzen_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = katzen_res_perc
				value = 5
			}
			set_variable = {
				which = ravka_res_perc
				value = ravka_res
			}
			multiply_variable = { #resistance in ravka percentage display
				which = ravka_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = ravka_res_perc
				value = 5
			}
			set_variable = {
				which = lyuin_res_perc
				value = lyuin_res
			}
			multiply_variable = { #resistance in lyuinita percentage display
				which = lyuin_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = lyuin_res_perc
				value = 5
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 75
			}
			change_variable = { #add ravka
				which = flusion_success_chance_total
				value = ravka_res_perc
			}
			change_variable = { #add lyuin
				which = flusion_success_chance_total
				value = lyuin_res_perc
			}
			change_variable = { #add katzen
				which = flusion_success_chance_total
				value = katzen_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add grasp
				which = flusion_success_chance_total
				value = 30
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_katrebels.2010.a #1 resource
		allow = {
			custom_tooltip = "needs_1_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 1
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.b #2 resources
		allow = {
			custom_tooltip = "needs_2_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 2
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.c #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#RAVKANIEN#
country_event = {
	id = giga_katrebels.2011
	title = "giga_katrebels.2011.name"
	desc = "giga_katrebels.2011.desc"
	is_triggered_only = yes
	picture = GFX_evt_psionic_battle
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_ravka
		event_target:katzen_name_tool = { set_name = Ravkanien }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = zousa_res_perc
				value = zousa_res
			}
			multiply_variable = { #resistance in herzlands percentage display
				which = zousa_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = zousa_res_perc
				value = 5
			}
			set_variable = {
				which = solak_res_perc
				value = solak_res
			}
			multiply_variable = { #resistance in ravka percentage display
				which = solak_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = solak_res_perc
				value = 5
			}
			set_variable = {
				which = lyuin_res_perc
				value = lyuin_res
			}
			multiply_variable = { #resistance in lyuinita percentage display
				which = lyuin_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = lyuin_res_perc
				value = 5
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 75
			}
			change_variable = { #add solak
				which = flusion_success_chance_total
				value = solak_res_perc
			}
			change_variable = { #add lyuin
				which = flusion_success_chance_total
				value = lyuin_res_perc
			}
			change_variable = { #add zousa
				which = flusion_success_chance_total
				value = zousa_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add grasp
				which = flusion_success_chance_total
				value = 20
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_katrebels.2010.a #1 resource
		allow = {
			custom_tooltip = "needs_1_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 1
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.b #2 resources
		allow = {
			custom_tooltip = "needs_2_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 2
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.c #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#ZOUSA#
country_event = {
	id = giga_katrebels.2012
	title = "giga_katrebels.2012.name"
	desc = "giga_katrebels.2012.desc"
	is_triggered_only = yes
	picture = GFX_evt_wormhole
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_zousa
		event_target:katzen_name_tool = { set_name = Linteria }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = puffy_res_perc
				value = puffy_res
			}
			multiply_variable = { #resistance in puffy percentage display
				which = puffy_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = puffy_res_perc
				value = 5
			}
			set_variable = {
				which = ravka_res_perc
				value = ravka_res
			}
			multiply_variable = { #resistance in ravka percentage display
				which = ravka_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = ravka_res_perc
				value = 5
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 75
			}
			change_variable = { #add ravka
				which = flusion_success_chance_total
				value = ravka_res_perc
			}
			change_variable = { #add puffy
				which = flusion_success_chance_total
				value = puffy_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add grasp
				which = flusion_success_chance_total
				value = 20
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_katrebels.2010.a #1 resource
		allow = {
			custom_tooltip = "needs_1_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 1
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.b #2 resources
		allow = {
			custom_tooltip = "needs_2_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 2
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.c #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#LYUIN#
country_event = {
	id = giga_katrebels.2013
	title = "giga_katrebels.2013.name"
	desc = "giga_katrebels.2013.desc"
	is_triggered_only = yes
	picture = GFX_evt_physics_research
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_lyuin
		event_target:katzen_name_tool = { set_name = Lyuinstaat }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = puffy_res_perc
				value = puffy_res
			}
			multiply_variable = { #resistance in puffy percentage display
				which = puffy_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = puffy_res_perc
				value = 5
			}
			set_variable = {
				which = ravka_res_perc
				value = ravka_res
			}
			multiply_variable = { #resistance in ravka percentage display
				which = ravka_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = ravka_res_perc
				value = 5
			}
			set_variable = {
				which = solak_res_perc
				value = solak_res
			}
			multiply_variable = { #resistance in solak percentage display
				which = solak_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = solak_res_perc
				value = 5
			}
			set_variable = {
				which = katzen_res_perc
				value = katzen_res
			}
			multiply_variable = { #resistance in katzen percentage display
				which = katzen_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = katzen_res_perc
				value = 5
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 75
			}
			change_variable = { #add ravka
				which = flusion_success_chance_total
				value = ravka_res_perc
			}
			change_variable = { #add puffy
				which = flusion_success_chance_total
				value = puffy_res_perc
			}
			change_variable = { #add solak
				which = flusion_success_chance_total
				value = solak_res_perc
			}
			change_variable = { #add katzen
				which = flusion_success_chance_total
				value = katzen_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add grasp
				which = flusion_success_chance_total
				value = 30
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_katrebels.2010.a #1 resource
		allow = {
			custom_tooltip = "needs_1_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 1
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.b #2 resources
		allow = {
			custom_tooltip = "needs_2_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 2
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.c #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#PUFFY#
country_event = {
	id = giga_katrebels.2014
	title = "giga_katrebels.2014.name"
	desc = "giga_katrebels.2014.desc"
	is_triggered_only = yes
	picture = GFX_evt_arguing_senate
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_puffy
		event_target:katzen_name_tool = { set_name = Geschwollen }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = ezicania_res_perc
				value = ezicania_res
			}
			multiply_variable = { #resistance in ezic percentage display
				which = ezicania_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = ezicania_res_perc
				value = 5
			}
			set_variable = {
				which = symby_res_perc
				value = symby_res
			}
			multiply_variable = { #resistance in symby percentage display
				which = symby_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = symby_res_perc
				value = 5
			}
			set_variable = {
				which = laurn_res_perc
				value = laurn_res
			}
			multiply_variable = { #resistance in laurn percentage display
				which = laurn_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = laurn_res_perc
				value = 5
			}
			set_variable = {
				which = lyuin_res_perc
				value = lyuin_res
			}
			multiply_variable = { #resistance lyuin symby percentage display
				which = lyuin_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = lyuin_res_perc
				value = 5
			}
			set_variable = {
				which = zousa_res_perc
				value = zousa_res
			}
			multiply_variable = { #resistance in zousa percentage display
				which = zousa_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = zousa_res_perc
				value = 5
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 75
			}
			change_variable = { #add symby
				which = flusion_success_chance_total
				value = symby_res_perc
			}
			change_variable = { #add laurn
				which = flusion_success_chance_total
				value = laurn_res_perc
			}
			change_variable = { #add zousa
				which = flusion_success_chance_total
				value = zousa_res_perc
			}
			change_variable = { #add ezic
				which = flusion_success_chance_total
				value = ezicania_res_perc
			}
			change_variable = { #add lyuin
				which = flusion_success_chance_total
				value = lyuin_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add grasp
				which = flusion_success_chance_total
				value = 30
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_katrebels.2010.a #1 resource
		allow = {
			custom_tooltip = "needs_1_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 1
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.b #2 resources
		allow = {
			custom_tooltip = "needs_2_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 2
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.c #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#LAURN#
country_event = {
	id = giga_katrebels.2015
	title = "giga_katrebels.2015.name"
	desc = "giga_katrebels.2015.desc"
	is_triggered_only = yes
	picture = GFX_evt_gaia
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_laurn
		event_target:katzen_name_tool = { set_name = Laurendaar }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = puffy_res_perc
				value = puffy_res
			}
			multiply_variable = { #resistance in puffy percentage display
				which = puffy_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = puffy_res_perc
				value = 5
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 75
			}
			change_variable = { #add puffy
				which = flusion_success_chance_total
				value = puffy_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add grasp
				which = flusion_success_chance_total
				value = 20
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_katrebels.2010.a #1 resource
		allow = {
			custom_tooltip = "needs_1_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 1
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.b #2 resources
		allow = {
			custom_tooltip = "needs_2_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 2
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.c #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#MERCURIA#
country_event = {
	id = giga_katrebels.2016
	title = "giga_katrebels.2016.name"
	desc = "giga_katrebels.2016.desc"
	is_triggered_only = yes
	picture = GFX_evt_baol_grunur
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_mercuria
		event_target:katzen_name_tool = { set_name = Mercurreich }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 75
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add grasp
				which = flusion_success_chance_total
				value = 10
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_katrebels.2010.a #1 resource
		allow = {
			custom_tooltip = "needs_1_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 1
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.b #2 resources
		allow = {
			custom_tooltip = "needs_2_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 2
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.c #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#SYMBY#
country_event = {
	id = giga_katrebels.2017
	title = "giga_katrebels.2017.name"
	desc = "giga_katrebels.2017.desc"
	is_triggered_only = yes
	picture = GFX_evt_ship_in_orbit_3
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_symby
		event_target:katzen_name_tool = { set_name = Wacegien }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = puffy_res_perc
				value = puffy_res
			}
			multiply_variable = { #resistance in puffy percentage display
				which = puffy_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = puffy_res_perc
				value = 5
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 75
			}
			change_variable = { #add puffy
				which = flusion_success_chance_total
				value = puffy_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add grasp
				which = flusion_success_chance_total
				value = 20
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_katrebels.2010.a #1 resource
		allow = {
			custom_tooltip = "needs_1_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 1
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.b #2 resources
		allow = {
			custom_tooltip = "needs_2_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 2
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.c #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#HERZLANDS#
country_event = {
	id = giga_katrebels.2018
	title = "giga_katrebels.2018.name"
	desc = "giga_katrebels.2018.desc"
	is_triggered_only = yes
	picture = GFX_evt_victorious_army
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_katzen
		event_target:katzen_name_tool = { set_name = "Katzen Herzlands" }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = ezicania_res_perc
				value = ezicania_res
			}
			multiply_variable = { #resistance in herzlands percentage display
				which = ezicania_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = ezicania_res_perc
				value = 5
			}
			set_variable = {
				which = solak_res_perc
				value = solak_res
			}
			multiply_variable = { #resistance in ravka percentage display
				which = solak_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = solak_res_perc
				value = 5
			}
			set_variable = {
				which = lyuin_res_perc
				value = lyuin_res
			}
			multiply_variable = { #resistance in lyuinita percentage display
				which = lyuin_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = lyuin_res_perc
				value = 5
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 75
			}
			change_variable = { #add ezic
				which = flusion_success_chance_total
				value = ezicania_res_perc
			}
			change_variable = { #add lyuin
				which = flusion_success_chance_total
				value = lyuin_res_perc
			}
			change_variable = { #add solak
				which = flusion_success_chance_total
				value = solak_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add grasp
				which = flusion_success_chance_total
				value = 40
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_katrebels.2010.a #1 resource
		allow = {
			custom_tooltip = "needs_1_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 1
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.b #2 resources
		allow = {
			custom_tooltip = "needs_2_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 2
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.c #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#KATOWN#
country_event = {
	id = giga_katrebels.2019
	title = "giga_katrebels.2019.name"
	desc = "giga_katrebels.2019.desc"
	is_triggered_only = yes
	picture = GFX_evt_busy_spaceport
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_katown
		event_target:katzen_name_tool = { set_name = "Katown Megalopolis" }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = katzen_res_perc
				value = katzen_res
			}
			multiply_variable = { #resistance in katzen percentage display
				which = katzen_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = katzen_res_perc
				value = 5
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 75
			}
			change_variable = { #add katzen
				which = flusion_success_chance_total
				value = katzen_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add grasp
				which = flusion_success_chance_total
				value = 60
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_katrebels.2010.a #1 resource
		allow = {
			custom_tooltip = "needs_1_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 1
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.b #2 resources
		allow = {
			custom_tooltip = "needs_2_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 2
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.c #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#EZIKANIEN#
country_event = {
	id = giga_katrebels.2024
	title = "giga_katrebels.2024.name"
	desc = "giga_katrebels.2024.desc"
	is_triggered_only = yes
	picture = GFX_evt_zro_1
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_ezicania
		event_target:katzen_name_tool = { set_name = Zuspristaat }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 7
			}
			set_variable = {
				which = katzen_res_perc
				value = katzen_res
			}
			multiply_variable = { #resistance in herzlands percentage display
				which = katzen_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = katzen_res_perc
				value = 5
			}
			set_variable = {
				which = puffy_res_perc
				value = puffy_res
			}
			multiply_variable = { #resistance in puffy percentage display
				which = puffy_res_perc
				value = 10
			}
			change_variable = { #add 5% to fix display
				which = puffy_res_perc
				value = 5
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 75
			}
			change_variable = { #add ravka
				which = flusion_success_chance_total
				value = ravka_res_perc
			}
			change_variable = { #add puffy
				which = flusion_success_chance_total
				value = puffy_res_perc
			}
			change_variable = { #add katzen
				which = flusion_success_chance_total
				value = katzen_res_perc
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			subtract_variable = { #add grasp
				which = flusion_success_chance_total
				value = 40
			}
			set_variable = {
				which = flusion_success_chance_total_2
				value = flusion_success_chance_total
			}
			set_variable = {
				which = flusion_success_chance_total_3
				value = flusion_success_chance_total
			}
			change_variable = {
				which = flusion_success_chance_total_2
				value = 20
			}
			change_variable = {
				which = flusion_success_chance_total_3
				value = 40
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = giga_katrebels.2010.a #1 resource
		allow = {
			custom_tooltip = "needs_1_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 1
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.b #2 resources
		allow = {
			custom_tooltip = "needs_2_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 2
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 20
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.c #3 resources
		allow = {
			custom_tooltip = "needs_3_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 3
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
				change_variable = {
					which = flusion_operation_odds
					value = 40
				}
			}
			set_country_flag = is_the_country_doing_flusion_op
		}
	}

	option = {
		name = giga_katrebels.2010.no #no
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}


#moon
country_event = {
	id = giga_katrebels.3002
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_global_flag = flusion_moon_operation_ongoing
		any_country = {
			is_country_type = katzenartig_imperium
		}
		has_country_flag = is_the_one_who_attacked_kaiser_moon
		NOT = { has_country_flag = waiting_for_flusion_res_results }
	}

	immediate = {
		random_list = {
			0 = {
				country_event = { id = giga_katrebels.2120 days = 3 random = 2 }
				modifier = { add = 1 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 1 } } }
				modifier = { add = 2 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 2 } } }
				modifier = { add = 3 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 3 } } }
				modifier = { add = 4 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 4 } } }
				modifier = { add = 5 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 5 } } }
				modifier = { add = 6 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 6 } } }
				modifier = { add = 7 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 7 } } }
				modifier = { add = 8 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 8 } } }
				modifier = { add = 9 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 9 } } }
				modifier = { add = 10 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 10 } } }
				modifier = { add = 11 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 11 } } }
				modifier = { add = 12 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 12 } } }
				modifier = { add = 13 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 13 } } }
				modifier = { add = 14 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 14 } } }
				modifier = { add = 15 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 15 } } }
				modifier = { add = 16 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 16 } } }
				modifier = { add = 17 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 17 } } }
				modifier = { add = 18 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 18 } } }
				modifier = { add = 19 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 19 } } }
				modifier = { add = 20 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 20 } } }
				modifier = { add = 21 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 21 } } }
				modifier = { add = 22 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 22 } } }
				modifier = { add = 23 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 23 } } }
				modifier = { add = 24 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 24 } } }
				modifier = { add = 25 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 25 } } }
				modifier = { add = 26 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 26 } } }
				modifier = { add = 27 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 27 } } }
				modifier = { add = 28 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 28 } } }
				modifier = { add = 29 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 29 } } }
				modifier = { add = 30 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 30 } } }
				modifier = { add = 31 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 31 } } }
				modifier = { add = 32 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 32 } } }
				modifier = { add = 33 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 33 } } }
				modifier = { add = 34 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 34 } } }
				modifier = { add = 35 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 35 } } }
				modifier = { add = 36 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 36 } } }
				modifier = { add = 37 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 37 } } }
				modifier = { add = 38 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 38 } } }
				modifier = { add = 39 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 39 } } }
				modifier = { add = 40 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 40 } } }
				modifier = { add = 41 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 41 } } }
				modifier = { add = 42 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 42 } } }
				modifier = { add = 43 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 43 } } }
				modifier = { add = 44 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 44 } } }
				modifier = { add = 45 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 45 } } }
				modifier = { add = 46 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 46 } } }
				modifier = { add = 47 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 47 } } }
				modifier = { add = 48 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 48 } } }
				modifier = { add = 49 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 49 } } }
				modifier = { add = 50 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 50 } } }
				modifier = { add = 51 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 51 } } }
				modifier = { add = 52 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 52 } } }
				modifier = { add = 53 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 53 } } }
				modifier = { add = 54 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 54 } } }
				modifier = { add = 55 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 55 } } }
				modifier = { add = 56 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 56 } } }
				modifier = { add = 57 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 57 } } }
				modifier = { add = 58 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 58 } } }
				modifier = { add = 59 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 59 } } }
				modifier = { add = 60 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 60 } } }
				modifier = { add = 61 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 61 } } }
				modifier = { add = 62 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 62 } } }
				modifier = { add = 63 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 63 } } }
				modifier = { add = 64 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 64 } } }
				modifier = { add = 65 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 65 } } }
				modifier = { add = 66 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 66 } } }
				modifier = { add = 67 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 67 } } }
				modifier = { add = 68 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 68 } } }
				modifier = { add = 69 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 69 } } }
				modifier = { add = 70 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 70 } } }
				modifier = { add = 71 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 71 } } }
				modifier = { add = 72 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 72 } } }
				modifier = { add = 73 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 73 } } }
				modifier = { add = 74 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 74 } } }
				modifier = { add = 75 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 75 } } }
				modifier = { add = 76 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 76 } } }
				modifier = { add = 77 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 77 } } }
				modifier = { add = 78 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 78 } } }
				modifier = { add = 79 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 79 } } }
				modifier = { add = 80 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 80 } } }
				modifier = { add = 81 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 81 } } }
				modifier = { add = 82 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 82 } } }
				modifier = { add = 83 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 83 } } }
				modifier = { add = 84 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 84 } } }
				modifier = { add = 85 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 85 } } }
				modifier = { add = 86 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 86 } } }
				modifier = { add = 87 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 87 } } }
				modifier = { add = 88 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 88 } } }
				modifier = { add = 89 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 89 } } }
				modifier = { add = 90 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 90 } } }
				modifier = { add = 91 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 91 } } }
				modifier = { add = 92 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 92 } } }
				modifier = { add = 93 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 93 } } }
				modifier = { add = 94 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 94 } } }
				modifier = { add = 95 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 95 } } }
				modifier = { add = 96 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 96 } } }
				modifier = { add = 97 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 97 } } }
				modifier = { add = 98 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 98 } } }
				modifier = { add = 99 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 99 } } }
				modifier = { add = 100 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value >= 100 } } }
			}
			100 = {
				country_event = { id = giga_katrebels.2121 days = 3 random = 2 }
				modifier = { add = -1 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 1 } } }
				modifier = { add = -2 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 2 } } }
				modifier = { add = -3 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 3 } } }
				modifier = { add = -4 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 4 } } }
				modifier = { add = -5 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 5 } } }
				modifier = { add = -6 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 6 } } }
				modifier = { add = -7 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 7 } } }
				modifier = { add = -8 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 8 } } }
				modifier = { add = -9 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 9 } } }
				modifier = { add = -10 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 10 } } }
				modifier = { add = -11 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 11 } } }
				modifier = { add = -12 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 12 } } }
				modifier = { add = -13 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 13 } } }
				modifier = { add = -14 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 14 } } }
				modifier = { add = -15 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 15 } } }
				modifier = { add = -16 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 16 } } }
				modifier = { add = -17 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 17 } } }
				modifier = { add = -18 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 18 } } }
				modifier = { add = -19 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 19 } } }
				modifier = { add = -20 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 20 } } }
				modifier = { add = -21 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 21 } } }
				modifier = { add = -22 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 22 } } }
				modifier = { add = -23 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 23 } } }
				modifier = { add = -24 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 24 } } }
				modifier = { add = -25 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 25 } } }
				modifier = { add = -26 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 26 } } }
				modifier = { add = -27 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 27 } } }
				modifier = { add = -28 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 28 } } }
				modifier = { add = -29 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 29 } } }
				modifier = { add = -30 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 30 } } }
				modifier = { add = -31 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 31 } } }
				modifier = { add = -32 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 32 } } }
				modifier = { add = -33 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 33 } } }
				modifier = { add = -34 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 34 } } }
				modifier = { add = -35 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 35 } } }
				modifier = { add = -36 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 36 } } }
				modifier = { add = -37 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 37 } } }
				modifier = { add = -38 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 38 } } }
				modifier = { add = -39 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 39 } } }
				modifier = { add = -40 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 40 } } }
				modifier = { add = -41 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 41 } } }
				modifier = { add = -42 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 42 } } }
				modifier = { add = -43 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 43 } } }
				modifier = { add = -44 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 44 } } }
				modifier = { add = -45 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 45 } } }
				modifier = { add = -46 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 46 } } }
				modifier = { add = -47 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 47 } } }
				modifier = { add = -48 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 48 } } }
				modifier = { add = -49 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 49 } } }
				modifier = { add = -50 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 50 } } }
				modifier = { add = -51 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 51 } } }
				modifier = { add = -52 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 52 } } }
				modifier = { add = -53 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 53 } } }
				modifier = { add = -54 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 54 } } }
				modifier = { add = -55 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 55 } } }
				modifier = { add = -56 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 56 } } }
				modifier = { add = -57 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 57 } } }
				modifier = { add = -58 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 58 } } }
				modifier = { add = -59 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 59 } } }
				modifier = { add = -60 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 60 } } }
				modifier = { add = -61 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 61 } } }
				modifier = { add = -62 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 62 } } }
				modifier = { add = -63 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 63 } } }
				modifier = { add = -64 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 64 } } }
				modifier = { add = -65 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 65 } } }
				modifier = { add = -66 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 66 } } }
				modifier = { add = -67 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 67 } } }
				modifier = { add = -68 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 68 } } }
				modifier = { add = -69 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 69 } } }
				modifier = { add = -70 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 70 } } }
				modifier = { add = -71 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 71 } } }
				modifier = { add = -72 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 72 } } }
				modifier = { add = -73 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 73 } } }
				modifier = { add = -74 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 74 } } }
				modifier = { add = -75 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 75 } } }
				modifier = { add = -76 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 76 } } }
				modifier = { add = -77 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 77 } } }
				modifier = { add = -78 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 78 } } }
				modifier = { add = -79 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 79 } } }
				modifier = { add = -80 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 80 } } }
				modifier = { add = -81 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 81 } } }
				modifier = { add = -82 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 82 } } }
				modifier = { add = -83 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 83 } } }
				modifier = { add = -84 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 84 } } }
				modifier = { add = -85 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 85 } } }
				modifier = { add = -86 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 86 } } }
				modifier = { add = -87 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 87 } } }
				modifier = { add = -88 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 88 } } }
				modifier = { add = -89 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 89 } } }
				modifier = { add = -90 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 90 } } }
				modifier = { add = -91 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 91 } } }
				modifier = { add = -92 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 92 } } }
				modifier = { add = -93 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 93 } } }
				modifier = { add = -94 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 94 } } }
				modifier = { add = -95 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 95 } } }
				modifier = { add = -96 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 96 } } }
				modifier = { add = -97 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 97 } } }
				modifier = { add = -98 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 98 } } }
				modifier = { add = -99 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 99 } } }
				modifier = { add = -100 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value >= 100 } } }
			}
		}
	}
}

country_event = {
	id = giga_katrebels.3001
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_global_flag = flusion_warehouse_raid_ongoing
		any_country = {
			is_country_type = katzenartig_imperium
		}
		has_country_flag = is_the_one_who_raided_warehouses
	}

	immediate = {
		random_list = {
			65 = { country_event = { id = giga_katrebels.2005 days = 2 random = 2 } }
			35 = { country_event = { id = giga_katrebels.2004 days = 2 random = 2 } }
		}
	}
}

country_event = {
	id = giga_katrebels.3000
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_global_flag = flusion_resistance_operation_ongoing
		NOT = { has_global_flag = flusion_special_resistance_operation_ongoing }
		any_country = {
			is_country_type = katzenartig_imperium
		}
		has_country_flag = is_the_country_doing_flusion_op
		NOT = { has_country_flag = waiting_for_flusion_res_results }
	}

	immediate = {
		random_list = {
			0 = {
				random_list = {
					65 = {
						country_event = { id = giga_katrebels.2100 days = 5 random = 2 }
					}
					35 = {
						country_event = { id = giga_katrebels.2102 days = 5 random = 2 }
					}
				}
				modifier = { add = 1 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 1 } } }
				modifier = { add = 2 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 2 } } }
				modifier = { add = 3 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 3 } } }
				modifier = { add = 4 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 4 } } }
				modifier = { add = 5 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 5 } } }
				modifier = { add = 6 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 6 } } }
				modifier = { add = 7 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 7 } } }
				modifier = { add = 8 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 8 } } }
				modifier = { add = 9 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 9 } } }
				modifier = { add = 10 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 10 } } }
				modifier = { add = 11 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 11 } } }
				modifier = { add = 12 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 12 } } }
				modifier = { add = 13 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 13 } } }
				modifier = { add = 14 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 14 } } }
				modifier = { add = 15 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 15 } } }
				modifier = { add = 16 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 16 } } }
				modifier = { add = 17 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 17 } } }
				modifier = { add = 18 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 18 } } }
				modifier = { add = 19 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 19 } } }
				modifier = { add = 20 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 20 } } }
				modifier = { add = 21 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 21 } } }
				modifier = { add = 22 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 22 } } }
				modifier = { add = 23 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 23 } } }
				modifier = { add = 24 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 24 } } }
				modifier = { add = 25 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 25 } } }
				modifier = { add = 26 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 26 } } }
				modifier = { add = 27 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 27 } } }
				modifier = { add = 28 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 28 } } }
				modifier = { add = 29 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 29 } } }
				modifier = { add = 30 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 30 } } }
				modifier = { add = 31 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 31 } } }
				modifier = { add = 32 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 32 } } }
				modifier = { add = 33 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 33 } } }
				modifier = { add = 34 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 34 } } }
				modifier = { add = 35 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 35 } } }
				modifier = { add = 36 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 36 } } }
				modifier = { add = 37 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 37 } } }
				modifier = { add = 38 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 38 } } }
				modifier = { add = 39 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 39 } } }
				modifier = { add = 40 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 40 } } }
				modifier = { add = 41 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 41 } } }
				modifier = { add = 42 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 42 } } }
				modifier = { add = 43 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 43 } } }
				modifier = { add = 44 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 44 } } }
				modifier = { add = 45 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 45 } } }
				modifier = { add = 46 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 46 } } }
				modifier = { add = 47 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 47 } } }
				modifier = { add = 48 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 48 } } }
				modifier = { add = 49 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 49 } } }
				modifier = { add = 50 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 50 } } }
				modifier = { add = 51 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 51 } } }
				modifier = { add = 52 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 52 } } }
				modifier = { add = 53 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 53 } } }
				modifier = { add = 54 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 54 } } }
				modifier = { add = 55 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 55 } } }
				modifier = { add = 56 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 56 } } }
				modifier = { add = 57 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 57 } } }
				modifier = { add = 58 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 58 } } }
				modifier = { add = 59 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 59 } } }
				modifier = { add = 60 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 60 } } }
				modifier = { add = 61 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 61 } } }
				modifier = { add = 62 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 62 } } }
				modifier = { add = 63 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 63 } } }
				modifier = { add = 64 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 64 } } }
				modifier = { add = 65 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 65 } } }
				modifier = { add = 66 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 66 } } }
				modifier = { add = 67 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 67 } } }
				modifier = { add = 68 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 68 } } }
				modifier = { add = 69 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 69 } } }
				modifier = { add = 70 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 70 } } }
				modifier = { add = 71 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 71 } } }
				modifier = { add = 72 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 72 } } }
				modifier = { add = 73 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 73 } } }
				modifier = { add = 74 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 74 } } }
				modifier = { add = 75 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 75 } } }
				modifier = { add = 76 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 76 } } }
				modifier = { add = 77 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 77 } } }
				modifier = { add = 78 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 78 } } }
				modifier = { add = 79 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 79 } } }
				modifier = { add = 80 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 80 } } }
				modifier = { add = 81 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 81 } } }
				modifier = { add = 82 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 82 } } }
				modifier = { add = 83 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 83 } } }
				modifier = { add = 84 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 84 } } }
				modifier = { add = 85 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 85 } } }
				modifier = { add = 86 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 86 } } }
				modifier = { add = 87 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 87 } } }
				modifier = { add = 88 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 88 } } }
				modifier = { add = 89 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 89 } } }
				modifier = { add = 90 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 90 } } }
				modifier = { add = 91 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 91 } } }
				modifier = { add = 92 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 92 } } }
				modifier = { add = 93 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 93 } } }
				modifier = { add = 94 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 94 } } }
				modifier = { add = 95 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 95 } } }
				modifier = { add = 96 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 96 } } }
				modifier = { add = 97 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 97 } } }
				modifier = { add = 98 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 98 } } }
				modifier = { add = 99 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 99 } } }
				modifier = { add = 100 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value >= 100 } } }
			}
			100 = {
				country_event = { id = giga_katrebels.2101 days = 5 random = 2 }
				modifier = { add = -1 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 1 } } }
				modifier = { add = -2 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 2 } } }
				modifier = { add = -3 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 3 } } }
				modifier = { add = -4 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 4 } } }
				modifier = { add = -5 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 5 } } }
				modifier = { add = -6 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 6 } } }
				modifier = { add = -7 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 7 } } }
				modifier = { add = -8 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 8 } } }
				modifier = { add = -9 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 9 } } }
				modifier = { add = -10 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 10 } } }
				modifier = { add = -11 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 11 } } }
				modifier = { add = -12 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 12 } } }
				modifier = { add = -13 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 13 } } }
				modifier = { add = -14 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 14 } } }
				modifier = { add = -15 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 15 } } }
				modifier = { add = -16 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 16 } } }
				modifier = { add = -17 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 17 } } }
				modifier = { add = -18 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 18 } } }
				modifier = { add = -19 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 19 } } }
				modifier = { add = -20 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 20 } } }
				modifier = { add = -21 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 21 } } }
				modifier = { add = -22 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 22 } } }
				modifier = { add = -23 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 23 } } }
				modifier = { add = -24 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 24 } } }
				modifier = { add = -25 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 25 } } }
				modifier = { add = -26 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 26 } } }
				modifier = { add = -27 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 27 } } }
				modifier = { add = -28 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 28 } } }
				modifier = { add = -29 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 29 } } }
				modifier = { add = -30 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 30 } } }
				modifier = { add = -31 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 31 } } }
				modifier = { add = -32 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 32 } } }
				modifier = { add = -33 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 33 } } }
				modifier = { add = -34 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 34 } } }
				modifier = { add = -35 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 35 } } }
				modifier = { add = -36 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 36 } } }
				modifier = { add = -37 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 37 } } }
				modifier = { add = -38 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 38 } } }
				modifier = { add = -39 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 39 } } }
				modifier = { add = -40 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 40 } } }
				modifier = { add = -41 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 41 } } }
				modifier = { add = -42 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 42 } } }
				modifier = { add = -43 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 43 } } }
				modifier = { add = -44 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 44 } } }
				modifier = { add = -45 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 45 } } }
				modifier = { add = -46 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 46 } } }
				modifier = { add = -47 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 47 } } }
				modifier = { add = -48 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 48 } } }
				modifier = { add = -49 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 49 } } }
				modifier = { add = -50 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 50 } } }
				modifier = { add = -51 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 51 } } }
				modifier = { add = -52 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 52 } } }
				modifier = { add = -53 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 53 } } }
				modifier = { add = -54 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 54 } } }
				modifier = { add = -55 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 55 } } }
				modifier = { add = -56 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 56 } } }
				modifier = { add = -57 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 57 } } }
				modifier = { add = -58 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 58 } } }
				modifier = { add = -59 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 59 } } }
				modifier = { add = -60 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 60 } } }
				modifier = { add = -61 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 61 } } }
				modifier = { add = -62 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 62 } } }
				modifier = { add = -63 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 63 } } }
				modifier = { add = -64 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 64 } } }
				modifier = { add = -65 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 65 } } }
				modifier = { add = -66 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 66 } } }
				modifier = { add = -67 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 67 } } }
				modifier = { add = -68 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 68 } } }
				modifier = { add = -69 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 69 } } }
				modifier = { add = -70 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 70 } } }
				modifier = { add = -71 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 71 } } }
				modifier = { add = -72 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 72 } } }
				modifier = { add = -73 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 73 } } }
				modifier = { add = -74 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 74 } } }
				modifier = { add = -75 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 75 } } }
				modifier = { add = -76 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 76 } } }
				modifier = { add = -77 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 77 } } }
				modifier = { add = -78 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 78 } } }
				modifier = { add = -79 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 79 } } }
				modifier = { add = -80 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 80 } } }
				modifier = { add = -81 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 81 } } }
				modifier = { add = -82 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 82 } } }
				modifier = { add = -83 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 83 } } }
				modifier = { add = -84 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 84 } } }
				modifier = { add = -85 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 85 } } }
				modifier = { add = -86 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 86 } } }
				modifier = { add = -87 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 87 } } }
				modifier = { add = -88 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 88 } } }
				modifier = { add = -89 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 89 } } }
				modifier = { add = -90 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 90 } } }
				modifier = { add = -91 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 91 } } }
				modifier = { add = -92 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 92 } } }
				modifier = { add = -93 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 93 } } }
				modifier = { add = -94 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 94 } } }
				modifier = { add = -95 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 95 } } }
				modifier = { add = -96 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 96 } } }
				modifier = { add = -97 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 97 } } }
				modifier = { add = -98 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 98 } } }
				modifier = { add = -99 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value = 99 } } }
				modifier = { add = -100 event_target:flusion_primitives_country = { check_variable = { which = flusion_operation_odds value >= 100 } } }
			}
		}
	}
}

#success :))))))
country_event = {
	id = giga_katrebels.2100
	title = "giga_katrebels.2100.name"
	desc = "giga_katrebels.2100.desc"
	is_triggered_only = yes
	picture = GFX_evt_civil_action
	show_sound = event_celebration

	trigger = {
		NOT = { has_country_flag = waiting_for_flusion_res_results }
	}

	immediate = {
		set_country_flag = waiting_for_flusion_res_results
		if = {
			limit = { has_global_flag = targeting_solak }
			increase_solak_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_ravka }
			increase_ravka_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_zousa }
			increase_zousa_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_puffy }
			increase_puffy_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_mercuria }
			increase_mercuria_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_katzen }
			increase_katzen_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_laurn }
			increase_laurn_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_symby }
			increase_symby_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_katown }
			increase_katown_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_lyuin }
			increase_lyuin_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_ezicania }
			increase_ezicania_partisans = yes
		}
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		update_total_flusion_res_value = yes
	}

	option = {
		name = "giga_katrebels.2100.a"
		custom_tooltip = "giga_katrebels.2100.a.tooltip"
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = is_the_country_doing_flusion_op
			remove_country_flag = waiting_for_flusion_res_results
		}
	}
}

#success (+ res) :))))))
country_event = {
	id = giga_katrebels.2102
	title = "giga_katrebels.2102.name"
	desc = "giga_katrebels.2102.desc"
	is_triggered_only = yes
	picture = GFX_evt_treasure_pile
	show_sound = event_celebration

	trigger = {
		NOT = { has_country_flag = waiting_for_flusion_res_results }
	}

	immediate = {
		set_country_flag = waiting_for_flusion_res_results
		if = {
			limit = { has_global_flag = targeting_solak }
			increase_solak_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_ravka }
			increase_ravka_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_zousa }
			increase_zousa_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_puffy }
			increase_puffy_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_mercuria }
			increase_mercuria_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_katzen }
			increase_katzen_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_laurn }
			increase_laurn_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_symby }
			increase_symby_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_katown }
			increase_katown_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_lyuin }
			increase_lyuin_partisans = yes
		}
		if = {
			limit = { has_global_flag = targeting_ezicania }
			increase_ezicania_partisans = yes
		}
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		increase_solak_resources = yes
		increase_solak_resources = yes
		update_total_flusion_res_value = yes
	}

	option = {
		name = "giga_katrebels.2102.a"
		custom_tooltip = "giga_katrebels.2102.a.tooltip"
		hidden_effect = {
			remove_country_flag = is_the_country_doing_flusion_op
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = waiting_for_flusion_res_results
		}
	}
}


#failure :((((((
country_event = {
	id = giga_katrebels.2101
	title = "giga_katrebels.2101.name"
	desc = "giga_katrebels.2101.desc"
	is_triggered_only = yes
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot

	trigger = {
		NOT = { has_country_flag = waiting_for_flusion_res_results }
	}
	
	immediate = {
		increase_katzen_wary = yes
		set_country_flag = waiting_for_flusion_res_results
	}

	option = {
		name = "giga_katrebels.2101.a"
		custom_tooltip = "giga_katrebels.2101.a.tooltip"
		hidden_effect = {
			remove_country_flag = is_the_country_doing_flusion_op
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_country_flag = waiting_for_flusion_res_results
		}
	}
}

###MOON BARREL###
country_event = {
	id = giga_katrebels.2020
	title = "giga_katrebels.2020.name"
	desc = "giga_katrebels.2020.desc"
	is_triggered_only = yes
	picture = GFX_evt_ship_in_orbit_2
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_moon_operation_ongoing
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_kaiser_gun
		event_target:katzen_name_tool = { set_name = "Riesigekatzenwaffe" }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 2
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 85
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = "giga_katrebels.2020.a"
		allow = {
			custom_tooltip = "needs_4_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 4
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_one_who_attacked_kaiser_moon
		}
	}

	option = {
		name = "giga_katrebels.2020.b"
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_global_flag = flusion_moon_operation_ongoing
		}
	}
}

###MOON CRUST###
country_event = {
	id = giga_katrebels.2021
	title = "giga_katrebels.2021.name"
	desc = "giga_katrebels.2021.desc"
	is_triggered_only = yes
	picture = GFX_evt_cold_barren
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_moon_operation_ongoing
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_kaiser_moon
		event_target:katzen_name_tool = { set_name = "Mondkruste" }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 2
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 85
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = "giga_katrebels.2020.a"
		allow = {
			custom_tooltip = "needs_4_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 4
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_one_who_attacked_kaiser_moon
		}
	}

	option = {
		name = "giga_katrebels.2020.b"
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_global_flag = flusion_moon_operation_ongoing
		}
	}
}

###MOON THRUSTERS###
country_event = {
	id = giga_katrebels.2022
	title = "giga_katrebels.2022.name"
	desc = "giga_katrebels.2022.desc"
	is_triggered_only = yes
	picture = GFX_evt_wormhole
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_moon_operation_ongoing
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_kaiser_thrusters
		event_target:katzen_name_tool = { set_name = "Movement Systems" }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 2
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 85
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = "giga_katrebels.2020.a"
		allow = {
			custom_tooltip = "needs_4_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 4
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_one_who_attacked_kaiser_moon
		}
	}

	option = {
		name = "giga_katrebels.2020.b"
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_global_flag = flusion_moon_operation_ongoing
		}
	}
}

###MOON WINGS###
country_event = {
	id = giga_katrebels.2023
	title = "giga_katrebels.2023.name"
	desc = "giga_katrebels.2023.desc"
	is_triggered_only = yes
	picture = GFX_evt_ship_travel
	show_sound = event_mystic_reveal

	trigger = {
		NOT = { has_global_flag = flusion_resistance_operation_ongoing }
	}

	immediate = {
		set_global_flag = flusion_moon_operation_ongoing
		set_global_flag = flusion_resistance_operation_ongoing
		clear_flusion_targets = yes
		set_global_flag = targeting_kaiser_wings
		event_target:katzen_name_tool = { set_name = "Vakuumwings" }
		event_target:flusion_primitives_country = {
			set_variable = {
				which = katzen_wary_perc
				value = katzen_wary
			}
			multiply_variable = { #waryness percentage display
				which = katzen_wary_perc
				value = 2
			}
			set_variable = { #base
				which = flusion_success_chance_total
				value = 85
			}
			subtract_variable = { #add wary
				which = flusion_success_chance_total
				value = katzen_wary_perc
			}
			remove_negative_flusion_odds = yes
		}
	}

	option = {
		name = "giga_katrebels.2020.a"
		allow = {
			custom_tooltip = "needs_4_solak_res"
			hidden_trigger = {
				event_target:flusion_primitives_country = {
					check_variable = {
						which = solak_resources
						value >= 4
					}
				}
			}
		}
		hidden_effect = {
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			decrease_solak_resources = yes
			event_target:flusion_primitives_country = {
				set_variable = {
					which = flusion_operation_odds
					value = flusion_success_chance_total
				}
			}
			set_country_flag = is_the_one_who_attacked_kaiser_moon
		}
	}

	option = {
		name = "giga_katrebels.2020.b"
		hidden_effect = {
			remove_global_flag = flusion_resistance_operation_ongoing
			remove_global_flag = flusion_moon_operation_ongoing
		}
	}
}

#success :))))))
country_event = {
	id = giga_katrebels.2120
	title = "giga_katrebels.2120.name"
	desc = "giga_katrebels.2120.desc"
	is_triggered_only = yes
	picture = GFX_evt_large_explosion
	show_sound = event_celebration

	trigger = {
		NOT = { has_country_flag = waiting_for_flusion_res_results }
	}
	
	immediate = {
		set_country_flag = waiting_for_flusion_res_results
		increase_katzen_wary = yes
		increase_katzen_wary = yes
		if = {
			limit = { has_global_flag = targeting_kaiser_gun }
			set_timed_global_flag = {
				flag = kaiser_moon_barrel_sabotaged
				days = 1080
			}
			event_target:target_kaiser_moon_ship = {
				add_modifier = {
					modifier = kaiser_moon_gun_sabotaged
					days = 360
				}
			}
		}
		if = {
			limit = { has_global_flag = targeting_kaiser_moon }
			set_timed_global_flag = {
				flag = kaiser_moon_moon_sabotaged
				days = 1080
			}
			event_target:target_kaiser_moon_ship = {
				add_modifier = {
					modifier = kaiser_moon_moon_sabotaged
					days = 360
				}
			}
		}
		if = {
			limit = { has_global_flag = targeting_kaiser_thrusters }
			set_timed_global_flag = {
				flag = kaiser_moon_thrusters_sabotaged
				days = 1080
			}
			event_target:target_kaiser_moon_ship = {
				add_modifier = {
					modifier = kaiser_moon_thrusters_sabotaged
					days = 360
				}
			}
		}
		if = {
			limit = { has_global_flag = targeting_kaiser_wings }
			set_timed_global_flag = {
				flag = kaiser_moon_wings_sabotaged
				days = 1080
			}
			event_target:target_kaiser_moon_ship = {
				add_modifier = {
					modifier = kaiser_moon_wings_sabotaged
					days = 360
				}
			}
		}
	}

	option = {
		name = "giga_katrebels.2120.a"
		custom_tooltip = "giga_katrebels.2120.a.tooltip"
		hidden_effect = {
			remove_country_flag = waiting_for_flusion_res_results
			remove_country_flag = is_the_one_who_attacked_kaiser_moon
			remove_global_flag = flusion_moon_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

#failure :((((((
country_event = {
	id = giga_katrebels.2121
	title = "giga_katrebels.2121.name"
	desc = "giga_katrebels.2121.desc"
	is_triggered_only = yes
	picture = GFX_evt_burning_settlement
	show_sound = event_planetary_riot

	trigger = {
		NOT = { has_country_flag = waiting_for_flusion_res_results }
	}

	immediate = {
		set_country_flag = waiting_for_flusion_res_results
		increase_katzen_wary = yes
	}

	option = {
		name = "giga_katrebels.2121.a"
		custom_tooltip = "giga_katrebels.2101.a.tooltip"
		hidden_effect = {
			remove_country_flag = waiting_for_flusion_res_results
			remove_country_flag = is_the_one_who_attacked_kaiser_moon
			remove_global_flag = flusion_moon_operation_ongoing
			remove_global_flag = flusion_resistance_operation_ongoing
		}
	}
}

country_event = {
	id = giga_katrebels.9999
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = laurn_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9998
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			subtract_variable = {
				which = laurn_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9997
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = solak_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9996
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			subtract_variable = {
				which = solak_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9995
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = zousa_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9994
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			subtract_variable = {
				which = zousa_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9993
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = lyuin_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9992
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			subtract_variable = {
				which = lyuin_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9991
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = mercuria_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9990
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			subtract_variable = {
				which = mercuria_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9989
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = puffy_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9988
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			subtract_variable = {
				which = puffy_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9987
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = symby_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9986
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			subtract_variable = {
				which = symby_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9985
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = ravka_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9984
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			subtract_variable = {
				which = ravka_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9983
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = katzen_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9982
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			subtract_variable = {
				which = katzen_res
				value = 1
			}
		}
	}
}

#EVENTS TO INCREASE RESOURCES
country_event = {
	id = giga_katrebels.9981
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = solak_resources
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.99810
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = solak_resources
				value = 100
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9980
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			subtract_variable = {
				which = solak_resources
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9979
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = katzen_wary
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9978
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			subtract_variable = {
				which = katzen_wary
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9977
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			change_variable = {
				which = katown_res
				value = 1
			}
		}
	}
}

country_event = {
	id = giga_katrebels.9976
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			subtract_variable = {
				which = katown_res
				value = 1
			}
		}
	}
}


# Zuspris contacted
country_event = {
	id = giga_katrebels.0010
	title = "giga_katrebels.0010.name"
	desc = "giga_katrebels.0010.desc"

	is_triggered_only = yes

	show_sound = event_radio_chatter
	picture = GFX_evt_zro_1

	option = {
		name = "giga_katrebels.0010.a"
		hidden_effect = {
			country_event = { id = giga_katrebels.0011 }
		}
	}
}

# Hi Tyukl
country_event = {
	id = giga_katrebels.0011
	title = "giga_katrebels.0011.name"
	desc = "giga_katrebels.0011.desc"

	is_triggered_only = yes

	diplomatic = yes

	trigger = {
		any_country = {
			is_country_type = katzenartig_imperium
		}
	}

	picture_event_data = {
		portrait = event_target:louf
		room = "flusion_ezic_room"
	}

	immediate = {
		set_country_flag = katzen_diplomacy_engaged
	}

	option = {
		default_hide_option = yes
		name = "giga_katrebels.0011.a"
		custom_tooltip = "giga_katrebels.0011.a.tooltip"
		hidden_effect = {
			set_country_flag = gigas_diplo_engaged
			set_country_flag = contacted_ezic_rebels
			set_global_flag = ezic_resistance_active
			country_event = { id = giga_katrebels.0012 }
		}
	}
}

# EZIC CONTACT EVENT
country_event = {
	id = giga_katrebels.0012
	title = "giga_katrebels.0012.name"

	desc = {
		text = "giga_katrebels.0012.low.a"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				OR = {
					check_variable = {
						which = "ezic_resistance_value"
						value = 0
					}
					check_variable = {
						which = "ezic_resistance_value"
						value = 1
					}
				}
			}
		}
	}

	desc = {
		text = "giga_katrebels.0012.low.b"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				OR = {
					check_variable = {
						which = "ezic_resistance_value"
						value = 0
					}
					check_variable = {
						which = "ezic_resistance_value"
						value = 1
					}
				}
			}
		}
	}

	desc = {
		text = "giga_katrebels.0012.low.c"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				OR = {
					check_variable = {
						which = "ezic_resistance_value"
						value = 0
					}
					check_variable = {
						which = "ezic_resistance_value"
						value = 1
					}
				}
			}
		}
	}

	desc = {
		text = "giga_katrebels.0012.mid.a"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				OR = {
					check_variable = {
						which = "ezic_resistance_value"
						value = 2
					}
					check_variable = {
						which = "ezic_resistance_value"
						value = 3
					}
				}
			}
		}
	}

	desc = {
		text = "giga_katrebels.0012.mid.b"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				OR = {
					check_variable = {
						which = "ezic_resistance_value"
						value = 2
					}
					check_variable = {
						which = "ezic_resistance_value"
						value = 3
					}
				}
			}
		}
	}

	desc = {
		text = "giga_katrebels.0012.mid.c"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				OR = {
					check_variable = {
						which = "ezic_resistance_value"
						value = 2
					}
					check_variable = {
						which = "ezic_resistance_value"
						value = 3
					}
				}
			}
		}
	}

	desc = {
		text = "giga_katrebels.0012.high.a"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				OR = {
					check_variable = {
						which = "ezic_resistance_value"
						value = 4
					}
					check_variable = {
						which = "ezic_resistance_value"
						value = 5
					}
				}
			}
		}
	}

	desc = {
		text = "giga_katrebels.0012.high.b"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				OR = {
					check_variable = {
						which = "ezic_resistance_value"
						value = 4
					}
					check_variable = {
						which = "ezic_resistance_value"
						value = 5
					}
				}
			}
		}
	}

	desc = {
		text = "giga_katrebels.0012.high.c"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				OR = {
					check_variable = {
						which = "ezic_resistance_value"
						value = 4
					}
					check_variable = {
						which = "ezic_resistance_value"
						value = 5
					}
				}
			}
		}
	}

	is_triggered_only = yes

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:louf
		room = "flusion_ezic_room"
	}

	trigger = {
		any_country = {
			is_country_type = katzenartig_imperium
		}
	}

	immediate = {
		set_country_flag = katzen_diplomacy_engaged
	}

	#RESISTANCE LEVEL
	option = {
		name = "giga_katrebels.ezic.none"
		allow = { always = no }
		custom_tooltip = "giga_katrebels.ezic.none.tooltip"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "ezic_resistance_value"
					value = 0
				}
			}
		}
	}
	option = {
		name = "giga_katrebels.ezic.low"
		allow = { always = no }
		custom_tooltip = "giga_katrebels.ezic.low.tooltip"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "ezic_resistance_value"
					value = 1
				}
			}
		}
	}
	option = {
		name = "giga_katrebels.ezic.moderate"
		allow = { always = no }
		custom_tooltip = "giga_katrebels.ezic.moderate.tooltip"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "ezic_resistance_value"
					value = 2
				}
			}
		}
	}
	option = {
		name = "giga_katrebels.ezic.significant"
		allow = { always = no }
		custom_tooltip = "giga_katrebels.ezic.significant.tooltip"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "ezic_resistance_value"
					value = 3
				}
			}
		}
	}
	option = {
		name = "giga_katrebels.ezic.high"
		allow = { always = no }
		custom_tooltip = "giga_katrebels.ezic.high.tooltip"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "ezic_resistance_value"
					value = 4
				}
			}
		}
	}
	option = {
		name = "giga_katrebels.ezic.critical"
		allow = { always = no }
		custom_tooltip = "giga_katrebels.ezic.critical.tooltip"
		trigger = {
			NOT = {	has_global_flag = ezic_rebellion_ongoing }
			event_target:flusion_primitives_country = {
				check_variable = {
					which = "ezic_resistance_value"
					value = 5
				}
			}
		}
	}
	option = {
		name = "giga_katrebels.ezic.revolt"
		allow = { always = no }
		custom_tooltip = "giga_katrebels.ezic.revolt.tooltip"
		trigger = {
			has_global_flag = ezic_rebellion_ongoing
		}
	}

	#TALK TO THEM
	option = {
		name = "giga_katrebels.0012.talk"
		hidden_effect = {
			country_event = { id = giga_katrebels.0018 }
		}
	}

	#FUND THEM
	option = {
		name = "giga_katrebels.0012.fund"
		hidden_effect = {
			country_event = { id = giga_katrebels.0013 }
		}
	}

	#VIVE LA REVOLUTION!
	option = {
		name = "giga_katrebels.0012.ezicrevolt"
		custom_tooltip = "giga_katrebels.0012.ezicrevolt.tooltip"
		allow = {
			custom_tooltip = {
				fail_text = "need_ezic_resistance_5"
				event_target:flusion_primitives_country = {
					check_variable = {
						which = "ezic_resistance_value"
						value > 4
					}
				}
			}
			custom_tooltip = {
				fail_text = "cant_recent_ezic_operation"
				NOT = { has_global_flag = ezicanian_resistance_operation_ongoing }
			}
		}
		hidden_effect = {
			country_event = { id = giga_katrebels.0017 }
		}
	}

	#SABOTAGE KAISER MOON
	option = {
		name = "giga_katrebels.0012.sabotmoon"
		custom_tooltip = "giga_katrebels.0012.sabotmoon.tooltip"
		trigger = {
			any_galaxy_fleet = {
				any_owned_ship = {
					is_ship_size = giga_kaiser_moon_flusion
				}
			}
		}
		allow = {
			custom_tooltip = {
				fail_text = "need_ezic_resistance_4"
				event_target:flusion_primitives_country = {
					check_variable = {
						which = "ezic_resistance_value"
						value > 3
					}
				}
			}
			custom_tooltip = {
				fail_text = "cant_recent_ezic_operation"
				NOT = { has_global_flag = ezicanian_resistance_operation_ongoing }
			}
			custom_tooltip = {
				fail_text = "kaiser_moon_already_sabotaged"
				event_target:target_kaiser_moon_ship = {
					NOT = { has_modifier = kaiser_moon_sabotaged }
				}
			}
		}
		hidden_effect = {
			country_event = { id = giga_katrebels.0014 }
		}
	}

	#SABOTAGE ARMY DEPOTS
	option = {
		name = "giga_katrebels.0012.sabotarmy"
		custom_tooltip = "giga_katrebels.0012.sabotarmy.tooltip"
		allow = {
			custom_tooltip = {
				fail_text = "need_ezic_resistance_3"
				event_target:flusion_primitives_country = {
					check_variable = {
						which = "ezic_resistance_value"
						value > 2
					}
				}
			}
			custom_tooltip = {
				fail_text = "cant_recent_ezic_operation"
				NOT = { has_global_flag = ezicanian_resistance_operation_ongoing }
			}
			custom_tooltip = {
				fail_text = "katzen_armies_already_sabotaged"
				event_target:flusion_primitives_country = {
					NOT = { has_modifier = ezic_sabotaged_armies }
				}
			}
		}
		hidden_effect = {
			country_event = { id = giga_katrebels.0015 }
		}
	}

	#SABOTAGE POWER PLANTS
	option = {
		name = "giga_katrebels.0012.sabotplants"
		custom_tooltip = "giga_katrebels.0012.sabotplants.tooltip"
		allow = {
			custom_tooltip = {
				fail_text = "need_ezic_resistance_2"
				event_target:flusion_primitives_country = {
					check_variable = {
						which = "ezic_resistance_value"
						value > 1
					}
				}
			}
			custom_tooltip = {
				fail_text = "cant_recent_ezic_operation"
				NOT = { has_global_flag = ezicanian_resistance_operation_ongoing }
			}
			custom_tooltip = {
				fail_text = "katzen_plants_already_sabotaged"
				event_target:flusion_primitives_country = {
					NOT = { has_modifier = ezic_sabotaged_power }
				}
			}
		}
		hidden_effect = {
			country_event = { id = giga_katrebels.0016 }
		}
	}

	option = {
		default_hide_option = yes
		name = "giga_katrebels.0012.bye"
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
		}
	}
}

#TALK
country_event = {
	id = giga_katrebels.0018
	title = "giga_katrebels.0018.name"

	desc = {
		text = "giga_katrebels.0018.desc"
	}

	is_triggered_only = yes

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:louf
		room = "flusion_ezic_room"
	}

	#Discuss smth else
	option = {
		is_dialog_only = yes
		name = "giga_katrebels.0018.ezicanias"
		response_text = "giga_katrebels.0018.ezicanias.response"
	}

	option = {
		is_dialog_only = yes
		name = "giga_katrebels.0018.empire"
		response_text = "giga_katrebels.0018.empire.response"
	}

	option = {
		is_dialog_only = yes
		name = "giga_katrebels.0018.kaiserbad"
		response_text = "giga_katrebels.0018.kaiserbad.response"
	}

	option = {
		is_dialog_only = yes
		name = "giga_katrebels.0018.kaiserverybad"
		response_text = "giga_katrebels.0018.kaiserverybad.response"
	}

	option = {
		is_dialog_only = yes
		name = "giga_katrebels.0018.whatkaiser"
		response_text = "giga_katrebels.0018.whatkaiser.response"
	}

	#Discuss smth else
	option = {
		default_hide_option = yes
		name = "giga_katrebels.0013.back"
		hidden_effect = {
			country_event = { id = giga_katrebels.0012 }
		}
	}

	#Leave
	option = {
		name = "giga_katrebels.0018.cool"
		response_text = "giga_katrebels.0018.cool.response"
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
		}
	}
}

#REVOLUTION
country_event = {
	id = giga_katrebels.0017
	title = "giga_katrebels.0017.name"

	desc = {
		text = "giga_katrebels.0017.desc"
	}

	is_triggered_only = yes

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:louf
		room = "flusion_ezic_room"
	}

	option = {
		name = "giga_katrebels.0017.yes"
		custom_tooltip = "giga_katrebels.0017.yes.tooltip"
		response_text = "giga_katrebels.0017.reponse"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 2500
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= 500
			}
		}
		add_resource = {
			energy = -2500
			alloys = -500
		}
		hidden_effect = {
			save_global_event_target_as = ezic_liberator #fred the ezics
			country_event = { id = giga_katrebels.00171 days = 20 }
			set_global_flag = preparing_ezic_rebellion
			set_global_flag = ezicanian_resistance_operation_ongoing
			remove_country_flag = katzen_diplomacy_engaged
			event_target:flusion_primitives_country = {
				set_variable = { #initialize coup strength
					which = "ezic_coup_strength"
					value = 1
				}
			}
		}
	}

	#Discuss smth else
	option = {
		name = "giga_katrebels.0013.back"
		hidden_effect = {
			country_event = { id = giga_katrebels.0012 }
		}
	}

	#Leave
	option = {
		default_hide_option = yes
		name = "giga_katrebels.0012.bye"
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
		}
	}
}

#INFLUENCE
country_event = {
	id = giga_katrebels.00171
	title = "giga_katrebels.00171.name"
	desc = "giga_katrebels.00171.desc"
	is_triggered_only = yes
	picture = GFX_evt_voting
	show_sound = event_administrative_work

	trigger = {
		any_country = { is_country_type = katzenartig_imperium }
	}

	option = {
		name = "giga_katrebels.00171.no"
		custom_tooltip = "giga_katrebels.00171.coup.0"
		hidden_effect = {
			country_event = { id = giga_katrebels.00172 days = 20 }
		}
	}

	option = {
		name = "giga_katrebels.00171.a"
		custom_tooltip = "giga_katrebels.00171.coup.1"
		allow = {
			resource_stockpile_compare = {
				resource = influence
				value >= 50
			}
		}
		add_resource = {
			influence = -50
		}
		hidden_effect = {
			country_event = { id = giga_katrebels.00172 days = 20 }
			increase_ezic_coup_1 = yes
			decrease_kaiser_opinion = yes
		}
	}

	option = {
		name = "giga_katrebels.00171.b"
		custom_tooltip = "giga_katrebels.00171.coup.2"
		allow = {
			resource_stockpile_compare = {
				resource = influence
				value >= 150
			}
		}
		add_resource = {
			influence = -150
		}
		hidden_effect = {
			country_event = { id = giga_katrebels.00172 days = 20 }
			increase_ezic_coup_2 = yes
			decrease_kaiser_opinion = yes
		}
	}

	option = {
		name = "giga_katrebels.00171.c"
		custom_tooltip = "giga_katrebels.00171.coup.3"
		allow = {
			resource_stockpile_compare = {
				resource = influence
				value >= 300
			}
		}
		add_resource = {
			influence = -300
		}
		hidden_effect = {
			country_event = { id = giga_katrebels.00172 days = 20 }
			increase_ezic_coup_3 = yes
			decrease_kaiser_opinion = yes
		}
	}
}

#ENERGY
country_event = {
	id = giga_katrebels.00172
	title = "giga_katrebels.00172.name"
	desc = "giga_katrebels.00172.desc"
	is_triggered_only = yes
	picture = GFX_evt_tradestation_interior
	show_sound = event_radio_chatter

	trigger = {
		any_country = { is_country_type = katzenartig_imperium }
	}

	option = {
		name = "giga_katrebels.00171.no"
		custom_tooltip = "giga_katrebels.00171.coup.0"
		hidden_effect = {
			country_event = { id = giga_katrebels.00173 days = 20 }
		}
	}

	option = {
		name = "giga_katrebels.00172.a"
		custom_tooltip = "giga_katrebels.00172.coup.1"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 5000
			}
		}
		add_resource = {
			energy = -5000
		}
		hidden_effect = {
			increase_ezic_coup_1 = yes
			country_event = { id = giga_katrebels.00173 days = 20 }
		}
	}

	option = {
		name = "giga_katrebels.00172.b"
		custom_tooltip = "giga_katrebels.00172.coup.2"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 10000
			}
		}
		add_resource = {
			energy = -10000
		}
		hidden_effect = {
			increase_ezic_coup_2 = yes
			country_event = { id = giga_katrebels.00173 days = 20 }
		}
	}

	option = {
		name = "giga_katrebels.00172.c"
		custom_tooltip = "giga_katrebels.00172.coup.3"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 25000
			}
		}
		add_resource = {
			energy = -25000
		}
		hidden_effect = {
			increase_ezic_coup_3 = yes
			country_event = { id = giga_katrebels.00173 days = 20 }
		}
	}
}

#EQUIPMENT
country_event = {
	id = giga_katrebels.00173
	title = "giga_katrebels.00173.name"
	desc = "giga_katrebels.00173.desc"
	is_triggered_only = yes
	picture = GFX_evt_small_space_battle
	show_sound = event_ground_battle

	trigger = {
		any_country = { is_country_type = katzenartig_imperium }
	}

	option = {
		name = "giga_katrebels.00173.no"
		custom_tooltip = "giga_katrebels.00171.coup.0"
		hidden_effect = {
			country_event = { id = giga_katrebels.00174 days = 5 }
		}
	}

	option = {
		name = "giga_katrebels.00173.a"
		custom_tooltip = "giga_katrebels.00172.coup.1"
		allow = {
			resource_stockpile_compare = {
				resource = alloys
				value >= 3500
			}
		}
		add_resource = {
			alloys = -3500
		}
		hidden_effect = {
			increase_ezic_coup_1 = yes
			country_event = { id = giga_katrebels.00174 days = 5 }
		}
	}

	option = {
		name = "giga_katrebels.00173.b"
		custom_tooltip = "giga_katrebels.00172.coup.2"
		allow = {
			resource_stockpile_compare = {
				resource = alloys
				value >= 7500
			}
		}
		add_resource = {
			alloys = -7500
		}
		hidden_effect = {
			increase_ezic_coup_2 = yes
			country_event = { id = giga_katrebels.00174 days = 5 }
		}
	}

	option = {
		name = "giga_katrebels.00173.c"
		custom_tooltip = "giga_katrebels.00172.coup.3"
		allow = {
			resource_stockpile_compare = {
				resource = alloys
				value >= 12500
			}
		}
		add_resource = {
			alloys = -12500
		}
		hidden_effect = {
			increase_ezic_coup_3 = yes
			country_event = { id = giga_katrebels.00174 days = 5 }
		}
	}
}

#get ready
country_event = {
	id = giga_katrebels.00174
	title = "giga_katrebels.00174.name"
	desc = "giga_katrebels.00174.desc"
	is_triggered_only = yes
	picture = GFX_evt_smugglers_in_bar
	show_sound = event_conversation

	trigger = {
		any_country = { is_country_type = katzenartig_imperium }
	}

	option = {
		name = "giga_katrebels.00174.a"
		custom_tooltip = "giga_katrebels.00174.a.tooltip"
		hidden_effect = {
			country_event = { id = giga_katrebels.00175 days = 30 }
		}
	}
}

#NO LONGER IN ORDER
country_event = {
	id = giga_katrebels.00175
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		any_country = { is_country_type = katzenartig_imperium }
	}

	immediate = {
		remove_global_flag = preparing_ezic_rebellion
		set_global_flag = ezic_rebellion_ongoing
		event_target:flusion_primitives_country = {
			event_target:louf = {
				exile_leader_as = loufmoving
			}
			random_planet_within_border = { #designate one planet as the source
				limit = {
					owner = { is_country_type = katzenartig_imperium }
					solar_system = {
						NOT = { has_star_flag = flusion_system }
					}
					is_colony = yes
				}
				save_global_event_target_as = ezic_rebel_source
				solar_system = { set_star_flag = ezic_rebel_system }
			}
			every_planet_within_border = {
				limit = {
					is_colony = yes
					owner = { is_country_type = katzenartig_imperium }
					solar_system = { NOT = { has_star_flag = flusion_system } }
				}
				random_list = {
					10 = {
						solar_system = {
							set_star_flag = ezic_rebel_system
							every_neighbor_system = {
								limit = {
									owner = { is_country_type = katzenartig_imperium }
									NOR = {
										any_system_planet = { owner = { is_country_type = katzenartig_imperium } }
										has_star_flag = flusion_system
									}
								}
								random = {
									chance = 90
									set_star_flag = ezic_rebel_system
								}
							}
						}
						modifier = { add = 10 event_target:flusion_primitives_country = { has_global_flag = ezics_denounced } }
						modifier = { add = 3 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 1 } } }
						modifier = { add = 6 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 2 } } }
						modifier = { add = 9 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 3 } } }
						modifier = { add = 12 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 4 } } }
						modifier = { add = 15 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 5 } } }
						modifier = { add = 18 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 6 } } }
						modifier = { add = 21 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 7 } } }
						modifier = { add = 24 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 8 } } }
						modifier = { add = 27 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 9 } } }
						modifier = { add = 30 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 10 } } }
					}
					80 = {
						modifier = { add = -3 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 1 } } }
						modifier = { add = -6 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 2 } } }
						modifier = { add = -9 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 3 } } }
						modifier = { add = -12 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 4 } } }
						modifier = { add = -15 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 5 } } }
						modifier = { add = -18 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 6 } } }
						modifier = { add = -21 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 7 } } }
						modifier = { add = -24 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 8 } } }
						modifier = { add = -27 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 9 } } }
						modifier = { add = -30 event_target:flusion_primitives_country = { check_variable = { which = ezic_coup_strength value = 10 } } }
					}
				}
			}
		}
		event_target:ezic_rebel_source = {
			create_ezic_revolt = yes
		}
		every_country = {
			clear_contribute_ezic_modifiers = yes
		}
		event_target:ezic_liberator = {
			add_opinion_modifier = {
				who = event_target:ezic_rebels_country
				modifier = opinion_anti_katzen_partisans
			}
		}
		event_target:ezic_rebels_country = {
			add_modifier = {
				modifier = katzenartig_major_splinter
				days = 3600
			}
			add_opinion_modifier = {
				who = event_target:ezic_liberator
				modifier = opinion_helped_us_revolt_from_katzen
			}
			every_system_within_border = { #claim all katzen fleets in borders
				every_fleet_in_system = {
					limit = {
						owner = {
							is_country_type = katzenartig_imperium
						}
						NOR = {
							any_owned_ship = {
								is_ship_size = giga_massive_planet
								has_ship_flag = kaiser_moon_ship
							} 
							has_fleet_flag = important_katzen_fleet
						}
					}
					set_owner = event_target:ezic_rebels_country
				}
			}
			every_owned_army = {
				limit = { army_type = flusion_army }
				remove_army = yes
			}
			every_planet_within_border = {
				limit = {
					has_planet_flag = katzen_conquered_planet
				}
				remove_planet_flag = katzen_conquered_planet
				set_name = random
				while = { count = 2	create_army = { name = NAME_ezic_militia	owner = event_target:ezic_rebels_country species = event_target:arcticezics type = "flusion_army" } }
			}
		}
		event_target:flusion_primitives_country = {
			declare_war = {
				target = event_target:ezic_rebels_country
				attacker_war_goal = "wg_katzen_conquest"
				name = "Zuspri Revolution"
			}
		}
		every_country = {
			limit = { has_country_flag = allied_to_kaiser }
			join_war = event_target:flusion_primitives_country
		}
		every_country = {
			country_event = { id = giga_katrebels.00176 }
		}
		event_target:eziccountry = {
			if = {
				limit = { any_owned_ship = { is_ship_size = giga_katzen_submarine } }
				every_owned_ship = {
					limit = { is_ship_size = giga_katzen_submarine }
					destroy_ship = THIS
				}
			}
			if = {
				limit = { any_owned_ship = { is_ship_size = giga_katzen_submarine_submerged } }
				every_owned_ship = {
					limit = { is_ship_size = giga_katzen_submarine_submerged }
					destroy_ship = THIS
				}
			}
		}
	}
}

country_event = {
	id = giga_katrebels.00176
	title = "giga_katrebels.00176.name"
	desc = "giga_katrebels.00176.desc"
	is_triggered_only = yes
	picture = GFX_evt_ezic_eyes
	show_sound = event_space_whale

	option = {
		name = "giga_katrebels.00176.a"
	}
}

#ezics dead :(
country_event = {
	id = giga_katrebels.00177
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_country_flag = ezic_rebels_country
		any_country = { is_country_type = katzenartig_imperium }
		has_global_flag = katzenartig_imperium_happened
		NOT = { has_global_flag = katzenartig_imperium_defeated }
	}

	immediate = {
		event_target:louf = {
			exile_leader_as = loufmoving
		}
		event_target:flusion_primitives_country = {
			set_leader = loufmoving
		}
		remove_global_flag = ezicanian_resistance_operation_ongoing
		remove_global_flag = ezic_rebellion_ongoing
		decrease_ezic_resistance = yes
		decrease_ezic_resistance = yes
		decrease_ezic_resistance = yes
		every_country = {
			country_event = { id = giga_katrebels.00178 }
		}
	}
}

country_event = {
	id = giga_katrebels.00178
	title = "giga_katrebels.00178.name"
	desc = "giga_katrebels.00178.desc"
	is_triggered_only = yes
	picture = GFX_evt_surrender
	show_sound = event_planetary_riot

	option = {
		name = "giga_katrebels.00178.a"
		custom_tooltip = "giga_katrebels.00178.a.tooltip"
	}
}

#ezic mutation increase res
country_event = {
	id = giga_katrebels.01234
	title = "giga_katrebels.01234.name"
	desc = "giga_katrebels.01234.desc"
	is_triggered_only = yes
	picture = GFX_evt_ezic_eyes
	show_sound = event_space_whale

	immediate = {
		increase_ezic_resistance = yes
	}

	option = {
		name = "giga_katrebels.01234.a"
	}
}

#SABOTAGE POWER PLANTS
country_event = {
	id = giga_katrebels.0016
	title = "giga_katrebels.0016.name"

	desc = {
		text = "giga_katrebels.0016.desc"
	}

	is_triggered_only = yes

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:louf
		room = "flusion_ezic_room"
	}


	option = {
		name = "giga_katrebels.0016.low"
		response_text = "giga_katrebels.0016.reponse"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 3000
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= 500
			}
		}
		add_resource = {
			energy = -3000
			alloys = -500
		}
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
			set_timed_global_flag = {
				flag = ezicanian_resistance_operation_ongoing
				days = 180
			}
			random = { #Kaiser finds out
				chance = 25
				country_event = { id = giga_katrebels.0103 days = 40 }
			}
			event_target:flusion_primitives_country = {
				random_list = {
					10 = {
						country_event = { id = giga_katrebels.00165 days = 30 }
					}
					50 = {
						country_event = { id = giga_katrebels.00163 days = 30 }
					}
					40 = {
						country_event = { id = giga_katrebels.00161 days = 30 }
					}
				}
			}
		}
	}

	option = {
		name = "giga_katrebels.0016.med"
		response_text = "giga_katrebels.0016.reponse"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 5000
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= 1000
			}
		}
		add_resource = {
			energy = -5000
			alloys = -1500
		}
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
			set_timed_global_flag = {
				flag = ezicanian_resistance_operation_ongoing
				days = 180
			}
			random = { #Kaiser finds out
				chance = 25
				country_event = { id = giga_katrebels.0103 days = 40 }
			}
			event_target:flusion_primitives_country = {
				random_list = {
					10 = {
						country_event = { id = giga_katrebels.00165 days = 30 }
					}
					70 = {
						country_event = { id = giga_katrebels.00163 days = 30 }
					}
					20 = {
						country_event = { id = giga_katrebels.00161 days = 30 }
					}
				}
			}
		}
	}

	#Discuss smth else
	option = {
		name = "giga_katrebels.0013.back"
		hidden_effect = {
			country_event = { id = giga_katrebels.0012 }
		}
	}

	#Leave
	option = {
		default_hide_option = yes
		name = "giga_katrebels.0012.bye"
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
		}
	}
}

#Sabotage failure
country_event = {
	id = giga_katrebels.00161
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		decrease_ezic_resistance = yes
		every_country = {
			limit = { has_country_flag = contacted_ezic_rebels }
			country_event = { id = giga_katrebels.00162 }
		}
	}
}

country_event = {
	id = giga_katrebels.00162
	title = "giga_katrebels.00162.name"
	desc = "giga_katrebels.00162.desc"
	is_triggered_only = yes
	picture = GFX_evt_burning_settlement
	show_sound = event_bad_omen

	option = {
		name = "giga_katrebels.00162.a"
		custom_tooltip = "giga_katrebels.ezic.decreases"
	}
}

#Sabotage success
country_event = {
	id = giga_katrebels.00163
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			add_modifier = {
				modifier = ezic_sabotaged_power
				days = 720
			}
		}
		every_country = {
			limit = { has_country_flag = contacted_ezic_rebels }
			country_event = { id = giga_katrebels.00164 }
		}
	}
}

country_event = {
	id = giga_katrebels.00164
	title = "giga_katrebels.00164.name"
	desc = "giga_katrebels.00164.desc"
	is_triggered_only = yes
	picture = GFX_evt_generator_powerup
	show_sound = event_power_down

	option = {
		name = "giga_katrebels.00164.a"
		custom_tooltip = "giga_katrebels.00164.a.tooltip"
	}
}

#Sabotage epic success
country_event = {
	id = giga_katrebels.00165
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			add_modifier = {
				modifier = ezic_sabotaged_power
				days = 720
			}
			increase_ezic_resistance = yes
		}
		every_country = {
			limit = { has_country_flag = contacted_ezic_rebels }
			country_event = { id = giga_katrebels.00166 }
		}
	}
}

country_event = {
	id = giga_katrebels.00166
	title = "giga_katrebels.00166.name"
	desc = "giga_katrebels.00166.desc"
	is_triggered_only = yes
	picture = GFX_evt_generator_powerup
	show_sound = event_power_down

	option = {
		name = "giga_katrebels.00166.a"
		custom_tooltip = "giga_katrebels.00166.a.tooltip"
	}
}

#SABOTAGE ARMIES
country_event = {
	id = giga_katrebels.0015
	title = "giga_katrebels.0015.name"

	desc = {
		text = "giga_katrebels.0015.desc"
	}

	is_triggered_only = yes

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:louf
		room = "flusion_ezic_room"
	}


	option = {
		name = "giga_katrebels.0015.low"
		response_text = "giga_katrebels.0015.reponse"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 3000
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= 500
			}
		}
		add_resource = {
			energy = -3000
			alloys = -500
		}
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
			set_timed_global_flag = {
				flag = ezicanian_resistance_operation_ongoing
				days = 180
			}
			random = { #Kaiser finds out
				chance = 25
				country_event = { id = giga_katrebels.0103 days = 40 }
			}
			event_target:flusion_primitives_country = {
				random_list = {
					10 = {
						country_event = { id = giga_katrebels.00155 days = 30 }
					}
					40 = {
						country_event = { id = giga_katrebels.00153 days = 30 }
					}
					50 = {
						country_event = { id = giga_katrebels.00151 days = 30 }
					}
				}
			}
		}
	}

	option = {
		name = "giga_katrebels.0015.med"
		response_text = "giga_katrebels.0015.reponse"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 6000
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= 1500
			}
		}
		add_resource = {
			energy = -6000
			alloys = -1500
		}
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
			set_timed_global_flag = {
				flag = ezicanian_resistance_operation_ongoing
				days = 180
			}
			random = { #Kaiser finds out
				chance = 25
				country_event = { id = giga_katrebels.0103 days = 40 }
			}
			event_target:flusion_primitives_country = {
				random_list = {
					10 = {
						country_event = { id = giga_katrebels.00155 days = 30 }
					}
					60 = {
						country_event = { id = giga_katrebels.00153 days = 30 }
					}
					30 = {
						country_event = { id = giga_katrebels.00151 days = 30 }
					}
				}
			}
		}
	}

	#Discuss smth else
	option = {
		name = "giga_katrebels.0013.back"
		hidden_effect = {
			country_event = { id = giga_katrebels.0012 }
		}
	}

	#Leave
	option = {
		default_hide_option = yes
		name = "giga_katrebels.0012.bye"
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
		}
	}
}

#Sabotage failure
country_event = {
	id = giga_katrebels.00151
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		decrease_ezic_resistance = yes
		every_country = {
			limit = { has_country_flag = contacted_ezic_rebels }
			country_event = { id = giga_katrebels.00152 }
		}
	}
}

country_event = {
	id = giga_katrebels.00152
	title = "giga_katrebels.00152.name"
	desc = "giga_katrebels.00152.desc"
	is_triggered_only = yes
	picture = GFX_evt_surrender
	show_sound = event_planetary_riot

	option = {
		name = "giga_katrebels.00152.a"
		custom_tooltip = "giga_katrebels.ezic.decreases"
	}
}

#Sabotage success
country_event = {
	id = giga_katrebels.00153
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			add_modifier = {
				modifier = ezic_sabotaged_armies
				days = 720
			}
		}
		every_country = {
			limit = { has_country_flag = contacted_ezic_rebels }
			country_event = { id = giga_katrebels.00154 }
		}
	}
}

country_event = {
	id = giga_katrebels.00154
	title = "giga_katrebels.00154.name"
	desc = "giga_katrebels.00154.desc"
	is_triggered_only = yes
	picture = GFX_evt_burning_settlement
	show_sound = event_ground_battle

	option = {
		name = "giga_katrebels.00154.a"
		custom_tooltip = "giga_katrebels.00154.a.tooltip"
	}
}

#Sabotage great success
country_event = {
	id = giga_katrebels.00155
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:flusion_primitives_country = {
			add_modifier = {
				modifier = ezic_sabotaged_armies
				days = 720
			}
			increase_ezic_resistance = yes
		}
		every_country = {
			limit = { has_country_flag = contacted_ezic_rebels }
			country_event = { id = giga_katrebels.00156 }
		}
	}
}

country_event = {
	id = giga_katrebels.00156
	title = "giga_katrebels.00156.name"
	desc = "giga_katrebels.00156.desc"
	is_triggered_only = yes
	picture = GFX_evt_burning_settlement
	show_sound = event_ground_battle

	option = {
		name = "giga_katrebels.00156.a"
		custom_tooltip = "giga_katrebels.00156.a.tooltip"
	}
}


#SABOTAGE KAISER MOON
country_event = {
	id = giga_katrebels.0014
	title = "giga_katrebels.0014.name"

	desc = {
		text = "giga_katrebels.0014.desc"
	}

	is_triggered_only = yes

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:louf
		room = "flusion_ezic_room"
	}


	option = {
		name = "giga_katrebels.0014.low"
		response_text = "giga_katrebels.0014.reponse"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 5000
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= 500
			}
		}
		add_resource = {
			energy = -5000
			alloys = -500
		}
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
			set_timed_global_flag = {
				flag = ezicanian_resistance_operation_ongoing
				days = 180
			}
			random = { #Kaiser finds out
				chance = 50
				country_event = { id = giga_katrebels.0103 days = 40 }
			}
			event_target:flusion_primitives_country = {
				random_list = {
					10 = {
						country_event = { id = giga_katrebels.00145 days = 30 }
					}
					30 = {
						country_event = { id = giga_katrebels.00143 days = 30 }
					}
					60 = {
						country_event = { id = giga_katrebels.00141 days = 30 }
					}
				}
			}
		}
	}

	option = {
		name = "giga_katrebels.0014.med"
		response_text = "giga_katrebels.0014.reponse"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 7500
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= 1000
			}
		}
		add_resource = {
			energy = -7500
			alloys = -1000
		}
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
			set_timed_global_flag = {
				flag = ezicanian_resistance_operation_ongoing
				days = 180
			}
			random = { #Kaiser finds out
				chance = 50
				country_event = { id = giga_katrebels.0103 days = 40 }
			}
			event_target:flusion_primitives_country = {
				random_list = {
					10 = {
						country_event = { id = giga_katrebels.00145 days = 30 }
					}
					50 = {
						country_event = { id = giga_katrebels.00143 days = 30 }
					}
					40 = {
						country_event = { id = giga_katrebels.00141 days = 30 }
					}
				}
			}
		}
	}

	option = {
		name = "giga_katrebels.0014.high"
		response_text = "giga_katrebels.0014.reponse"
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 10000
			}
			resource_stockpile_compare = {
				resource = alloys
				value >= 3000
			}
		}
		add_resource = {
			energy = -10000
			alloys = -3000
		}
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
			set_timed_global_flag = {
				flag = ezicanian_resistance_operation_ongoing
				days = 180
			}
			random = { #Kaiser finds out
				chance = 50
				country_event = { id = giga_katrebels.0103 days = 40 }
			}
			event_target:flusion_primitives_country = {
				random_list = {
					10 = {
						country_event = { id = giga_katrebels.00145 days = 30 }
					}
					70 = {
						country_event = { id = giga_katrebels.00143 days = 30 }
					}
					20 = {
						country_event = { id = giga_katrebels.00141 days = 30 }
					}
				}
			}
		}
	}

	#Discuss smth else
	option = {
		name = "giga_katrebels.0013.back"
		hidden_effect = {
			country_event = { id = giga_katrebels.0012 }
		}
	}

	#Leave
	option = {
		default_hide_option = yes
		name = "giga_katrebels.0012.bye"
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
		}
	}
}

#Sabotage failure
country_event = {
	id = giga_katrebels.00141
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		decrease_ezic_resistance = yes
		every_country = {
			limit = { has_country_flag = contacted_ezic_rebels }
			country_event = { id = giga_katrebels.00142 }
		}
	}
}

country_event = {
	id = giga_katrebels.00142
	title = "giga_katrebels.00142.name"
	desc = "giga_katrebels.00142.desc"
	is_triggered_only = yes
	picture = GFX_evt_night_raid
	show_sound = event_planetary_riot

	option = {
		name = "giga_katrebels.00142.a"
		custom_tooltip = "giga_katrebels.ezic.decreases"
	}
}

#Sabotage success
country_event = {
	id = giga_katrebels.00143
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:target_kaiser_moon_ship = {
			add_modifier = {
				modifier = kaiser_moon_sabotaged
				days = 360
			}
		}
		every_country = {
			limit = { has_country_flag = contacted_ezic_rebels }
			country_event = { id = giga_katrebels.00144 }
		}
	}
}

country_event = {
	id = giga_katrebels.00144
	title = "giga_katrebels.00144.name"
	desc = "giga_katrebels.00144.desc"
	is_triggered_only = yes
	picture = GFX_evt_space_funeral
	show_sound = event_ground_battle

	option = {
		name = "giga_katrebels.00144.a"
		custom_tooltip = "giga_katrebels.00144.a.tooltip"
	}
}

#Sabotage great success
country_event = {
	id = giga_katrebels.00145
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:target_kaiser_moon_ship = {
			add_modifier = {
				modifier = kaiser_moon_sabotaged
				days = 360
			}
			increase_ezic_resistance = yes
		}
		every_country = {
			limit = { has_country_flag = contacted_ezic_rebels }
			country_event = { id = giga_katrebels.00146 }
		}
	}
}

country_event = {
	id = giga_katrebels.00146
	title = "giga_katrebels.00146.name"
	desc = "giga_katrebels.00146.desc"
	is_triggered_only = yes
	picture = GFX_evt_space_funeral
	show_sound = event_ground_battle

	option = {
		name = "giga_katrebels.00146.a"
		custom_tooltip = "giga_katrebels.00146.a.tooltip"
	}
}

#GIVE MONEY TO EZICS
country_event = {
	id = giga_katrebels.0013
	title = "giga_katrebels.0013.name"

	desc = {
		text = "giga_katrebels.0013.desc"
	}

	is_triggered_only = yes

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:louf
		room = "flusion_ezic_room"
	}

	#Contribute a bit. 10% chance that resistance increases every year.
	option = {
		name = "giga_katrebels.0013.a"
		custom_tooltip = "giga_katrebels.0013.a.tooltip"
		response_text = "giga_katrebels.0013.a.response"
		allow = { NOT = { has_modifier = contributing_ezic_1 } }
		hidden_effect = {
			clear_contribute_ezic_modifiers = yes
			add_modifier = {
				modifier = contributing_ezic_1
				days = -1
			}
			remove_country_flag = katzen_diplomacy_engaged
		}
	}

	#Contribute more. 25% chance that resistance increases every year.
	option = {
		name = "giga_katrebels.0013.b"
		custom_tooltip = "giga_katrebels.0013.b.tooltip"
		response_text = "giga_katrebels.0013.a.response"
		allow = { NOT = { has_modifier = contributing_ezic_2 } }
		hidden_effect = {
			clear_contribute_ezic_modifiers = yes
			add_modifier = {
				modifier = contributing_ezic_2
				days = -1
			}
			remove_country_flag = katzen_diplomacy_engaged
		}
	}

	#Contribute a LOT. 50% chance that resistance increases every year.
	option = {
		name = "giga_katrebels.0013.c"
		custom_tooltip = "giga_katrebels.0013.c.tooltip"
		response_text = "giga_katrebels.0013.a.response"
		allow = { NOT = { has_modifier = contributing_ezic_3 } }
		hidden_effect = {
			clear_contribute_ezic_modifiers = yes
			add_modifier = {
				modifier = contributing_ezic_3
				days = -1
			}
			remove_country_flag = katzen_diplomacy_engaged
		}
	}

	#Cancel contribution
	option = {
		name = "giga_katrebels.0013.d"
		response_text = "giga_katrebels.0013.d.response"
		allow = {
			OR = {
				has_modifier = contributing_ezic_1
				has_modifier = contributing_ezic_2
				has_modifier = contributing_ezic_3
			}
		}
		hidden_effect = {
			clear_contribute_ezic_modifiers = yes
			remove_country_flag = katzen_diplomacy_engaged
		}
	}

	#Discuss smth else
	option = {
		name = "giga_katrebels.0013.back"
		hidden_effect = {
			country_event = { id = giga_katrebels.0012 }
		}
	}

	#Discuss smth else
	option = {
		default_hide_option = yes
		name = "giga_katrebels.0012.bye"
		hidden_effect = {
			remove_country_flag = katzen_diplomacy_engaged
		}
	}
}

###YEARLY EVENT! RANDOM EVENTS + RESISTANCE STUFF###
event = {
	id = giga_katrebels.10100
	hide_window = yes
	is_triggered_only = yes

	trigger = { any_country = { is_country_type = katzenartig_imperium } }

	immediate = {
		if = { #Manage Zuspri resistance, increases every year depending on support
			limit = { #HIGH CONTRIBUTION
				any_country = { has_modifier = contributing_ezic_3 }
				event_target:flusion_primitives_country = {
					check_variable = {
						which = "ezic_resistance_value"
						value < 5
					}
				}
				NOR = {
					has_global_flag = preparing_ezic_rebellion
					has_global_flag = ezic_rebellion_ongoing
				}
			}
			random = {
				chance = 50
				increase_ezic_resistance = yes
				every_country = {
					limit = { has_country_flag = contacted_ezic_rebels }
					country_event = { id = giga_katrebels.0101 days = 10 random = 10 }
				}
				every_country = { #kaiser finds out
					limit = { helping_ezic_resistance = yes }
					random = {
						chance = 25
						country_event = { id = giga_katrebels.0103 days = 20 random = 10 }
					}
				}
			}
		}
		else_if = { #MODERATE CONTRIBUTION
			limit = {
				any_country = { has_modifier = contributing_ezic_2 }
				event_target:flusion_primitives_country = {
					check_variable = {
						which = "ezic_resistance_value"
						value < 5
					}
				}
				NOR = {
					has_global_flag = preparing_ezic_rebellion
					has_global_flag = ezic_rebellion_ongoing
				}
			}
			random = {
				chance = 25
				increase_ezic_resistance = yes
				every_country = {
					limit = { has_country_flag = contacted_ezic_rebels }
					country_event = { id = giga_katrebels.0101 days = 10 random = 10 }
				}
				every_country = { #kaiser finds out
					limit = { helping_ezic_resistance = yes }
					random = {
						chance = 25
						country_event = { id = giga_katrebels.0103 days = 20 random = 10 }
					}
				}
			}
		}
		else_if = { #LOW CONTRIBUTION
			limit = {
				any_country = { has_modifier = contributing_ezic_1 }
				event_target:flusion_primitives_country = {
					check_variable = {
						which = "ezic_resistance_value"
						value < 5
					}
				}
				NOR = {
					has_global_flag = preparing_ezic_rebellion
					has_global_flag = ezic_rebellion_ongoing
				}
			}
			random = {
				chance = 10
				increase_ezic_resistance = yes
				every_country = {
					limit = { has_country_flag = contacted_ezic_rebels }
					country_event = { id = giga_katrebels.0101 days = 10 random = 10 }
				}
				every_country = { #kaiser finds out
					limit = { helping_ezic_resistance = yes }
					random = {
						chance = 25
						country_event = { id = giga_katrebels.0103 days = 20 random = 10 }
					}
				}
			}
		}
		if = {
			limit = {
				NOT = {
					any_country = {
						OR = {
							has_modifier = contributing_ezic_1
							has_modifier = contributing_ezic_2
							has_modifier = contributing_ezic_3
						}
					}
				}
				event_target:flusion_primitives_country = {
					check_variable = {
						which = "ezic_resistance_value"
						value > 0
					}
				}
				NOR = {
					has_global_flag = preparing_ezic_rebellion
					has_global_flag = ezic_rebellion_ongoing
				}
			}
			random = {
				chance = 40
				decrease_ezic_resistance = yes
				every_country = {
					limit = { has_country_flag = contacted_ezic_rebels }
					country_event = { id = giga_katrebels.0102 days = 10 random = 10 }
				}
			}
		}
	}
}

country_event = { #+ ezic res (message)
	id = giga_katrebels.0101
	title = "giga_katrebels.0101.name"
	desc = "giga_katrebels.0101.desc"
	picture = GFX_evt_smugglers_in_bar
	show_sound = event_radio_chatter

	is_triggered_only = yes

	option = {
		name = "giga_katrebels.0101.a"
		custom_tooltip = "giga_katrebels.ezic.increase"
	}
}

country_event = { #- ezic res (message)
	id = giga_katrebels.0102
	title = "giga_katrebels.0102.name"
	desc = "giga_katrebels.0102.desc"
	picture = GFX_evt_night_raid
	show_sound = event_radio_chatter

	is_triggered_only = yes

	option = {
		name = "giga_katrebels.0102.a"
		custom_tooltip = "giga_katrebels.ezic.decreases"
	}
}

country_event = { #Kaiser pissed
	id = giga_katrebels.0103
	title = "giga_katrebels.0103.name"
	desc = "giga_katrebels.0103.desc"
	picture = GFX_evt_arguing_senate
	show_sound = event_radio_chatter

	is_triggered_only = yes

	trigger = {
		NOT = { has_country_flag = kaiser_angry_3 }
	}

	option = {
		name = "giga_katrebels.0103.a"
		hidden_effect = {
			decrease_kaiser_opinion = yes
		}
	}
}

#DEBUG
country_event = { #force katzens
	id = giga_katrebels.995

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:gigaflusion = {
			planet_event = { id = giga_katzen.003 }
			planet_event = { id = giga_katzen.009 days = 5 }
		}
	}
}

country_event = { #+ give katzens full galaxy + planets
	id = giga_katrebels.996

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		every_system = {
			limit = {
				NOT = { exists = owner }
			}
			create_starbase = {
				size = starbase_outpost
				owner = event_target:flusion_primitives_country
			}
		}
		while = {
			count = 30
			event_target:global_event_country = {
				country_event = { id = giga_katzen.030 days = 5 }
			}
		}
		event_target:flusion_primitives_country = {
			while = {
				count = 30
				country_event = { id = giga_katzen.040 }
				country_event = { id = giga_katzen.070 days = 10 }
			}
		}
	}
}

country_event = { #+ debug resistance
	id = giga_katrebels.997

	is_triggered_only = yes
	hide_window = yes

	immediate = { remove_global_flag = ezicanian_resistance_operation_ongoing }
}

country_event = { #+ ezic res
	id = giga_katrebels.998

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		increase_ezic_resistance = yes
	}
}

country_event = { #- ezic res
	id = giga_katrebels.999

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		decrease_ezic_resistance = yes
	}
}

###EZICS LEAVE FOR TROPIANA###
country_event = {
	id = giga_katrebels.1000

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		any_country = { #ezics must be around
			OR = {
				has_country_flag = ezic_rebels_country
				any_owned_pop = {
					OR = {
						is_same_species = event_target:arcticezics
						is_same_species = event_target:infusedezics
					}
				}
			}
		}
	}

	immediate = {
		event_target:global_event_country = {
			set_variable = { #count ezics
				which = "tropiana_ezic_count"
				value = 0
			}
			country_event = { id = giga_katrebels.1003 days = 90 } #tropiana
		}
		every_galaxy_pop = {
			limit = {
				is_same_species = event_target:arcticezics
				owner = { is_ai = yes }
			}
			random = { #some stay
				chance = 75
				kill_pop = yes
				event_target:global_event_country = {
					change_variable = {
						which = "tropiana_ezic_count"
						value = 1
					}
				}
			}
		}
		if = { 	#collapse the ezic rebels
			limit = { any_country = { has_country_flag = ezic_rebels_country } }
			random_country = {
				limit = { has_country_flag = ezic_rebels_country }
				save_global_event_target_as = ezicania_rebellion_country
				every_planet_within_border = {
					limit = {
						is_colony = yes
						owner = { has_country_flag = ezic_rebels_country }
						solar_system = {
							NOT = {
								has_star_flag = flusion_system
							}
						}
					}
					create_katzen_splinter_state = yes
					solar_system = { starbase = { set_owner = PREVPREV.owner } }
				}
			}
		}
		event_target:louf = {
			exile_leader_as = loufmoving
		}
		every_country = {
			country_event = { id = giga_katrebels.1001 }
			if = { #ezics within player empires ask to leave
				limit = {
					is_ai = no
					any_owned_pop = {
						is_same_species = event_target:arcticezics
					}
					NOR = {
						has_valid_civic = civic_fanatic_purifiers
						has_valid_civic = civic_hive_devouring_swarm
						has_valid_civic = civic_machine_terminator
					}
				}
				country_event = { id = giga_katrebels.1002 days = 20 }
			}
		}
	}
}

country_event = { #ezics leave
	id = giga_katrebels.1001
	title = "giga_katrebels.1001.name"
	desc = {
		text = "giga_katrebels.1001.desc"
		trigger = {
			NOT = { any_country = { has_country_flag = ezic_rebels_country } }
		}
	}
	desc = {
		text = "giga_katrebels.1001.rebels.desc"
		trigger = {
			any_country = { has_country_flag = ezic_rebels_country }
		}
	}
	picture = GFX_evt_gray_goo_ships
	show_sound = event_pre_ftl_civilization

	is_triggered_only = yes

	option = {
		name = "giga_katrebels.1001.a"
		custom_tooltip = "giga_katrebels.1001.a.tooltip"
		hidden_effect = {
			event_target:ezic_rebels_country = {
				every_system_within_border = {
					limit = {
						any_system_planet = { is_colony = yes owner = { is_country = event_target:ezic_rebels_country } }
					}
					random_system_planet = {
						limit = { is_colony = yes owner = { is_country = event_target:ezic_rebels_country } }
						create_katzen_splinter_state = yes
						solar_system = { starbase = { set_owner = PREVPREV.owner } }
					}
				}
				every_owned_planet = {
					destroy_colony = yes
				}
			}
		}
	}
}

country_event = { #ezics ask to leave
	id = giga_katrebels.1002
	title = "giga_katrebels.1002.name"
	desc = "giga_katrebels.1002.desc"
	picture = GFX_evt_smugglers_in_bar
	show_sound = event_conversation

	is_triggered_only = yes

	option = { #sure
		name = "giga_katrebels.1002.a"
		custom_tooltip = "giga_katrebels.1002.a.tooltip"
		hidden_effect = {
			every_owned_pop = {
				limit = { is_same_species = event_target:arcticezics }
				random = {
					chance = 75
					kill_pop = yes
					event_target:global_event_country = {
						change_variable = {
							which = "tropiana_ezic_count"
							value = 1
						}
					}
				}
			}
		}
	}

	option = { #no lol
		name = "giga_katrebels.1002.b"
		custom_tooltip = "giga_katrebels.1002.b.tooltip"
		hidden_effect = {
			every_owned_pop = {
				limit = { is_same_species = event_target:arcticezics }
				random = {
					chance = 75
					add_modifier = { modifier = ezic_refused_depart days = 1800 }
				}
			}
		}
	}
}

country_event = {
	id = giga_katrebels.1003

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		every_country = {
			country_event = { id = giga_katrebels.1004 days = 2 }
		}
		random_system = { limit = { hyperlane_eligible = yes } spawn_system = { initializer = "giga_tropiana_initializer" } }
		random_system = {
			limit = { has_star_flag = tropiana_system }
			random_list = {
				1 = { while = { count = 1 giga_generate_hyperlane = yes } }
				1 = { while = { count = 2 giga_generate_hyperlane = yes } }
			}
		}
		event_target:tropiana = {
			create_country = {
				name = "Zuspri Intermarium"
				name_list = random
				authority = random
				civics = {
					civic = civic_increasing_urbanization
					civic = civic_atmospheric_pollution
				}
				species = last_created_species
				ethos = {
					ethic = ethic_fanatic_spiritualist
					ethic = ethic_pacifist
				}
				flag = {
					icon={
						category="pirate"
						file="flag_pirate_4.dds"
					}
					background={
						category="backgrounds"
						file="circle.dds"
					}
					colors={
						"light_blue"
						"grey"
						"null"
						"null"
					}
				}
				type = primitive
				effect = {
					set_leader = loufmoving
					set_country_flag = ezic_tropiana_country
					save_global_event_target_as = ezic_tropiana_country
					set_country_flag = tech_frozen
					set_country_flag = ezic_age
					set_pre_ftl_age = giga_ezic_age
					add_modifier = {
						modifier = ezic_tropiana
						days = -1
					}
					every_country = {
						establish_communications_no_message = event_target:ezic_tropiana_country
					}
				}
			}
			set_owner = event_target:ezic_tropiana_country
			set_capital = yes
			set_name = "Hutyukl"
			add_building = building_giga_ezic_capital
			set_update_modifiers_batch = begin
			while = {
				limit = { #all the ezics arrive (oh no)
					event_target:global_event_country = {
						check_variable = {
							which = "tropiana_ezic_count"
							value > 0
						}
					}
				}
				create_pop = {
					species = event_target:arcticezics
				}
				random = {
					chance = 65
					create_army = {
						name = NAME_ezic_rebel
						owner = event_target:ezic_tropiana_country
						species = event_target:arcticezics
						type = "flusion_army"
						land_army = yes
					}
				}
				event_target:global_event_country = {
					subtract_variable = {
						which = "tropiana_ezic_count"
						value = 1
					}
				}
			}
			set_update_modifiers_batch = end
		}
	}
}

country_event = { #Hutyukl
	id = giga_katrebels.1004
	title = "giga_katrebels.1004.name"
	desc = "giga_katrebels.1004.desc"
	picture = GFX_evt_baol_ruins
	show_sound = event_alien_nature

	location = event_target:tropiana

	is_triggered_only = yes

	immediate = {
		event_target:tropiana = {
			solar_system = {
				every_system_planet = {
					set_surveyed = {
						surveyed = yes
						surveyor = root
					}
				}
			}
		}
	}

	option = { #sure
		name = "giga_katrebels.1004.a"
		hidden_effect = {
			if = {
				limit = { is_country = event_target:ezic_liberator }
				country_event = { id = giga_katrebels.1005 days = 15 } #louf gives a gift
			}
		}
	}
}

country_event = { #Hutyukl
	id = giga_katrebels.1005
	title = "giga_katrebels.1005.name"
	desc = "giga_katrebels.1005.desc"

	diplomatic = yes

	is_triggered_only = yes

	picture_event_data = {
		portrait = event_target:ezic_tropiana_country.ruler
		room = personality_spiritual_seekers_room
		planet_background = event_target:tropiana
	}

	option = { #thanks louf
		name = "giga_katrebels.1005.a"
		add_resource = {
			rare_crystals = 5000
			volatile_motes = 5000
			exotic_gases = 5000
			alloys = 25000
		}
	}
}

###ALTERNATE UNIFICATIONS###
namespace = giga_flusionunion

planet_event = {
	id = giga_flusionunion.001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			has_country_flag = flusion_primitives #Flusion still exists
		}
		solar_system = {
			count_ship_in_system = { limit = { is_ship_size = giga_war_moon_flusion }	count >= 1 } #Mondkanone is still a thing
		}
		NOT = { has_planet_flag = ufs_wc }
	}

	immediate = {
		if = {
			limit = { solar_system = { exists = owner } }
			solar_system = {
				owner = { country_event = { id = giga_flusionunion.002 days = 1 } } #Inform spawn owner of this important happening
			}
		}
		set_planet_flag = ufs_wc
		set_planet_flag = nonkatzen_unification
		create_pop = {
			species = event_target:flusionians
			count = 8
		}
		create_pop = {
			species = event_target:kronks
			count = 4
		}
		create_pop = {
			species = event_target:arcticezics
			count = 2
		}
		create_pop = {
			species = event_target:solakians
			count = 3
		}
		event_target:flusion_primitives_country = {
			country_event = { id = giga_flusionunion.003 days = 1800 random = 360 } #They get FTL and demand land
			while = {
				count = 15
				random_owned_pop = {
					kill_pop = yes
				}
			}
			every_owned_army = {
				limit = { army_type = flusion_early_army }
				remove_army = yes
			}
			every_owned_army = {
				limit = { army_type = flusion_army }
				remove_army = yes
			}
			change_country_flag = {
				icon={
					category="flusionian"
					file="ufs_flag.dds"
				}
				background={
					category="backgrounds"
					file="double_triangles.dds"
				}
				colors={
					"green"
					"light_blue"
					"null"
					"null"
				}
			}
			set_name = "United Flusionian States"
			every_owned_fleet = {
				leader = { unassign_leader = this } #Fire Douclaw
			}
			event_target:gigaflusion = {
				create_species = {
					name = "Bribblish Zuspri"
					plural = "Bribblish Zuspris"
					class = REP
					portrait = rep8
					homeworld = event_target:gigaflusion
					traits = {
						trait = trait_pc_continental_preference
						trait = trait_industrious
						trait = trait_agrarian
						trait = trait_quarrelsome
					}
					effect = {
						save_global_event_target_as = bribblish_ezics
					}
				}
			}
			create_leader = {
				class = commander
				species = event_target:bribblish_ezics
				name = "Aaron N. Bleu"
				skill = 5
				gender = male
				set_age = 32
				traits = {
					trait = katzen_trait_elite
					trait = leader_trait_resilient
					trait = leader_trait_trickster
				}
				effect = {
					save_global_event_target_as = laurn_aaron
					set_aaron_real_portrait = yes
				}
			}
			random_owned_fleet = {
				assign_leader = last_created_leader
			}
			country_remove_ethic = "ethic_fanatic_militarist"
			country_add_ethic = "ethic_egalitarian"
		}
		while = { count = 8	create_army = { name = NAME_ufs_army	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_army" } }
	}
}

country_event = {
	id = giga_flusionunion.002
	title = "giga_flusionunion.002.name"
	desc = "giga_flusionunion.002.desc"
	picture = GFX_evt_diplomatic_visit
	show_sound = event_celebration
	location = from
	is_triggered_only = yes

	option = {
		name = "giga_flusionunion.002.a"
	}
}

country_event = { #UFS gets FTL
	id = giga_flusionunion.003
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		event_target:gigaflusion = {
			has_planet_flag = ufs_wc
			owner = {
				has_country_flag = flusion_primitives #Flusion still exists
				NOT = { is_country_type = katzenartig_imperium }
			}
			solar_system = {
				count_ship_in_system = { limit = { is_ship_size = giga_war_moon_flusion }	count >= 1 } #Mondkanone is still a thing
			}
		}
	}

	immediate = {
		event_target:gigaflusion = {
    		create_country = {
				name = "Kaiser will return"
				type = giga_t3_tech_dump
				effect = {
					save_global_event_target_as = flusion_tech_dump
				}
			}
		}
		copy_techs_from = {
			target = event_target:flusion_tech_dump
		}
		event_target:flusion_tech_dump = {
			destroy_country = yes
		}
		remove_country_flag = fusion_age
		set_country_flag = space_flusion_country
		set_graphical_culture = reptilian_01
		force_remove_civic = civic_atmospheric_pollution
		force_remove_civic = civic_increasing_urbanization
		force_add_civic = civic_beacon_of_liberty
		force_add_civic = civic_efficient_bureaucracy
		set_country_type = default
		add_resource = {
			minerals = 50000
			alloys = 10000
			energy = 50000
			food = 50000
			consumer_goods = 25000
			exotic_gases = 5000
			volatile_motes = 5000
			rare_crystals = 5000
			influence = 250
		}
		add_modifier = {
			modifier = ufs_buffs
			days = -1
		}
		create_leader = {
			class = official
			species = event_target:solakians
			gender = male
			set_age = 41
			name = "Dofus Tequenik Machina"
			traits = {
				trait = katzen_trait_elite
			}
			effect = {
				save_event_target_as = ufs_ruler
				set_dofus_real_portrait = yes
			}
		}
		set_leader = event_target:ufs_ruler
		create_ship_design = { design = "Voimakas" }
		add_ship_design = last_created_design
		create_ship_design = { design = "Zuspri" }
		add_ship_design = last_created_design
		create_ship_design = { design = "Roqual" }
		add_ship_design = last_created_design
		create_leader = {
			class = commander
			species = event_target:flusion_katzens
			name = "Pawtton"
			skill = 3
			gender = male
			traits = {
				trait = leader_trait_gale_speed
				trait = katzen_trait_blitzkrieg
			}
			effect = {
				save_event_target_as = katzen_admiral
			}
		}
		change_government = {
			authority = auth_oligarchic
		}
		create_fleet = { #Spawn 2 fleets
			name = "Task Force Sonya"
			settings = {
				uses_naval_capacity = no
			}
			effect = {
				set_owner = event_target:flusion_primitives_country
				while = {
					count = 4
					create_ship = {
						name = random
						design = "Voimakas"
						prefix = no
						graphical_culture = reptilian_01
					}
				}
				while = {
					count = 10
					create_ship = {
						name = random
						design = "Roqual"
						prefix = no
						graphical_culture = reptilian_01
					}
				}
				while = {
					count = 25
					create_ship = {
						name = random
						design = "Zuspri"
						prefix = no
						graphical_culture = reptilian_01
					}
				}
				assign_leader = event_target:katzen_admiral
				set_location = {
					target = event_target:gigaflusion
					distance = 15
					angle = random
				}
			}
		}
		create_leader = {
			class = commander
			species = event_target:flusionians
			name = "Commander Cuddles"
			skill = 3
			gender = male
			traits = {
				trait = katzen_trait_elite
				trait = leader_trait_cautious
				trait = leader_trait_trickster
			}
			effect = {
				save_event_target_as = katzen_admiral
				save_global_event_target_as = laurn_cuddles
			}
		}
		create_fleet = {
			name = "Task Force Fritze"
			settings = {
				uses_naval_capacity = no
			}
			effect = {
				set_owner = event_target:flusion_primitives_country
				while = {
					count = 4
					create_ship = {
						name = random
						design = "Voimakas"
						prefix = no
						graphical_culture = reptilian_01
					}
				}
				while = {
					count = 10
					create_ship = {
						name = random
						design = "Roqual"
						prefix = no
						graphical_culture = reptilian_01
					}
				}
				while = {
					count = 25
					create_ship = {
						name = random
						design = "Zuspri"
						prefix = no
						graphical_culture = reptilian_01
					}
				}
				assign_leader = event_target:katzen_admiral
				set_location = {
					target = event_target:gigaflusion
					distance = 15
					angle = random
				}
			}
		}
		create_leader = {
			class = commander
			species = event_target:kronks
			name = "Kronk"
			skill = 3
			gender = male
			traits = {
				trait = leader_trait_cautious
				trait = leader_trait_unyielding
			}
			effect = {
				save_event_target_as = katzen_admiral
			}
		}
		create_fleet = { #Spawn 2 fleets
			name = "Task Force Mercuria"
			settings = {
				uses_naval_capacity = no
			}
			effect = {
				set_owner = event_target:flusion_primitives_country
				while = {
					count = 4
					create_ship = {
						name = random
						design = "Voimakas"
						prefix = no
						graphical_culture = reptilian_01
					}
				}
				while = {
					count = 10
					create_ship = {
						name = random
						design = "Roqual"
						prefix = no
						graphical_culture = reptilian_01
					}
				}
				while = {
					count = 25
					create_ship = {
						name = random
						design = "Zuspri"
						prefix = no
						graphical_culture = reptilian_01
					}
				}
				assign_leader = event_target:katzen_admiral
				set_location = {
					target = event_target:gigaflusion
					distance = 15
					angle = random
				}
			}
		}
		create_leader = {
			class = commander
			species = event_target:flusionians
			name = "Bling"
			skill = 4
			gender = male
			traits = {
				trait = katzen_trait_elite
				trait = leader_trait_adaptable
				trait = leader_trait_unyielding
			}
			effect = {
				save_event_target_as = katzen_admiral
				save_global_event_target_as = laurn_bling
			}
		}
		create_fleet = {
			name = "Task Force Tyukl"
			settings = {
				uses_naval_capacity = no
			}
			effect = {
				set_owner = event_target:flusion_primitives_country
				while = {
					count = 4
					create_ship = {
						name = random
						design = "Voimakas"
						prefix = no
						graphical_culture = reptilian_01
					}
				}
				while = {
					count = 10
					create_ship = {
						name = random
						design = "Roqual"
						prefix = no
						graphical_culture = reptilian_01
					}
				}
				while = {
					count = 25
					create_ship = {
						name = random
						design = "Zuspri"
						prefix = no
						graphical_culture = reptilian_01
					}
				}
				assign_leader = event_target:katzen_admiral
				set_location = {
					target = event_target:gigaflusion
					distance = 15
					angle = random
				}
			}
		}
		create_leader = {
			class = commander
			species = event_target:flusionians
			name = "Habolutus Jack"
			skill = 5
			gender = male
			traits = {
				# trait = leader_trait_glory_seeker
				# trait = leader_trait_army_logistician
			}
			effect = {
				save_event_target_as = ufs_general
			}
		}
		create_fleet = { #Spawn transports
			name = "UFS Extraplanetary Corps"
			settings = {
				spawn_debris = no
				can_upgrade = no
				uses_naval_capacity = no
			}
			effect = {
				set_owner = event_target:flusion_primitives_country
				while = {
					count = 30 #5 transports
					create_army_transport = {
						army_type = assault_army
						species = event_target:flusionians
					}
				}
				assign_leader = event_target:ufs_general
				set_location = {
					target = event_target:gigaflusion
					distance = 15
					angle = random
				}
			}
		}
		random_list = {
			50 = {
				event_target:flusion_primitives_country = {
					country_event = { id = giga_flusionunion.010 days = 1800 random = 1800 } #laurn coup
				}
			}
			50 = {}
		}
		event_target:gigaflusion = {
			set_capital = yes
			remove_building = building_giga_katzen_capital
			add_building = building_system_capital
			solar_system = { #Transfer starbase
				save_global_event_target_as = giga_jublio_system
				if = {
					limit = {
						NOT = { exists = starbase } #No starbase, UFS makes one
					}
					create_starbase = {
						size = starbase_outpost
						owner = root
					}
				}
				else_if = {
					limit = {
						starbase = { owner = { is_ai = yes } }
					}
					random_list = {
						80 = {
							save_event_target_as = ufs_ai_systems
							starbase = { #AI folds
								set_owner = event_target:flusion_primitives_country
							}
							solar_system = {
								every_neighbor_system = {
									if = {
										limit = {
											exists = starbase
											starbase = { owner = { is_country = event_target:ufs_ai_systems } }
										}
										starbase = { set_owner = event_target:flusion_primitives_country }
									}
								}
							}
						}
						20 = {
							starbase = {
								owner = { #Flusion attacks AI
									country_event = { id = giga_flusionunion.006 }
								}
							}
							modifier = {
								factor = 0
								starbase = {
									owner = {
										OR = {
											federation = { any_member = { is_ai = no } }
											any_subject = { is_ai = no }  #not subject of player
											overlord = { is_ai = no }  #not overlord of player
										}
									}
								}
							}
						}
					}
				}
				else_if = {
					limit = {
						starbase = {
							owner = {
								is_ai = no #inform player
							}
						}
					}
					starbase = {
						owner = {
							country_event = { id = giga_flusionunion.004 }
							set_country_flag = seen_ufs
						} #Inform the player
					}
				}
			}
		}
		every_country = {
			limit = {
				NOT = { has_country_flag = seen_ufs }
			}
			country_event = { id = giga_flusionunion.007 days = 15 } #info
		}
		if = { #Make non-hostile
			limit = {
				any_country = {
					is_hostile_to = ROOT
				}
			}
			every_country = {
				set_faction_hostility = {
					target = ROOT
					set_hostile = no
				}
			}
		}
		every_country = {
			establish_communications_no_message = event_target:flusion_primitives_country
		}
		every_country = {
			establish_contact = {
				who = event_target:flusion_primitives_country
				location = event_target:giga_jublio_system
			}
		}
	}
}

country_event = {
	id = giga_flusionunion.004
	title = "giga_flusionunion.004.name"
	desc = "giga_flusionunion.004.desc"
	picture = GFX_evt_ship_in_orbit_2
	show_sound = event_alien_signal
	location = from
	is_triggered_only = yes

	option = {
		name = "giga_flusionunion.004.a"
		hidden_effect = {
			country_event = { id = giga_flusionunion.005 }
		}
	}
}

country_event = {
	id = giga_flusionunion.005
	title = "giga_flusionunion.005.name"
	desc = "giga_flusionunion.005.desc"
	location = from
	is_triggered_only = yes

	diplomatic = yes

	picture_event_data = {
		portrait = event_target:ufs_ruler
		room = "flusion_space_room"
	}

	option = {
		default_hide_option = yes #Yes
		name = "giga_flusionunion.005.a"
		custom_tooltip = "giga_flusionunion.005.a.tooltip"
		response_text = "giga_flusionunion.005.a.response"
		add_resource = {
			energy = 10000
			alloys = 1000
		}
		hidden_effect = {
			event_target:giga_jublio_system = {
				starbase = {
					set_owner = event_target:flusion_primitives_country
				}
				every_system_planet = {
					limit = { is_colony = yes }
					set_owner = event_target:flusion_primitives_country
				}
			}
		}
	}

	option = {
		default_hide_option = yes #No
		name = "giga_flusionunion.005.b"
		custom_tooltip = "giga_flusionunion.005.b.tooltip"
		response_text = "giga_flusionunion.005.b.response"
		hidden_effect = {
			event_target:giga_jublio_system = {
				starbase = {
					set_owner = event_target:flusion_primitives_country
				}
			}
			country_event = { id = giga_flusionunion.006 days = 5 }
		}
	}
}

country_event = {
	id = giga_flusionunion.006
	title = "giga_flusionunion.006.name"
	desc = "giga_flusionunion.006.desc"
	picture = GFX_evt_small_space_battle
	show_sound = event_red_alert
	location = from
	is_triggered_only = yes

	immediate = {
		event_target:giga_jublio_system = {
			every_neighbor_system = {
				limit = {
					owner = { is_country = ROOT }
				}
				set_star_flag = flusion_claimed
				add_claims = {
					who = event_target:flusion_primitives_country
					num_of_claims = 1
					show_notification = yes
				}
				every_neighbor_system = {
					limit = {
						owner = { is_country = ROOT }
						NOT = { has_star_flag = flusion_claimed }
					}
					set_star_flag = flusion_claimed
					add_claims = {
						who = event_target:flusion_primitives_country
						num_of_claims = 1
						show_notification = yes
					}
					every_neighbor_system = {
						limit = {
							owner = { is_country = ROOT }
							NOT = { has_star_flag = flusion_claimed }
						}
						set_star_flag = flusion_claimed
						add_claims = {
							who = event_target:flusion_primitives_country
							num_of_claims = 1
							show_notification = yes
						}
					}
				}
			}
		}
		every_system = {
			limit = { has_star_flag = flusion_claimed }
			remove_star_flag = flusion_claimed
		}
		event_target:flusion_primitives_country = {
			declare_war = {
				target = ROOT
				attacker_war_goal = wg_conquest
			}
		}
	}

	option = {
		name = "giga_flusionunion.006.a"
	}
}

country_event = {
	id = giga_flusionunion.007
	title = "giga_flusionunion.007.name"
	desc = "giga_flusionunion.007.desc"
	picture = GFX_evt_ship_in_orbit_2
	show_sound = event_alien_signal
	location = from
	is_triggered_only = yes

	option = {
		name = "giga_flusionunion.007.a"
	}
}

###THE LAURNAISE COUP###
country_event = {
	id = giga_flusionunion.010
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_country = { is_country = event_target:flusion_primitives_country }
	}

	immediate = {
		every_country = { country_event = { id = giga_flusionunion.011 } }
		event_target:flusion_primitives_country = {
			country_event = { id = giga_flusionunion.012 days = 90 } #remove laurnsys if no flusion
			set_name = "Laurnaise Empire"
			force_remove_civic = civic_beacon_of_liberty
			force_remove_civic = civic_efficient_bureaucracy
			country_remove_ethic = ethic_egalitarian
			country_remove_ethic = ethic_materialist
			country_remove_ethic = ethic_xenophile
			country_add_ethic = ethic_fanatic_authoritarian
			country_add_ethic = ethic_militarist
			set_leader = event_target:laurn_aaron
			event_target:laurn_aaron = {
				add_trait = katzen_trait_elite
			}
			change_country_flag = {
				icon={
					category="flusionian"
					file="laurn_flag.dds"
				}
				background={
					category="backgrounds"
					file="triangle_split.dds"
				}
				colors={
					"purple"
					"burgundy"
					"null"
					"null"
				}
			}
			change_government = {
				authority = auth_dictatorial
			}
			give_technology = { tech = giga_tech_war_moon_1 }
			give_technology = { tech = giga_tech_war_moon_2 }
			force_add_civic = civic_laurandar_aaron
			force_add_civic = civic_distinguished_admiralty
			force_add_civic = civic_nationalistic_zeal
			if = {
				limit = { any_owned_ship = { is_ship_size = giga_war_moon_flusion } }
				random_owned_ship = {
					limit = { is_ship_size = giga_war_moon_flusion }
					fleet = { assign_leader = event_target:laurn_cuddles }
				}
			}
			every_owned_pop = {
				random = {
					chance = 75
					pop_change_ethic = ethic_authoritarian
				}
				random = {
					chance = 55
					pop_change_ethic = ethic_fanatic_authoritarian
				}
			}
			capital_scope = {
				every_planet_army = {
					limit = { army_type = flusion_army }
					remove_army = yes
				}
				while = { count = 12	create_army = { name = NAME_gruntite_army	owner = event_target:flusion_primitives_country species = event_target:flusionians type = "flusion_army" } }
			}
		}
	}
}

country_event = {
	id = giga_flusionunion.011
	title = "giga_flusionunion.011.name"
	desc = "giga_flusionunion.011.desc"
	picture = GFX_evt_aaron
	show_sound = event_ground_battle
	location = from
	is_triggered_only = yes

	option = {
		name = "giga_flusionunion.011.a"
	}
}

country_event = {
	id = giga_flusionunion.012
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = event_target:flusion_primitives_country
		event_target:flusion_primitives_country = {
			has_valid_civic = civic_laurandar_aaron
		}
	}

	immediate = {
		event_target:flusion_primitives_country = {
			if = {
				limit = {
					OR = {
						NOT = {
							any_owned_planet = {
								is_colony = yes
								has_planet_flag = gigaflusion
							}
						}
						NOR = {
							has_ethic = ethic_fanatic_authoritarian
							has_ethic = ethic_authoritarian
						}
					}
				}
				force_remove_civic = civic_laurandar_aaron
				set_name = "Laurandar"
				change_country_flag = {
					icon={
						category="flusionian"
						file="laurn_flag.dds"
					}
					background={
						category="backgrounds"
						file="triangle_split.dds"
					}
					colors={
						"pink"
						"yellow"
						"null"
						"null"
					}
				}
			}
		}
		country_event = { id = giga_flusionunion.012 days = 90 }
	}
}

# #Kronks Win (UNUSED)
# planet_event = {
# 	id = giga_flusionunion.011
# 	hide_window = yes
# 	is_triggered_only = yes

# 	trigger = {
# 		owner = {
# 			has_country_flag = flusion_primitives #Flusion still exists
# 		}
# 		solar_system = {
# 			count_system_ships = { limit = { is_ship_size = giga_war_moon_flusion }	count >= 1 } #Mondkanone is still a thing
# 		}
# 		NOT = { has_planet_flag = kronk_wc }
# 	}

# 	immediate = {
# 		if = {
# 			limit = { solar_system = { exists = owner } }
# 			solar_system = {
# 				owner = { country_event = { id = giga_flusionunion.012 days = 1 } } #Inform spawn owner of this important happening
# 			}
# 		}
# 		set_planet_flag = kronk_wc
# 		set_planet_flag = nonkatzen_unification
# 		while = {
# 			count = 50
# 			create_pop = {
# 				species = event_target:kronks
# 			}
# 		}
# 		add_district = district_city
# 		add_district = district_city
# 		add_district = district_city
# 		add_planet_devastation = 50
# 		event_target:flusion_primitives_country = {
# 			country_event = { id = giga_flusionunion.013 days = 1800 random = 360 } #They get FTL and demand land
# 			while = {
# 				count = 15
# 				random_owned_pop = {
# 					kill_pop = yes
# 				}
# 			}
# 			every_owned_army = {
# 				limit = { army_type = flusion_early_army }
# 				remove_army = yes
# 			}
# 			every_owned_army = {
# 				limit = { army_type = flusion_army }
# 				remove_army = yes
# 			}
# 			change_country_flag = {
# 				icon={
# 					category="domination"
# 					file="domination_6.dds"
# 				}
# 				background={
# 					category="backgrounds"
# 					file="stripe.dds"
# 				}
# 				colors={
# 					"pink"
# 					"red_orange"
# 					"null"
# 					"null"
# 				}
# 			}
# 			set_name = "Kronk"
# 			every_owned_fleet = {
# 				leader = { unassign_leader = this } #Fire Douclaw
# 			}
# 			create_leader = {
# 				class = admiral
# 				species = event_target:kronks
# 				name = "Kronk"
# 				skill = 4
# 				gender = male
# 				set_age = 32
# 				traits = {
# 					trait = leader_trait_unyielding
# 					trait = leader_trait_scout
# 				}
# 			}
# 			random_owned_fleet = {
# 				assign_leader = last_created_leader
# 			}
# 			country_remove_ethic = "ethic_fanatic_militarist"
# 			country_remove_ethic = "ethic_materialist"
# 			country_add_ethic = "ethic_fanatic_spiritualist"
# 			country_add_ethic = "ethic_militarist"
# 		}
# 		while = { count = 12	create_army = { name = "Kronk Swarms"	owner = event_target:flusion_primitives_country species = event_target:kronks type = "flusion_army" land_army = yes } }
# 	}
# }

# country_event = {
# 	id = giga_flusionunion.012
# 	title = "giga_flusionunion.012.name"
# 	desc = "giga_flusionunion.012.desc"
# 	picture = GFX_evt_colony_settlement
# 	show_sound = event_ground_battle
# 	location = from
# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_flusionunion.012.a"
# 	}
# }

# country_event = { #Kronks gets FTL
# 	id = giga_flusionunion.013
# 	hide_window = yes
# 	is_triggered_only = yes

# 	trigger = {
# 		event_target:gigaflusion = {
# 			has_planet_flag = kronk_wc
# 			owner = {
# 				has_country_flag = flusion_primitives #Flusion still exists
# 				NOT = { is_country_type = katzenartig_imperium }
# 			}
# 			solar_system = {
# 				count_system_ships = { limit = { is_ship_size = giga_war_moon_flusion }	count >= 1 } #Mondkanone is still a thing
# 			}
# 		}
# 	}

# 	immediate = {
# 		event_target:gigaflusion = {
#     		create_country = {
# 				name = "Kaiser will return"
# 				type = flusion_t5_tech_dump
# 				effect = {
# 					save_global_event_target_as = flusion_tech_dump
# 				}
# 			}
# 		}
# 		copy_techs_from = {
# 			target = event_target:flusion_tech_dump
# 		}
# 		event_target:flusion_tech_dump = {
# 			destroy_country = yes
# 		}
# 		remove_country_flag = fusion_age
# 		set_country_flag = space_flusion_country
# 		set_graphical_culture = arthropoid_01
# 		force_remove_civic = civic_atmospheric_pollution
# 		force_remove_civic = civic_increasing_urbanization
# 		force_add_civic = civic_exalted_priesthood
# 		force_add_civic = civic_functional_architecture
# 		set_country_type = default
# 		add_resource = {
# 			minerals = 50000
# 			alloys = 10000
# 			energy = 50000
# 			food = 50000
# 			consumer_goods = 25000
# 			exotic_gases = 5000
# 			volatile_motes = 5000
# 			rare_crystals = 5000
# 			influence = 250
# 		}
# 		add_modifier = {
# 			modifier = katzenartig_major_splinter
# 			days = -1
# 		}
# 		create_leader = {
# 			class = governor
# 			species = event_target:kronk
# 			gender = male
# 			set_age = 54
# 			name = "Kronk"
# 			effect = {
# 				save_event_target_as = kronk_ruler
# 			}
# 		}
# 		change_government = {
# 			authority = auth_dictatorial
# 		}
# 		set_leader = event_target:kronk_ruler
# 		create_ship_design = { design = "Voimakas" }
# 		add_ship_design = last_created_design
# 		create_ship_design = { design = "Zuspri" }
# 		add_ship_design = last_created_design
# 		create_ship_design = { design = "Roqual" }
# 		add_ship_design = last_created_design
# 		event_target:gigaflusion = {
# 			set_capital = yes
# 			set_name = "Kronk"
# 			while = {
# 				count = 15
# 				create_pop = {
# 					species = event_target:kronks
# 				}
# 			}
# 			remove_building = building_giga_katzen_capital
# 			add_building = building_system_capital
# 			add_building = building_giga_flusion_home
# 			add_district = district_city
# 			add_district = district_city
# 			add_district = district_city
# 			solar_system = { #Transfer starbase
# 				save_global_event_target_as = giga_jublio_system
# 				if = {
# 					limit = {
# 						NOT = { exists = starbase } #No starbase, Kronks makes one
# 					}
# 					create_starbase = {
# 						size = starbase_outpost
# 						owner = root
# 					}
# 				}
# 				else_if = {
# 					limit = {
# 						starbase = { owner = { is_ai = yes } }
# 					}
# 					random_list = {
# 						5 = {
# 							starbase = { #AI folds
# 								set_owner = event_target:flusion_primitives_country
# 							}
# 						}
# 						95 = {
# 							starbase = {
# 								owner = { #Flusion attacks AI
# 									country_event = { id = giga_flusionunion.016 }
# 								}
# 							}
# 							modifier = {
# 								factor = 0
# 								starbase = {
# 									owner = {
# 										OR = {
# 											federation = { any_member = { is_ai = no } }
# 											any_subject = { is_ai = no }  #not subject of player
# 											overlord = { is_ai = no }  #not overlord of player
# 										}
# 									}
# 								}
# 							}
# 						}
# 					}
# 				}
# 				else_if = {
# 					limit = {
# 						starbase = {
# 							owner = {
# 								is_ai = no #inform player
# 							}
# 						}
# 					}
# 					starbase = {
# 						owner = {
# 							country_event = { id = giga_flusionunion.014 }
# 							set_country_flag = seen_ufs
# 						} #Inform the player
# 					}
# 				}
# 			}
# 		}
# 		every_country = {
# 			limit = {
# 				NOT = { has_country_flag = seen_kronk }
# 			}
# 			country_event = { id = giga_flusionunion.017 days = 15 } #info
# 		}
# 		if = { #Make non-hostile
# 			limit = {
# 				any_country = {
# 					is_hostile_to = ROOT
# 				}
# 			}
# 			every_country = {
# 				set_faction_hostility = {
# 					target = ROOT
# 					set_hostile = no
# 				}
# 			}
# 		}
# 		every_country = {
# 			establish_communications_no_message = event_target:flusion_primitives_country
# 		}
# 		every_country = {
# 			establish_contact = {
# 				who = event_target:flusion_primitives_country
# 				location = event_target:giga_jublio_system
# 			}
# 		}
# 	}
# }

# country_event = {
# 	id = giga_flusionunion.014
# 	title = "giga_flusionunion.014.name"
# 	desc = "giga_flusionunion.014.desc"
# 	picture = GFX_evt_ship_in_orbit
# 	show_sound = event_alien_signal
# 	location = from
# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_flusionunion.014.a"
# 		hidden_effect = {
# 			country_event = { id = giga_flusionunion.015 }
# 		}
# 	}
# }

# country_event = {
# 	id = giga_flusionunion.015
# 	title = "giga_flusionunion.015.name"
# 	desc = "giga_flusionunion.015.desc"
# 	location = from
# 	is_triggered_only = yes

# 	diplomatic = yes

# 	picture_event_data = {
# 		portrait = event_target:ufs_ruler
# 		room = "flusion_space_room"
# 	}

# 	option = {
# 		default_hide_option = yes #Yes
# 		name = "giga_flusionunion.015.a"
# 		custom_tooltip = "giga_flusionunion.015.a.tooltip"
# 		response_text = "giga_flusionunion.015.a.response"
# 		hidden_effect = {
# 			event_target:giga_jublio_system = {
# 				starbase = {
# 					set_owner = event_target:flusion_primitives_country
# 				}
# 				every_system_planet = {
# 					limit = { is_colony = yes }
# 					set_owner = event_target:flusion_primitives_country
# 				}
# 			}
# 		}
# 	}

# 	option = {
# 		default_hide_option = yes #No
# 		name = "giga_flusionunion.015.b"
# 		custom_tooltip = "giga_flusionunion.015.b.tooltip"
# 		response_text = "giga_flusionunion.015.b.response"
# 		hidden_effect = {
# 			event_target:giga_jublio_system = {
# 				starbase = {
# 					set_owner = event_target:flusion_primitives_country
# 				}
# 			}
# 			country_event = { id = giga_flusionunion.016 days = 5 }
# 		}
# 	}
# }

# country_event = {
# 	id = giga_flusionunion.016
# 	title = "giga_flusionunion.016.name"
# 	desc = "giga_flusionunion.016.desc"
# 	picture = GFX_evt_small_space_battle
# 	show_sound = event_red_alert
# 	location = from
# 	is_triggered_only = yes

# 	immediate = {
# 		event_target:giga_jublio_system = {
# 			every_neighbor_system = {
# 				limit = {
# 					owner = { is_country = ROOT }
# 				}
# 				set_star_flag = flusion_claimed
# 				add_claims = {
# 					who = event_target:flusion_primitives_country
# 					num_of_claims = 1
# 					show_notification = yes
# 				}
# 				every_neighbor_system = {
# 					limit = {
# 						owner = { is_country = ROOT }
# 						NOT = { has_star_flag = flusion_claimed }
# 					}
# 					set_star_flag = flusion_claimed
# 					add_claims = {
# 						who = event_target:flusion_primitives_country
# 						num_of_claims = 1
# 						show_notification = yes
# 					}
# 					every_neighbor_system = {
# 						limit = {
# 							owner = { is_country = ROOT }
# 							NOT = { has_star_flag = flusion_claimed }
# 						}
# 						set_star_flag = flusion_claimed
# 						add_claims = {
# 							who = event_target:flusion_primitives_country
# 							num_of_claims = 1
# 							show_notification = yes
# 						}
# 						every_neighbor_system = {
# 							limit = {
# 								owner = { is_country = ROOT }
# 								NOT = { has_star_flag = flusion_claimed }
# 							}
# 							set_star_flag = flusion_claimed
# 							add_claims = {
# 								who = event_target:flusion_primitives_country
# 								num_of_claims = 1
# 								show_notification = yes
# 							}
# 							every_neighbor_system = {
# 								limit = {
# 									owner = { is_country = ROOT }
# 									NOT = { has_star_flag = flusion_claimed }
# 								}
# 								set_star_flag = flusion_claimed
# 								add_claims = {
# 									who = event_target:flusion_primitives_country
# 									num_of_claims = 1
# 									show_notification = yes
# 								}
# 							}
# 						}
# 					}
# 				}
# 			}
# 		}
# 		every_system = {
# 			limit = { has_star_flag = flusion_claimed }
# 			remove_star_flag = flusion_claimed
# 		}
# 		event_target:flusion_primitives_country = {
# 			declare_war = {
# 				target = ROOT
# 				attacker_war_goal = wg_conquest
# 			}
# 		}
# 	}

# 	option = {
# 		name = "giga_flusionunion.016.a"
# 	}
# }

# country_event = {
# 	id = giga_flusionunion.017
# 	title = "giga_flusionunion.017.name"
# 	desc = "giga_flusionunion.017.desc"
# 	picture = GFX_evt_ship_travel
# 	show_sound = event_alien_signal
# 	location = from
# 	is_triggered_only = yes

# 	option = {
# 		name = "giga_flusionunion.017.a"
# 	}
# }