###############################################################################################################
###############################################################################################################
#          EXPANSION
###############################################################################################################
###############################################################################################################

# expand with alloys

giga_frameworld_expand = {
	icon = decision_frameworld_expand
	owned_planets_only = yes
	
	enactment_time = 360
	
	resources = {
		category = megastructures_frameworld
		cost = {
			alloys = @giga_frameworld_expansion_cost_base
			multiplier = giga_frameworld_expansion_cost_multiplier
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_habitat_2 }
			}
			alloys = @giga_frameworld_expansion_cost_habitat_2
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_habitat_3 }
			}
			alloys = @giga_frameworld_expansion_cost_habitat_3
		}
	}
	
	potential = {
		is_variable_set = giga_frameworld_structure_expansions
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
		}
		giga_is_frame_world = yes
	}

	allow = {
		custom_tooltip_fail = {
			text = giga_frameworld_expand_concurrent
			not = { has_planet_flag = giga_frameworld_expand_queued }
		}
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
		}
		custom_tooltip = frameworld_line
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_structure_expansion 
			VAR = giga_frameworld_structure_expansions
		}
		custom_tooltip = frameworld_line
		change_planet_size = 1

		# update entity and do all the math
		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}

		remove_planet_flag = giga_frameworld_expand_queued
	}

	on_queued = {
		set_planet_flag = giga_frameworld_expand_queued
	}
	on_unqueued = {
		remove_planet_flag = giga_frameworld_expand_queued
	}
	
	ai_weight = {
		weight = 10
		
		# more if we've got a lot of alloys
		modifier = {
			factor = 5
			exists = owner
			owner = {
				has_resource = {
					type = alloys
					amount > 5000 # prev.giga_frameworld_expansion_cost_buffer
				}
			}
		}
		
		# less if we have lots of free slots
		modifier = {
			factor = 0.1
			free_district_slots > 8
		}
		
		# more if we have no free slots
		modifier = {
			factor = 100
			free_district_slots = 0
		}
		
		# zero if we've NOT got a lot of alloys and we have free slots
		modifier = {
			factor = 0
			NOT = {
				owner = {
					has_resource = {
						type = alloys
						amount < 5000 # prev.giga_frameworld_expansion_cost_buffer
					}
				}
			}
			free_district_slots > 2
		}

		modifier = {
			factor = 0
			frameworld_virtual_wants_stop_expansion = yes
		}
	}
}

###############################################################################################################

# 5x bulk expand with alloys

giga_frameworld_expand_bulk_5 = {
	icon = decision_frameworld_expand_5
	owned_planets_only = yes
	
	enactment_time = 1728 # 1800 -> 360 * 4.8 to account for speed ups from expanding
	
	resources = {
		category = megastructures_frameworld
		cost = {
			alloys = @giga_frameworld_expansion_cost_base
			multiplier = giga_frameworld_expansion_bulk_5_cost_multiplier
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_habitat_2 }
			}
			alloys = @giga_frameworld_expansion_cost_habitat_2
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_habitat_3 }
			}
			alloys = @giga_frameworld_expansion_cost_habitat_3
		}
	}
	
	potential = {
		is_variable_set = giga_frameworld_structure_expansions
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
			has_technology = giga_tech_ringworld_behemoth
		}
		giga_is_frame_world = yes
	}

	allow = {
		custom_tooltip_fail = {
			text = giga_frameworld_expand_concurrent
			not = { has_planet_flag = giga_frameworld_expand_queued }
		}
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
			COUNT = 5
		}
		custom_tooltip = frameworld_line
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_structure_expansion 
			VAR = giga_frameworld_structure_expansions
			COUNT = 5
		}
		custom_tooltip = frameworld_line
		change_planet_size = 5

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}

		remove_planet_flag = giga_frameworld_expand_queued
	}

	on_queued = {
		set_planet_flag = giga_frameworld_expand_queued
	}
	on_unqueued = {
		remove_planet_flag = giga_frameworld_expand_queued
	}
	
	ai_weight = {
		weight = 10

		modifier = {
			factor = 0
			frameworld_virtual_wants_stop_expansion = yes
		}
	}
}

###############################################################################################################

# 10x bulk expand with alloys

giga_frameworld_expand_bulk_10 = {
	icon = decision_frameworld_expand_10
	owned_planets_only = yes
	
	enactment_time = 3312 # 3600 -> 360 * 9.2 to account for speed ups from expanding
	
	resources = {
		category = megastructures_frameworld
		cost = {
			alloys = @giga_frameworld_expansion_cost_base
			multiplier = giga_frameworld_expansion_bulk_10_cost_multiplier
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_habitat_2 }
			}
			alloys = @giga_frameworld_expansion_cost_habitat_2
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = { has_technology = tech_habitat_3 }
			}
			alloys = @giga_frameworld_expansion_cost_habitat_3
		}
	}
	
	potential = {
		is_variable_set = giga_frameworld_structure_expansions
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
			has_technology = giga_tech_ringworld_behemoth
		}
		giga_is_frame_world = yes
	}

	allow = {
		custom_tooltip_fail = {
			text = giga_frameworld_expand_concurrent
			not = { has_planet_flag = giga_frameworld_expand_queued }
		}
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
			COUNT = 10
		}
		custom_tooltip = frameworld_line
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_structure_expansion 
			VAR = giga_frameworld_structure_expansions
			COUNT = 10
		}
		custom_tooltip = frameworld_line
		change_planet_size = 10

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}

		remove_planet_flag = giga_frameworld_expand_queued
	}

	on_queued = {
		set_planet_flag = giga_frameworld_expand_queued
	}
	on_unqueued = {
		remove_planet_flag = giga_frameworld_expand_queued
	}
	
	ai_weight = {
		weight = 10

		modifier = {
			factor = 0
			frameworld_virtual_wants_stop_expansion = yes
		}
	}
}

###############################################################################################################

# expand with nanites

giga_frameworld_expand_nanites = {
	icon = decision_frameworld_expand_nanites
	owned_planets_only = yes

	enactment_time = 360

	resources = {
		category = decisions
		cost = {
			nanites = @giga_frameworld_nanites_expansion_cost_base
		}
	}

	potential = {
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
		}
		giga_is_frame_world = yes
		frameworld_has_active_nanite_upgrade = yes
	}

	allow = {
		exists = owner
		owner = {
			is_ai = no # here for now because the AI never disassembles planets anyway
		}
	}

	effect = {
		giga_frameworld_expand_deposit = {
			DEPOSIT = d_frameworld_expansion
			VAR = giga_frameworld_expansions
		}
		custom_tooltip = frameworld_line
		giga_frameworld_expand_deposit = {
			DEPOSIT = d_frameworld_nanite_expansion
			VAR = giga_frameworld_nanite_expansions
		}
		custom_tooltip = frameworld_line
		change_planet_size = 1

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}

	ai_weight = {
		weight = 0
	}
}

###############################################################################################################

# bulk expand x5 with planetary mass

giga_frameworld_expand_nanites_bulk_5 = {
	icon = decision_frameworld_expand_nanites_5
	owned_planets_only = yes

	enactment_time = 1728 # 1800 -> 360 * 4.8 to account for speed ups from expanding

	resources = {
		category = decisions
		cost = {
			nanites = @[ 5 * giga_frameworld_nanites_expansion_cost_base ]
		}
	}

	potential = {
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
			has_technology = giga_tech_ringworld_behemoth
		}
		giga_is_frame_world = yes
		frameworld_has_active_nanite_upgrade = yes
	}

	allow = {
		exists = owner
		owner = {
			is_ai = no # here for now because the AI never disassembles planets anyway
		}
	}

	effect = {
		giga_frameworld_expand_deposit = {
			DEPOSIT = d_frameworld_expansion
			VAR = giga_frameworld_expansions
			COUNT = 5
		}
		custom_tooltip = frameworld_line
		giga_frameworld_expand_deposit = {
			DEPOSIT = d_frameworld_nanite_expansion
			VAR = giga_frameworld_nanite_expansions
			COUNT = 5
		}
		custom_tooltip = frameworld_line
		change_planet_size = 5

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}

	ai_weight = {
		weight = 0
	}
}

###############################################################################################################

# bulk expand x10 with planetary mass

giga_frameworld_expand_nanites_bulk_10 = {
	icon = decision_frameworld_expand_nanites_10
	owned_planets_only = yes

	enactment_time = 3312 # 3600 -> 360 * 9.2 to account for speed ups from expanding

	resources = {
		category = decisions
		cost = {
			nanites = @[ 10 * giga_frameworld_nanites_expansion_cost_base ]
		}
	}

	potential = {
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
			has_technology = giga_tech_ringworld_behemoth
		}
		giga_is_frame_world = yes
		frameworld_has_active_nanite_upgrade = yes
	}

	allow = {
		exists = owner
		owner = {
			is_ai = no # here for now because the AI never disassembles planets anyway
		}
	}

	effect = {
		giga_frameworld_expand_deposit = {
			DEPOSIT = d_frameworld_expansion
			VAR = giga_frameworld_expansions
			COUNT = 10
		}
		custom_tooltip = frameworld_line
		giga_frameworld_expand_deposit = {
			DEPOSIT = d_frameworld_planet
			VAR = giga_frameworld_planets
			COUNT = 10
		}
		custom_tooltip = frameworld_line
		change_planet_size = 10

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}

	ai_weight = {
		weight = 0
	}
}

###############################################################################################################

# expand with planetary mass

giga_frameworld_expand_mass = {
	icon = decision_frameworld_expand_mass
	owned_planets_only = yes
	
	enactment_time = 360
	
	resources = {
		category = decisions
		cost = {
			sr_solar_energy = 2
		}
	}
	
	potential = {
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
			has_technology = giga_tech_planetary_matter_harvesting
		}
		giga_is_frame_world = yes
	}
	
	allow = {
		exists = owner
		owner = {
			is_ai = no # here for now because the AI never disassembles planets anyway
		}
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
		}
		custom_tooltip = frameworld_line
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_planet
			VAR = giga_frameworld_planets
		}
		custom_tooltip = frameworld_line
		change_planet_size = 1

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}
	
	ai_weight = {
		weight = 0
	}
}

###############################################################################################################

# bulk expand x5 with planetary mass

giga_frameworld_expand_mass_bulk_5 = {
	icon = decision_frameworld_expand_mass_5
	owned_planets_only = yes
	
	enactment_time = 1728 # 1800 -> 360 * 4.8 to account for speed ups from expanding
	
	resources = {
		category = decisions
		cost = {
			sr_solar_energy = 10
		}
	}
	
	potential = {
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
			has_technology = giga_tech_planetary_matter_harvesting
			has_technology = giga_tech_ringworld_behemoth
		}
		giga_is_frame_world = yes
	}
	
	allow = {
		exists = owner
		owner = {
			is_ai = no # here for now because the AI never disassembles planets anyway
		}
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
			COUNT = 5
		}
		custom_tooltip = frameworld_line
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_planet
			VAR = giga_frameworld_planets
			COUNT = 5
		}
		custom_tooltip = frameworld_line
		change_planet_size = 5

		hidden_effect = { 
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}
	
	ai_weight = {
		weight = 0
	}
}

###############################################################################################################

# bulk expand x10 with planetary mass

giga_frameworld_expand_mass_bulk_10 = {
	icon = decision_frameworld_expand_mass_10
	owned_planets_only = yes
	
	enactment_time = 3312 # 3600 -> 360 * 9.2 to account for speed ups from expanding
	
	resources = {
		category = decisions
		cost = {
			sr_solar_energy = 20
		}
	}
	
	potential = {
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
			has_technology = giga_tech_planetary_matter_harvesting
			has_technology = giga_tech_ringworld_behemoth
		}
		giga_is_frame_world = yes
	}
	
	allow = {
		exists = owner
		owner = {
			is_ai = no # here for now because the AI never disassembles planets anyway
		}
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
			COUNT = 10
		}
		custom_tooltip = frameworld_line
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_planet
			VAR = giga_frameworld_planets
			COUNT = 10
		}
		custom_tooltip = frameworld_line
		change_planet_size = 10

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}
	
	ai_weight = {
		weight = 0
	}
}

###############################################################################################################

# expand with influence

giga_frameworld_reorganise = {
	icon = decision_frameworld_reorganise
	owned_planets_only = yes
	
	enactment_time = 360
	
	resources = {
		category = decisions
		cost = {
			influence = 200
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = {
					is_ai = no
				}
			}
			influence = 200
		}
		
		cost = {
			trigger = {
				exists = owner
				owner = {
					has_technology = giga_tech_ringworld_titanic_2
				}
			}
			influence = -50
		}
	}
	
	potential = {
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
		}
		giga_is_frame_world = yes
	}
	
	effect = {
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_expansion 
			VAR = giga_frameworld_expansions
		}
		custom_tooltip = frameworld_line
		giga_frameworld_expand_deposit = { 
			DEPOSIT = d_frameworld_reorganise_expansion
			VAR = giga_frameworld_reorganise_expansions
		}
		custom_tooltip = frameworld_line
		change_planet_size = 1

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}
	
	ai_weight = {
		weight = 10

		# don't if we don't have a good chunk of influence
		modifier = {
			factor = 0
			exists = owner
			owner = {
				resource_stockpile_compare = {
					resource = influence
					value < 500
				}
			}
		}
		
		# less if we have lots of free slots
		modifier = {
			factor = 0.1
			free_district_slots > 8
		}
		
		# more if we have no free slots
		modifier = {
			factor = 10
			free_district_slots = 0
		}
		
		# more if we are influence capped
		modifier = {
			factor = 1000
			exists = owner
			owner = {
				resource_stockpile_compare = {
					resource = influence
					value >= 1000
				}
			}
		}

		modifier = {
			factor = 0
			frameworld_virtual_wants_stop_expansion = yes
		}
	}
}

###############################################################################################################

# TERRAVORE :)

giga_frameworld_consume_world = {
	icon = decision_burning_settlement
	sound = event_structural_collapse
	owned_planets_only = yes

	enactment_time = 720

	resources = {
		category = decisions
	}

	potential = {
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
			giga_can_devour_worlds = yes
		}
		giga_is_frame_world = yes
	}

	allow = {
		custom_tooltip_fail = {
			text = giga_frameworld_consume_world_allow
			from = {
				any_owned_fleet = {
					is_consumable_frameworld_outpost = yes
				}
			}
		}
	}

	abort_trigger = {
		not = {
			from = {
				any_owned_fleet = {
					is_consumable_frameworld_outpost = yes
				}
			}
		}
	}

	effect = {
		giga_frameworld_expand_deposit = {
			DEPOSIT = d_frameworld_expansion
			VAR = giga_frameworld_expansions
		}
		custom_tooltip = frameworld_line
		giga_frameworld_expand_deposit = {
			DEPOSIT = d_frameworld_devour_expansion
			VAR = giga_frameworld_devour_expansions
		}
		custom_tooltip = frameworld_line
		change_planet_size = 1

		custom_tooltip = frameworld_line

		hidden_effect = {
			from = {
				random_owned_fleet = {
					limit = {
						is_consumable_frameworld_outpost = yes
					}
					orbit = {
						save_event_target_as = consumed_world
						add_deposit = d_frameworld_terravore_damage
					}
				}
			}
		}

		if = {
			limit = {
				has_bug_branch = yes
				from = {
					is_machine_empire = yes
				}
			}
			random_list = {
				10 = {
					create_pop = {
						species = owner_main_species
					}

					create_message = {
						type = MESSAGE_TERRAVORE_CONSUME_WORLD
						localization = MESSAGE_BUGGED_MACHINE_TERRAVORE_CONSUME_WORLD_POP_TEXT
						days = 30
						target = event_target:consumed_world

						variable = {
							type = name
							localization = PLANET
							scope = event_target:consumed_world
						}
					}
				}
				10 = {
					owner = {
						add_monthly_resource_mult = {
							resource = minerals
							value = 3
							min = @tier1materialmin
							max = @tier1materialmax
						}
					}

					create_message = {
						type = MESSAGE_TERRAVORE_CONSUME_WORLD
						localization = MESSAGE_BUGGED_MACHINE_TERRAVORE_CONSUME_WORLD_MINERALS_TEXT
						days = 30
						target = event_target:consumed_world

						variable = {
							type = name
							localization = PLANET
							scope = event_target:consumed_world
						}
					}
				}
				10 = {
					owner = {
						add_monthly_resource_mult = {
							resource = alloys
							value = 2
							min = @tier1materialmin
							max = @tier1materialmax
						}
					}

					create_message = {
						type = MESSAGE_TERRAVORE_CONSUME_WORLD
						localization = MESSAGE_BUGGED_MACHINE_TERRAVORE_CONSUME_WORLD_ALLOYS_TEXT
						days = 30
						target = event_target:consumed_world

						variable = {
							type = name
							localization = PLANET
							scope = event_target:consumed_world
						}
					}
				}
			}
		}
		else = {
			random_list = {
				10 = {
					create_pop = {
						species = owner_main_species
					}

					create_message = {
						type = MESSAGE_TERRAVORE_CONSUME_WORLD
						localization = MESSAGE_TERRAVORE_CONSUME_WORLD_POP_TEXT
						days = 30
						target = event_target:consumed_world

						variable = {
							type = name
							localization = PLANET
							scope = event_target:consumed_world
						}
					}
				}
				10 = {
					owner = {
						add_monthly_resource_mult = {
							resource = minerals
							value = 3
							min = @tier1materialmin
							max = @tier1materialmax
						}
					}

					create_message = {
						type = MESSAGE_TERRAVORE_CONSUME_WORLD
						localization = MESSAGE_TERRAVORE_CONSUME_WORLD_MINERALS_TEXT
						days = 30
						target = event_target:consumed_world

						variable = {
							type = name
							localization = PLANET
							scope = event_target:consumed_world
						}
					}
				}
				10 = {
					owner = {
						add_monthly_resource_mult = {
							resource = alloys
							value = 2
							min = @tier1materialmin
							max = @tier1materialmax
						}
					}

					create_message = {
						type = MESSAGE_TERRAVORE_CONSUME_WORLD
						localization = MESSAGE_TERRAVORE_CONSUME_WORLD_ALLOYS_TEXT
						days = 30
						target = event_target:consumed_world

						variable = {
							type = name
							localization = PLANET
							scope = event_target:consumed_world
						}
					}
				}
			}
		}
		reroll_random = yes

		custom_tooltip = giga_frameworld_consume_world_effect

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}

	ai_weight = {
		weight = 50

		# less if we have lots of free slots
		modifier = {
			factor = 0.1
			free_district_slots > 8
		}

		# more if we have no free slots
		modifier = {
			factor = 100
			free_district_slots = 0
		}

		modifier = {
			factor = 0
			frameworld_virtual_wants_stop_expansion = yes
		}
	}
}

giga_frameworld_consume_world_toggle_on = {
	icon = decision_strip_mining
	sound = event_administrative_work
	owned_planets_only = no

	potential = {
		has_planet_flag = giga_frameworld_outpost_planet_type_edible
		from = {
			is_ai = no # AI should use the default state and shouldn't need to change it
			giga_has_frameworld_origin = yes
			giga_can_devour_worlds = yes
		}
		is_frameworld_outpost_planet = yes
		has_planet_flag = giga_frameworld_outpost_stripmine_mode_deny
	}

	effect = {
		custom_tooltip = giga_frameworld_consume_world_toggle_on_effect
		hidden_effect = {
			remove_planet_flag = giga_frameworld_outpost_stripmine_mode_deny
		}
	}

	ai_weight = {
		base = 0
	}
}

giga_frameworld_consume_world_toggle_off = {
	icon = decision_resort_colony
	sound = event_administrative_work
	owned_planets_only = no

	resources = {
		category = decisions
		cost = {
			unity = 25
		}
	}

	potential = {
		has_planet_flag = giga_frameworld_outpost_planet_type_edible
		from = {
			is_ai = no # AI should use the default state and shouldn't need to change it
			giga_has_frameworld_origin = yes
			giga_can_devour_worlds = yes
		}
		is_frameworld_outpost_planet = yes
		not = {
			has_planet_flag = giga_frameworld_outpost_stripmine_mode_deny
		}
	}

	effect = {
		custom_tooltip = giga_frameworld_consume_world_toggle_off_effect
		hidden_effect = {
			set_planet_flag = giga_frameworld_outpost_stripmine_mode_deny
		}
	}

	ai_weight = {
		base = 0
	}
}

###############################################################################################################

# nanites!

giga_frameworld_nanite_consume_world = {
	icon = decision_burning_settlement
	sound = event_structural_collapse
	owned_planets_only = yes

	enactment_time = 720

	resources = {
		category = decisions
	}

	potential = {
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
			giga_can_nanite_devour_worlds = yes
		}
		giga_is_frame_world = yes
		frameworld_has_active_nanite_upgrade = yes
	}

	allow = {
		custom_tooltip_fail = {
			text = giga_frameworld_nanite_consume_world_allow
			from = {
				any_owned_fleet = {
					is_nanite_consumable_frameworld_outpost = yes
				}
			}
		}
	}

	abort_trigger = {
		not = {
			from = {
				any_owned_fleet = {
					is_nanite_consumable_frameworld_outpost = yes
				}
			}
		}
	}

	effect = {
		giga_frameworld_expand_deposit = {
			DEPOSIT = d_frameworld_expansion
			VAR = giga_frameworld_expansions
		}
		custom_tooltip = frameworld_line
		giga_frameworld_expand_deposit = {
			DEPOSIT = d_frameworld_nanite_expansion
			VAR = giga_frameworld_nanite_expansions
		}
		custom_tooltip = frameworld_line
		change_planet_size = 1

		custom_tooltip = frameworld_line

		hidden_effect = {
			from = {
				random_owned_fleet = {
					limit = {
						is_nanite_consumable_frameworld_outpost = yes
					}
					orbit = {
						save_event_target_as = consumed_world
						add_deposit = d_frameworld_nanite_damage
					}
				}
			}
		}

		owner = {
			add_monthly_resource_mult = {
				resource = nanites
				value = 1
				min = @tier1materialmin
				max = @tier1materialmax
			}
		}

		create_message = {
			type = MESSAGE_TERRAVORE_CONSUME_WORLD
			localization = MESSAGE_NANOTECH_CONSUME_WORLD_1_TEXT
			days = 30
			target = event_target:consumed_world

			variable = {
				type = name
				localization = PLANET
				scope = event_target:consumed_world
			}
		}

		custom_tooltip = giga_frameworld_nanite_consume_world_effect

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}

	ai_weight = {
		weight = 50

		# less if we have lots of free slots
		modifier = {
			factor = 0.1
			free_district_slots > 8
		}

		# more if we have no free slots
		modifier = {
			factor = 100
			free_district_slots = 0
		}

		modifier = {
			factor = 0
			frameworld_virtual_wants_stop_expansion = yes
		}
	}
}

giga_frameworld_nanite_consume_world_toggle_on = {
	icon = decision_strip_mining
	sound = event_administrative_work
	owned_planets_only = no

	potential = {
		has_planet_flag = giga_frameworld_outpost_planet_type_edible
		from = {
			is_ai = no # AI should use the default state and shouldn't need to change it
			giga_has_frameworld_origin = yes
			giga_can_nanite_devour_worlds = yes
		}
		is_frameworld_outpost_planet = yes
		has_planet_flag = giga_frameworld_outpost_nanite_mode_deny
	}

	effect = {
		custom_tooltip = giga_frameworld_nanite_consume_world_toggle_on_effect
		hidden_effect = {
			remove_planet_flag = giga_frameworld_outpost_nanite_mode_deny
		}
	}

	ai_weight = {
		base = 0
	}
}

giga_frameworld_nanite_consume_world_toggle_off = {
	icon = decision_resort_colony
	sound = event_administrative_work
	owned_planets_only = no

	resources = {
		category = decisions
		cost = {
			unity = 25
		}
	}

	potential = {
		has_planet_flag = giga_frameworld_outpost_planet_type_edible
		from = {
			is_ai = no # AI should use the default state and shouldn't need to change it
			giga_has_frameworld_origin = yes
			giga_can_nanite_devour_worlds = yes
		}
		is_frameworld_outpost_planet = yes
		not = {
			has_planet_flag = giga_frameworld_outpost_nanite_mode_deny
		}
	}

	effect = {
		custom_tooltip = giga_frameworld_nanite_consume_world_toggle_off_effect
		hidden_effect = {
			set_planet_flag = giga_frameworld_outpost_nanite_mode_deny
		}
	}

	ai_weight = {
		base = 0
	}
}

###############################################################################################################

# virtual size DOWN

giga_frameworld_contract = {
	icon = decision_ruined_system
	owned_planets_only = yes

	enactment_time = 15

	resources = {
		category = decisions
		cost = {
			energy = 100
		}
	}

	potential = {
		exists = owner
		owner = {
			giga_has_frameworld_origin = yes
			giga_empire_has_virtual_planet_scaling = yes
		}
		giga_is_frame_world = yes
	}

	allow = {
		custom_tooltip_fail = {
			check_variable = {
				which = giga_frameworld_expansions
				value > 0
			}
			text = giga_frameworld_contract_need_expansions
		}
		hidden_trigger = {
			exists = owner
			owner = {
				or = {
					is_ai = no
					# if we're too big?
					frameworld_virtual_wants_contract = yes
				}
			}
		}
	}

	effect = {
		custom_tooltip = giga_frameworld_contract_effect
		custom_tooltip = frameworld_line
		giga_frameworld_contract_deposit = {
			DEPOSIT = d_frameworld_expansion
			VAR = giga_frameworld_expansions
		}
		if = {
			limit = {
				check_variable = {
					which = giga_frameworld_expansions
					value > 0
				}
			}
			custom_tooltip = frameworld_line
			random_list = {
				0 = {
					modifier = {
						is_variable_set = giga_frameworld_structure_expansions
						add = giga_frameworld_structure_expansions
					}
					giga_frameworld_contract_deposit = {
						DEPOSIT = d_frameworld_structure_expansion
						VAR = giga_frameworld_structure_expansions
					}
				}
				0 = {
					modifier = {
						is_variable_set = giga_frameworld_reorganise_expansions
						add = giga_frameworld_reorganise_expansions
					}
					giga_frameworld_contract_deposit = {
						DEPOSIT = d_frameworld_reorganise_expansion
						VAR = giga_frameworld_reorganise_expansions
					}
				}
				0 = {
					modifier = {
						is_variable_set = giga_frameworld_asteroids
						add = giga_frameworld_asteroids
					}
					giga_frameworld_contract_deposit = {
						DEPOSIT = d_frameworld_asteroid
						VAR = giga_frameworld_asteroids
					}
				}
				0 = {
					modifier = {
						is_variable_set = giga_frameworld_planets
						add = giga_frameworld_planets
					}
					giga_frameworld_contract_deposit = {
						DEPOSIT = d_frameworld_planet
						VAR = giga_frameworld_planets
					}
				}
				0 = {
					modifier = {
						is_variable_set = giga_frameworld_nanite_expansions
						add = giga_frameworld_nanite_expansions
					}
					giga_frameworld_contract_deposit = {
						DEPOSIT = d_frameworld_nanite_expansion
						VAR = giga_frameworld_nanite_expansions
					}
				}
				0 = {
					modifier = {
						is_variable_set = giga_frameworld_devour_expansions
						add = giga_frameworld_devour_expansions
					}
					giga_frameworld_contract_deposit = {
						DEPOSIT = d_frameworld_devour_expansion
						VAR = giga_frameworld_devour_expansions
					}
				}
			}
		}
		custom_tooltip = frameworld_line
		change_planet_size = -1

		hidden_effect = {
			giga_frameworld_update_entity_with_fallback = yes
			giga_frameworld_recalculate_variables = yes
			frameworld_conduct_audit_check_ai = yes
		}
	}

	ai_weight = {
		weight = 1000
	}
}