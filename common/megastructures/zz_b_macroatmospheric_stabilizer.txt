macro_stabilizer_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_terraform_gas }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 1800
	resources = {
		category = giga_kilostructures
		cost = {
			alloys = 5000
			influence = 50
			unity = @giga_kilo_unity_cost
		}
		upkeep = { energy = 5 }
	}

	potential = {
		has_technology = giga_tech_terraform_gas
		NOT = { has_global_flag = terraform_gasgiant_disabled }
		OR = {
			check_variable = { which = giga_terraform_gasgiant_cap value = 0 }						# No Cap
			check_variable = { which = giga_current_terraform_gasgiant value < giga_terraform_gasgiant_cap }
		}
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border" is_inside_border = from }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_terraform_gasgiant_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_terraform_gasgiant value < giga_terraform_gasgiant_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "must_build_around_gas"				giga_is_gas_giant = yes }
			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
			custom_tooltip = { fail_text = "requires_survey_not_habitable"		is_surveyed = { who = prev.from status = yes } is_planet_habitable = no }
			custom_tooltip = { fail_text = "requires_no_crisis_planet"			NOT = { has_planet_flag = crisis_vital_planet } }
			custom_tooltip = { fail_text = "requires_not_minor_planetary_body"	is_asteroid = no is_moon = no }
			custom_tooltip = { fail_text = "requires_not_star"					is_star = no }
			custom_tooltip = {
				fail_text = "requires_not_astral_scar"
				is_astral_scar = no
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				NOT = { has_planet_flag = giga_terraforming_megastructure }
			}
		}
	}

	ai_weight = {
		# weight = 100	# Default = 100

		# # Can we afford the upkeep

		# # Do we want the production
		# modifier = { factor = 3.75	chk_needs_exotic_gases_10 = yes }
		# modifier = { factor = 3.50	chk_needs_exotic_gases_09 = yes }
		# modifier = { factor = 3.25	chk_needs_exotic_gases_08 = yes }
		# modifier = { factor = 3.00	chk_needs_exotic_gases_07 = yes }
		# modifier = { factor = 2.75	chk_needs_exotic_gases_06 = yes }
		# modifier = { factor = 2.50	chk_needs_exotic_gases_05 = yes }
		# modifier = { factor = 2.25	chk_needs_exotic_gases_04 = yes }
		# modifier = { factor = 2.00	chk_needs_exotic_gases_03 = yes }
		# modifier = { factor = 1.75	chk_needs_exotic_gases_25 = yes }
		# modifier = { factor = 1.50	chk_needs_exotic_gases_02 = yes }
		# modifier = { factor = 1.25	chk_needs_exotic_gases_15 = yes }

		# # Is this system a good location?
		# modifier = { factor = 0.5	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		# modifier = { factor = 4		fromfrom.planet = { planet_size >= 30 } }
		# modifier = { factor = 2		fromfrom.planet = { planet_size >= 25 planet_size < 30 } }
		# modifier = { factor = 0		fromfrom.planet = { planet_size < 25 } }

		# # Do we lean towards this from federation/ethic/civic?
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		any_planet_within_border = {
		# 			is_colonizable = yes
		# 			planet_size > 15
		# 		}
		# 	}
		# }

		# # How many of this megastructure can the AI build?
		# modifier = { factor = 0.00	from = { has_country_flag = has_recently_built_macro_stabilizer } }
		# modifier = { factor = 0.00 from = { check_variable = { which = terraform_gas value > 2 } } }
		# modifier = { factor = 0.33 from = { check_variable = { which = terraform_gas value = 2 } } }
		# modifier = { factor = 0.66 from = { check_variable = { which = terraform_gas value = 1 } } }
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		OR = {
		# 			has_megastructure = macro_stabilizer_0
		# 			has_megastructure = macro_stabilizer_1
		# 			has_megastructure = macro_stabilizer_2
		# 		}
		# 	}
		# }

		weight = value:giga_ai_base_mega

		mult = value:giga_ai_output|RESOURCE|exotic_gases|AMOUNT|30|MIN|0.1|
		mult = value:giga_ai_unlocks_galwonders
		mult = value:giga_ai_overpopulation_boost
		mult = value:giga_ai_core_territory
		mult = value:giga_ai_prevent_spam|MEGA|macro_stabilizer|
	}

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = {
			save_event_target_as = giga_planet
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			giga_set_has_mega_flag = yes
			set_planet_flag = giga_terraforming_megastructure
		}
		from = {
			set_timed_country_flag = { flag = has_recently_built_macro_stabilizer years = 20 }
			country_event = { id = giga_dialog.301 }	# Notification
			change_variable = { which = giga_current_terraform_gasgiant value = 1 }
		}
	}
}

macro_stabilizer_1 = {
	entity = "gas_giant_terraformer_rings_entity"
	construction_entity = "gas_giant_terraformer_rings_entity"
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { macro_stabilizer_0 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_kilostructures
		cost = { alloys = 2500 unity = @giga_kilo_unity_cost }
		upkeep = { energy = 10 }
	}

	potential = { NOT = { has_global_flag = terraform_gasgiant_disabled } }
	possible = { from = { has_technology = giga_tech_terraform_gas } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.302 } }	# Notification
	}
}

macro_stabilizer_2 = {
	entity = "gas_giant_terraformer_entity"
	construction_entity = "gas_giant_terraformer_thingies_entity"
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { macro_stabilizer_1 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_kilostructures
		cost = { alloys = 3500 unity = @giga_kilo_unity_cost }
		upkeep = { energy = 10 }
	}

	potential = { NOT = { has_global_flag = terraform_gasgiant_disabled } }
	possible = { from = { has_technology = giga_tech_terraform_gas } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.303 } }	# Notification
	}
}

macro_stabilizer_3 = {
	entity = ""
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { macro_stabilizer_2 }

	build_time = 3600
	resources = {
		category = giga_terraforming_by_megas
		cost = { energy = 10000 }
	}

	potential = { NOT = { has_global_flag = terraform_gasgiant_disabled } }
	possible = { from = { has_technology = giga_tech_terraform_gas } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.304 }				# Notification
			set_country_flag = has_built_or_repaired_megastructure	# Triggers Galactic Wonders
			change_variable = { which = terraform_gas value = 1 }
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_71
					}
				}
				set_country_flag = giga_achievement_71
				set_timed_country_flag = { flag = giga_achievement_71_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
		fromfrom.planet = {
			remove_planet_flag = giga_terraforming_megastructure
			giga_clear_has_mega_flag = yes
			if = {
				limit = { solar_system = {has_star_flag = sol_system  } }
				change_pc = { class = pc_habitable_gas_giant inherit_entity = yes } 
			}
			else = {
				change_pc = pc_habitable_gas_giant
			}
			set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
			set_planet_flag = giga_hab_gas_giant
			#set_planet_flag = megastructure
			set_planet_flag = giga_planet_mega
			clear_deposits = yes
			reroll_deposits = yes
			add_deposit = d_fluffy_plains
			random_list = {
				2 = { while = { count = 1 add_deposit = d_gassy_rivers } }
				2 = { while = { count = 1 add_deposit = d_mote_cloud } }
				2 = { while = { count = 1 add_deposit = d_floaters } }
				1 = { while = { count = 2 add_deposit = d_gassy_rivers } }
				1 = { while = { count = 2 add_deposit = d_mote_cloud } }
				1 = { while = { count = 2 add_deposit = d_floaters } }
			}
			remove_modifier = helioforming_candidate
			set_planet_flag = used_to_be_gasgiant

			giga_start_ai_colony_if_safe = yes

			planet_event = { id = giga_mega.1000 } # apply locale modifiers
		}
		remove_megastructure = fromfrom
	}
}