neutronium_gigaforge_0 = {
	entity = "giga_consite_7_7_entity"
	construction_entity = "giga_consite_7_7_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_neutronium_gigaforge }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 1800
	resources = {
		category = giga_neutronium_gigaforge
		cost = {
			alloys = 3500
			unity = @giga_mega_unity_cost
		}
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|3500| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@giga_mega_unity_cost| }
		upkeep = { energy = 5 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = 3500 }
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @giga_mega_unity_cost }
	}
	on_build_cancel = {
		giga_ai_savings_refund = { CATEGORY = important RESOURCE = alloys }
		giga_ai_savings_refund = { CATEGORY = important RESOURCE = unity }
	}

	potential = {
		has_technology = giga_tech_neutronium_gigaforge
		NOT = { has_global_flag = gigaforge_disabled }
		OR = {
			check_variable = { which = giga_gigaforge_cap value = 0 }						# No Cap
			check_variable = { which = giga_current_gigaforge value < giga_gigaforge_cap }
		}
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"				is_inside_border = from }
		custom_tooltip = { fail_text = "requires_surveyed_system"			NOT = { any_system_planet = { is_surveyed = { who = prev.from status = no } } } }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_gigaforge_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_gigaforge value < giga_gigaforge_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "requires_no_anomaly"					has_anomaly = no }
			custom_tooltip = { fail_text = "must_build_around_neutron_star"			OR = { is_planet_class = pc_neutron_star is_planet_class = pc_pulsar is_planet_class = pc_magnetar } }
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				OR = {
					planet_has_no_megastructure = yes
					AND = {
						has_planet_flag = has_nidavellir
						NOT = { has_planet_flag = has_gigaforge }
					}
				}
			}
		}
	}

	ai_weight = {
		# weight = 100	# Default = 100

		# # Can we afford the upkeep
		# modifier = { factor = 1.00	chk_afford_energy_10 = yes }
		# modifier = { factor = 0.90	chk_afford_energy_09 = yes }
		# modifier = { factor = 0.80	chk_afford_energy_08 = yes }
		# modifier = { factor = 0.70	chk_afford_energy_07 = yes }
		# modifier = { factor = 0.60	chk_afford_energy_06 = yes }
		# modifier = { factor = 0.50	chk_afford_energy_05 = yes }
		# modifier = { factor = 0.40	chk_afford_energy_04 = yes }
		# modifier = { factor = 0.30	chk_afford_energy_03 = yes }
		# modifier = { factor = 0.20	chk_afford_energy_25 = yes }
		# modifier = { factor = 0.10	chk_afford_energy_02 = yes }
		# modifier = { factor = 0.00	chk_afford_energy_15 = yes }

		# # Do we want the production
		# modifier = { factor = 3.75	chk_needs_alloys_10 = yes }
		# modifier = { factor = 3.50	chk_needs_alloys_09 = yes }
		# modifier = { factor = 3.25	chk_needs_alloys_08 = yes }
		# modifier = { factor = 3.00	chk_needs_alloys_07 = yes }
		# modifier = { factor = 2.75	chk_needs_alloys_06 = yes }
		# modifier = { factor = 2.50	chk_needs_alloys_05 = yes }
		# modifier = { factor = 2.25	chk_needs_alloys_04 = yes }
		# modifier = { factor = 2.00	chk_needs_alloys_03 = yes }
		# modifier = { factor = 1.75	chk_needs_alloys_25 = yes }
		# modifier = { factor = 1.50	chk_needs_alloys_02 = yes }
		# modifier = { factor = 1.25	chk_needs_alloys_15 = yes }

		# modifier = { factor = 3.75	chk_needs_engineering_10 = yes }
		# modifier = { factor = 3.50	chk_needs_engineering_09 = yes }
		# modifier = { factor = 3.25	chk_needs_engineering_08 = yes }
		# modifier = { factor = 3.00	chk_needs_engineering_07 = yes }
		# modifier = { factor = 2.75	chk_needs_engineering_06 = yes }
		# modifier = { factor = 2.50	chk_needs_engineering_05 = yes }
		# modifier = { factor = 2.25	chk_needs_engineering_04 = yes }
		# modifier = { factor = 2.00	chk_needs_engineering_03 = yes }
		# modifier = { factor = 1.75	chk_needs_engineering_25 = yes }
		# modifier = { factor = 1.50	chk_needs_engineering_02 = yes }
		# modifier = { factor = 1.25	chk_needs_engineering_15 = yes }

		# # Is this system a good location?
		# modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		# modifier = { factor = 0.5	any_neighbor_system = { any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } } }

		# # Do we lean towards this from federation/ethic/civic?
		# modifier = { factor = 2		from = { has_federation = yes federation = { has_federation_type = military_federation } } }
		# modifier = { factor = 3		from = { has_ethic = ethic_fanatic_militarist } }
		# modifier = { factor = 1.5	from = { has_ethic = ethic_militarist } }
		# modifier = { factor = 1.5	from = { has_civic = civic_machine_terminator } }
		# modifier = { factor = 1.5	from = { has_civic = civic_fanatic_purifiers } }
		# modifier = { factor = 1.5	from = { has_civic = civic_hive_devouring_swarm } }
		# modifier = { factor = 2		from = { is_at_war = yes } }

		# # How many of this megastructure can the AI build?
		# modifier = { factor = 0.00 from = { has_country_flag = has_recently_built_neutronium_gigaforge } }
		# modifier = { factor = 0.00	from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = neutronium_gigaforge_3 is_megastructure_type = neutronium_gigaforge_restored } } count > 3 } } }
		# modifier = { factor = 0.25	from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = neutronium_gigaforge_3 is_megastructure_type = neutronium_gigaforge_restored } } count = 3 } } }
		# modifier = { factor = 0.50	from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = neutronium_gigaforge_3 is_megastructure_type = neutronium_gigaforge_restored } } count = 2 } } }
		# modifier = { factor = 0.75	from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = neutronium_gigaforge_3 is_megastructure_type = neutronium_gigaforge_restored } } count = 1 } } }
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		OR = {
		# 			has_megastructure = neutronium_gigaforge_0
		# 			has_megastructure = neutronium_gigaforge_1
		# 			has_megastructure = neutronium_gigaforge_2
		# 			has_megastructure = neutronium_gigaforge_ruined
		# 		}
		# 	}
		# }

		weight = value:giga_ai_base_mega

		mult = value:giga_ai_upkeep|RESOURCE|energy|AMOUNT|780|MIN|0.5|
		mult = value:giga_ai_output|RESOURCE|alloys|AMOUNT|420|MIN|0.5|
		mult = value:giga_ai_unlocks_galwonders
		mult = value:giga_ai_prevent_spam|MEGA|neutronium_gigaforge|
		mult = value:giga_ai_cap_availability_boost
		mult = value:giga_ai_core_territory
		mult = value:giga_ai_weight_savings|CATEGORY|important|RESOURCE|alloys|AMOUNT|21000|
		mult = value:giga_ai_militarist
	}

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = {
			save_event_target_as = giga_planet
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			giga_set_has_mega_flag = yes
			set_planet_flag = has_gigaforge
		}
		from = {
			set_timed_country_flag = { flag = has_recently_built_neutronium_gigaforge years = 20 }
			country_event = { id = giga_dialog.701 }	# Notification
			change_variable = { which = giga_current_gigaforge value = 1 }
		}
	}
}

neutronium_gigaforge_1 = {
	entity = "neutronium_gigaforge_1_entity"
	construction_entity = "neutronium_gigaforge_1_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { neutronium_gigaforge_0 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = { alloys = 7500 unity = @giga_mega_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|7500| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@giga_mega_unity_cost| }
		upkeep = { energy = 150 }
		produces = {
			engineering_research = 15
			alloys = 75
		}
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = 7500 }
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @giga_mega_unity_cost }
	}

	potential = { NOT = { has_global_flag = gigaforge_disabled } }
	possible = { from = { has_technology = giga_tech_neutronium_gigaforge } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.702 } }	# Notification
	}
}

neutronium_gigaforge_2 = {
	entity = "neutronium_gigaforge_2_entity"
	construction_entity = "neutronium_gigaforge_2_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { neutronium_gigaforge_1 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 1800
	resources = {
		category = giga_megastructures
		cost = { alloys = 5000 unity = @giga_mega_unity_cost }
		upkeep = { energy = 300 }
		produces = {
			engineering_research = 50
			alloys = 150
		}
	}

	potential = { NOT = { has_global_flag = gigaforge_disabled } }
	possible = { from = { has_technology = giga_tech_neutronium_gigaforge } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.703 } }	# Notification
	}
}

neutronium_gigaforge_3 = {
	entity = "neutronium_gigaforge_3_entity"
	construction_entity = "neutronium_gigaforge_3_construction_entity"
	portrait = "GFX_megastructure_neutron"
	upgrade_from = { neutronium_gigaforge_2 }

	country_modifier = { ship_armor_mult = 0.075 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 1800
	resources = {
		category = giga_megastructures
		cost = { alloys = 5000 unity = @giga_mega_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|5000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@giga_mega_unity_cost| }
		upkeep = { energy = 780 }
		produces = {
			engineering_research = 250
			alloys = 420
		}
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = 5000 }
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @giga_mega_unity_cost }
	}

	potential = { NOT = { has_global_flag = gigaforge_disabled } }
	possible = { from = { has_technology = giga_tech_neutronium_gigaforge } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			set_country_flag = has_built_or_repaired_gigastructure	# Triggers Gigastructural Constructs
			country_event = { id = giga_dialog.704 }	# Notification
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_80
					}
				}
				set_country_flag = giga_achievement_80
				set_timed_country_flag = { flag = giga_achievement_80_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
	}
}

#Ruined
neutronium_gigaforge_ruined = {
	entity = "broken_neutronium_gigaforge_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = { always = no }
	resources = { category = giga_megastructures }
	
	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
}

#Restored
neutronium_gigaforge_restored = {
	entity = "neutronium_gigaforge_3_entity"
	construction_entity = "neutronium_gigaforge_3_entity"
	portrait = "GFX_megastructure_neutron"
	upgrade_from = { neutronium_gigaforge_ruined }

	country_modifier = { ship_armor_mult = 0.075 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_megastructures
		cost = { alloys = 15000 unity = @giga_mega_repair_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|15000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@giga_mega_repair_unity_cost| }
		upkeep = { energy = 780 }
		produces = {
			engineering_research = 250
			alloys = 420
		}
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = 15000 }
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @giga_mega_repair_unity_cost }
	}

	potential = { NOT = { has_global_flag = gigaforge_disabled } }
	possible = {
		exists = from
		from = { has_technology = giga_tech_neutronium_gigaforge }
	}

	ai_weight = { factor = value:giga_ai_base_repairs } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		giga_remove_system_debris = yes
		from = {
			set_country_flag = has_built_or_repaired_gigastructure	# Triggers Gigastructural Constructs
			country_event = { id = giga_dialog.706 }	# Notification
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_80
					}
				}
				set_country_flag = giga_achievement_80
				set_timed_country_flag = { flag = giga_achievement_80_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
	}
}