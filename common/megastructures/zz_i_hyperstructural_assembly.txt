hyperstructural_ass_0 = {
	entity = "giga_consite_7_7_entity"
	construction_entity = "giga_consite_7_7_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_hyperstructural_ass }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 500
	resources = {
		category = giga_hyperstructural_ass
		cost = {
			alloys = 4000
			influence = 300
			unity = @giga_giga_unity_cost
		}
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|utility|RESOURCE|alloys|AMOUNT|4000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|utility|RESOURCE|unity|AMOUNT|@giga_giga_unity_cost| }
		upkeep = { energy = 10 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = utility RESOURCE = alloys AMOUNT = 4000 }
		giga_ai_savings_withdraw = { CATEGORY = utility RESOURCE = unity  AMOUNT = @giga_giga_unity_cost }
	}
	on_build_cancel = {
		giga_ai_savings_refund = { CATEGORY = utility RESOURCE = alloys }
		giga_ai_savings_refund = { CATEGORY = utility RESOURCE = unity }
	}

	potential = {
		has_gigastructural_constructs = yes
		has_technology = giga_tech_hyperstructural_ass
		NOT = { has_global_flag = hyperstructural_ass_disabled }
		OR = {
			check_variable = { which = giga_hyperstructural_ass_cap value = 0 }						# No Cap
			check_variable = { which = giga_current_hyperstructural_ass value < giga_hyperstructural_ass_cap }
		}
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"								is_inside_border = from }
		custom_tooltip = { fail_text = "requires_surveyed_system"							giga_system_is_surveyed = yes }
		custom_tooltip = { fail_text = "requires_no_colonized_planets"						NOT = { any_system_planet = { is_colony = yes } } }
		custom_tooltip = { fail_text = "requires_big_star"									OR = { is_star_class = sc_b is_star_class = sc_a } }
		custom_tooltip = { fail_text = "requires_no_existing_megastructure"					has_no_non_gate_megastructure = yes }
		custom_tooltip = { fail_text = "requires_no_crisis_system"							NOT = { any_system_planet = { has_planet_flag = crisis_vital_planet } } }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_hyperstructural_ass_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_hyperstructural_ass value < giga_hyperstructural_ass_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "requires_no_existing_megastructure"		planet_has_no_megastructure = yes }
			custom_tooltip = { fail_text = "must_build_around_star"					is_star = yes }
			custom_tooltip = { fail_text = "requires_no_anomaly"					has_anomaly = no }
		}
	}

	ai_weight = {
		# weight = 100	# Default = 100

		# # Can we afford the upkeep
		# modifier = { factor = 1.00	chk_afford_alloys_10 = yes }
		# modifier = { factor = 0.90	chk_afford_alloys_09 = yes }
		# modifier = { factor = 0.80	chk_afford_alloys_08 = yes }
		# modifier = { factor = 0.70	chk_afford_alloys_07 = yes }
		# modifier = { factor = 0.60	chk_afford_alloys_06 = yes }
		# modifier = { factor = 0.50	chk_afford_alloys_05 = yes }
		# modifier = { factor = 0.40	chk_afford_alloys_04 = yes }
		# modifier = { factor = 0.30	chk_afford_alloys_03 = yes }
		# modifier = { factor = 0.20	chk_afford_alloys_25 = yes }
		# modifier = { factor = 0.10	chk_afford_alloys_02 = yes }
		# modifier = { factor = 0.00	chk_afford_alloys_15 = yes }

		# modifier = { factor = 1.00	chk_afford_energy_10 = yes }
		# modifier = { factor = 0.90	chk_afford_energy_09 = yes }
		# modifier = { factor = 0.80	chk_afford_energy_08 = yes }
		# modifier = { factor = 0.70	chk_afford_energy_07 = yes }
		# modifier = { factor = 0.60	chk_afford_energy_06 = yes }
		# modifier = { factor = 0.50	chk_afford_energy_05 = yes }
		# modifier = { factor = 0.40	chk_afford_energy_04 = yes }
		# modifier = { factor = 0.30	chk_afford_energy_03 = yes }
		# modifier = { factor = 0.20	chk_afford_energy_25 = yes }
		# modifier = { factor = 0.10	chk_afford_energy_02 = yes }
		# modifier = { factor = 0.00	chk_afford_energy_15 = yes }

		# modifier = { factor = 1.00	chk_afford_engineering_research_10 = yes }
		# modifier = { factor = 0.90	chk_afford_engineering_research_09 = yes }
		# modifier = { factor = 0.80	chk_afford_engineering_research_08 = yes }
		# modifier = { factor = 0.70	chk_afford_engineering_research_07 = yes }
		# modifier = { factor = 0.60	chk_afford_engineering_research_06 = yes }
		# modifier = { factor = 0.50	chk_afford_engineering_research_05 = yes }
		# modifier = { factor = 0.40	chk_afford_engineering_research_04 = yes }
		# modifier = { factor = 0.30	chk_afford_engineering_research_03 = yes }
		# modifier = { factor = 0.20	chk_afford_engineering_research_25 = yes }
		# modifier = { factor = 0.10	chk_afford_engineering_research_02 = yes }
		# modifier = { factor = 0.00	chk_afford_engineering_research_15 = yes }

		# modifier = { factor = 0.00	from = { has_monthly_income = { resource = influence value < 2 } } }

		# # Do we want the production
		# modifier = { factor = 3.75	chk_needs_minerals_10 = yes }
		# modifier = { factor = 3.50	chk_needs_minerals_09 = yes }
		# modifier = { factor = 3.25	chk_needs_minerals_08 = yes }
		# modifier = { factor = 3.00	chk_needs_minerals_07 = yes }
		# modifier = { factor = 2.75	chk_needs_minerals_06 = yes }
		# modifier = { factor = 2.50	chk_needs_minerals_05 = yes }
		# modifier = { factor = 2.25	chk_needs_minerals_04 = yes }
		# modifier = { factor = 2.00	chk_needs_minerals_03 = yes }
		# modifier = { factor = 1.75	chk_needs_minerals_25 = yes }
		# modifier = { factor = 1.50	chk_needs_minerals_02 = yes }
		# modifier = { factor = 1.25	chk_needs_minerals_15 = yes }

		# # Is this system a good location?
		# modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		# modifier = { factor = 0.5	any_neighbor_system = { any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } } }

		# # Do we lean towards this from federation/ethic/civic?
		# modifier = { factor = 2		from = { has_federation = yes federation = { has_federation_type = military_federation } } }
		# modifier = { factor = 3		from = { has_ethic = ethic_fanatic_militarist } }
		# modifier = { factor = 1.5	from = { has_ethic = ethic_militarist } }
		# modifier = { factor = 1.5	from = { has_civic = civic_machine_terminator } }
		# modifier = { factor = 1.5	from = { has_civic = civic_fanatic_purifiers } }
		# modifier = { factor = 1.5	from = { has_civic = civic_hive_devouring_swarm } }
		# modifier = { factor = 2		from = { is_at_war = yes } }

		# # How many of this megastructure can the AI build?
		# modifier = { factor = 0.00	from = { has_country_flag = has_recently_built_hyperstructural_ass } }
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		OR = {
		# 			has_megastructure = hyperstructural_ass_0
		# 			has_megastructure = hyperstructural_ass_1
		# 			has_megastructure = hyperstructural_ass_2
		# 			has_megastructure = hyperstructural_ass_3
		# 			has_megastructure = hyperstructural_ass_4
		# 		}
		# 	}
		# }

		weight = value:giga_ai_base_giga

		mult = value:giga_ai_upkeep|RESOURCE|energy|AMOUNT|3000|MIN|0.5|
		mult = value:giga_ai_upkeep|RESOURCE|engineering_research|AMOUNT|3000|
		mult = value:giga_ai_output|RESOURCE|minerals|AMOUNT|1500|MIN|0.75|
		mult = value:giga_ai_prevent_spam|MEGA|hyperstructural_ass|
		mult = value:giga_ai_militarist_plus

		modifier = { factor = value:giga_ai_base_continue	from = { has_country_flag = pangalactic_defense_league } }
		modifier = { factor = 2		from = { has_federation = yes federation = { has_federation_type = military_federation } } }
		modifier = { factor = 1.5	from = { is_homicidal = yes } }
		modifier = { factor = 2		from = { is_at_war = yes } }
	}

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = {
			save_event_target_as = giga_planet
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			giga_set_has_mega_flag = yes
		}
		from = {
			set_timed_country_flag = { flag = has_recently_built_hyperstructural_ass years = 20 }
			country_event = { id = giga_dialog.3701 }	# Notification
			change_variable = { which = giga_current_hyperstructural_ass value = 1 }
		}
	}
}

hyperstructural_ass_1 = {
	entity = "giga_shipyard_1_entity"
	construction_entity = "giga_shipyard_1_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { hyperstructural_ass_0 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_gigastructures
		cost = { alloys = 10000 unity = @giga_giga_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|utility|RESOURCE|alloys|AMOUNT|10000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|utility|RESOURCE|unity|AMOUNT|@giga_giga_unity_cost| }
		upkeep = { energy = 250 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = utility RESOURCE = alloys AMOUNT = 10000 }
		giga_ai_savings_withdraw = { CATEGORY = utility RESOURCE = unity  AMOUNT = @giga_giga_unity_cost }
	}

	potential = { NOT = { has_global_flag = hyperstructural_ass_disabled } }
	possible = {
		from = {
			has_gigastructural_constructs = yes
			has_technology = giga_tech_hyperstructural_ass
		}
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.3702 } }	# Notification
		giga_remove_system_planets = yes
		giga_remove_system_debris = yes
		set_asteroid_belt = { radius = 0 }
	}
}

hyperstructural_ass_2 = {
	entity = "giga_shipyard_2_entity"
	construction_entity = "giga_shipyard_2_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { hyperstructural_ass_1 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_gigastructures
		cost = { alloys = 20000 unity = @giga_giga_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|utility|RESOURCE|alloys|AMOUNT|20000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|utility|RESOURCE|unity|AMOUNT|@giga_giga_unity_cost| }
		upkeep = {
			energy = 500
			engineering_research = 200
		}
		produces = { minerals = 500 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = utility RESOURCE = alloys AMOUNT = 20000 }
		giga_ai_savings_withdraw = { CATEGORY = utility RESOURCE = unity  AMOUNT = @giga_giga_unity_cost }
	}

	potential = { NOT = { has_global_flag = hyperstructural_ass_disabled } }
	possible = {
		from = {
			has_gigastructural_constructs = yes
			has_technology = giga_tech_hyperstructural_ass
		}
	}

	country_modifier = { country_naval_cap_add = 500 }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.3703 } }	# Notification
	}
}

hyperstructural_ass_3 = {
	entity = "giga_shipyard_3_entity"
	construction_entity = "giga_shipyard_3_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { hyperstructural_ass_2 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_gigastructures
		cost = { alloys = 35000 unity = @giga_giga_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|utility|RESOURCE|alloys|AMOUNT|35000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|utility|RESOURCE|unity|AMOUNT|@giga_giga_unity_cost| }
		upkeep = {
			energy = 1500
			engineering_research = 500
		}
		produces = { minerals = 1000 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = utility RESOURCE = alloys AMOUNT = 35000 }
		giga_ai_savings_withdraw = { CATEGORY = utility RESOURCE = unity  AMOUNT = @giga_giga_unity_cost }
	}

	potential = { NOT = { has_global_flag = hyperstructural_ass_disabled } }
	possible = {
		from = {
			has_gigastructural_constructs = yes
			has_technology = giga_tech_hyperstructural_ass
		}
	}

	country_modifier = {
		country_naval_cap_add = 750
		country_resource_max_add = 25000
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.3704 } }	# Notification
	}
}

hyperstructural_ass_4 = {
	entity = "giga_shipyard_full_entity"
	construction_entity = "giga_shipyard_4_construction_entity"
	portrait = "GFX_megastructure_hyperstructural_ass"
	upgrade_from = { hyperstructural_ass_3 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 1800
	resources = {
		category = giga_gigastructures
		cost = { alloys = 40000 unity = @giga_giga_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|utility|RESOURCE|alloys|AMOUNT|40000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|utility|RESOURCE|unity|AMOUNT|@giga_giga_unity_cost| }
		upkeep = {
			energy = 3000
			engineering_research = 1000
		}
		upkeep = {
			trigger = { NOT = { has_global_flag = giga_disable_influence_upkeep } }
			influence = 1.5
		}
		produces = { minerals = 1500 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = utility RESOURCE = alloys AMOUNT = 40000 }
		giga_ai_savings_withdraw = { CATEGORY = utility RESOURCE = unity  AMOUNT = @giga_giga_unity_cost }
	}

	potential = { NOT = { has_global_flag = hyperstructural_ass_disabled } }
	possible = {
		from = {
			has_gigastructural_constructs = yes
			has_technology = giga_tech_hyperstructural_ass
		}
	}

	country_modifier = {
		country_naval_cap_add = 1500
		country_resource_max_add = 40000
		starbase_shipyard_build_speed_mult = 0.75
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.3705 }	# Notification
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_92
					}
				}
				set_country_flag = giga_achievement_92
				set_timed_country_flag = { flag = giga_achievement_92_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
	}
}