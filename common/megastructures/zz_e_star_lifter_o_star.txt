# star_lifter_0_o_star = {
# 	entity = "giga_consite_7_7_entity"
# 	construction_entity = "giga_consite_7_7_entity"
# 	# construction_blocks_and_blocked_by = none # BLOCKING TEST
# 	portrait = "GFX_megastructure_construction_background"
# 	place_entity_on_planet_plane = no
# 	prerequisites = { giga_tech_star_lifter }
# 	entity_offset = { x = -40 y = -40 }
# 	potential = { always = no }
#
# 	outliner_trigger = {
# 		exists = owner
# 		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
# 	}
#
# 	build_time = 1800
# 	resources = {
# 		category = giga_star_lifter
# 		upkeep = { energy = 5 }
# 	}
# }
#
# star_lifter_1_o_star = {
# 	entity = "starlifter_01_o_star_entity"
# 	construction_entity = "starlifter_01_o_star_entity"
# 	portrait = "GFX_megastructure_construction_background"
# 	upgrade_from = { star_lifter_0_o_star }
# 	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
#
# 	outliner_trigger = {
# 		exists = owner
# 		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
# 	}
#
# 	build_time = @starlifter_p1_buildtime_o_star
# 	resources = {
# 		category = giga_megastructures
# 		cost = { alloys = @starlifter_p1_cost_alloys_o_star unity = @starlifter_cost_unity_o_star }
# 		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@starlifter_p1_cost_alloys_o_star| }
# 		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@starlifter_cost_unity_o_star| }
# 	}
#
# 	on_build_start = {
# 		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @starlifter_p1_cost_alloys_o_star }
# 		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @starlifter_cost_unity_o_star }
# 	}
#
# 	potential = { NOT = { has_global_flag = lifters_disabled } }
# 	possible = { from = { has_technology = giga_tech_star_lifter } }
#
# 	on_build_complete = {
# 		save_event_target_as = giga_system
# 		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
# 		from = { country_event = { id = giga_dialog.1602 } }	# Notification
# 	}
# }
#
# star_lifter_2_o_star = {
# 	entity = "starlifter_02_o_star_entity"
# 	construction_entity = "starlifter_02_o_star_construction_entity"
# 	portrait = "GFX_megastructure_construction_background"
# 	upgrade_from = { star_lifter_1_o_star }
# 	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
#
# 	outliner_trigger = {
# 		exists = owner
# 		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
# 	}
#
# 	build_time = @starlifter_p2_buildtime_o_star
# 	resources = {
# 		category = giga_megastructures
# 		cost = { alloys = @starlifter_p2_cost_alloys_o_star unity = @starlifter_cost_unity_o_star }
# 		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@starlifter_p2_cost_alloys_o_star| }
# 		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@starlifter_cost_unity_o_star| }
# 		produces = { minerals = @starlifter_p2_produces_minerals_o_star }
# 		upkeep = { energy = @starlifter_p2_upkeep_energy_o_star }
# 	}
#
# 	on_build_start = {
# 		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @starlifter_p2_cost_alloys_o_star }
# 		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @starlifter_cost_unity_o_star }
# 	}
#
# 	potential = { NOT = { has_global_flag = lifters_disabled } }
# 	possible = { from = { has_technology = giga_tech_star_lifter } }
#
# 	on_build_complete = {
# 		save_event_target_as = giga_system
# 		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
# 		from = { country_event = { id = giga_dialog.1603 } }	# Notification
# 	}
# }
#
# star_lifter_3_o_star = {
# 	entity = "starlifter_03_o_star_entity"
# 	construction_entity = "starlifter_03_o_star_construction_entity"
# 	portrait = "GFX_megastructure_construction_background"
# 	upgrade_from = { star_lifter_2_o_star }
# 	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
#
# 	outliner_trigger = {
# 		exists = owner
# 		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
# 	}
#
# 	build_time = @starlifter_p3_buildtime_o_star
# 	resources = {
# 		category = giga_megastructures
# 		cost = { alloys = @starlifter_p3_cost_alloys_o_star unity = @starlifter_cost_unity_o_star }
# 		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@starlifter_p3_cost_alloys_o_star| }
# 		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@starlifter_cost_unity_o_star| }
# 		produces = { minerals = @starlifter_p3_produces_minerals_o_star }
# 		upkeep = { energy = @starlifter_p3_upkeep_energy_o_star }
# 	}
#
# 	on_build_start = {
# 		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @starlifter_p3_cost_alloys_o_star }
# 		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @starlifter_cost_unity_o_star }
# 	}
#
# 	potential = { NOT = { has_global_flag = lifters_disabled } }
# 	possible = { from = { has_technology = giga_tech_star_lifter } }
#
# 	on_build_complete = {
# 		save_event_target_as = giga_system
# 		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
# 		from = { country_event = { id = giga_dialog.1604 } }	# Notification
# 	}
# }
#
# star_lifter_4_o_star = {
# 	entity = "starlifter_04_o_star_entity"
# 	construction_entity = "starlifter_04_o_star_construction_entity"
# 	portrait = "GFX_megastructure_construction_background"
# 	upgrade_from = { star_lifter_3_o_star }
# 	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
#
# 	outliner_trigger = {
# 		exists = owner
# 		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
# 	}
#
# 	build_time = @starlifter_p4_buildtime_o_star
# 	resources = {
# 		category = giga_megastructures
# 		cost = { alloys = @starlifter_p4_cost_alloys_o_star unity = @starlifter_cost_unity_o_star }
# 		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@starlifter_p4_cost_alloys_o_star| }
# 		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@starlifter_cost_unity_o_star| }
# 		produces = { minerals = @starlifter_p4_produces_minerals_o_star }
# 		upkeep = { energy = @starlifter_p4_upkeep_energy_o_star }
# 	}
#
# 	on_build_start = {
# 		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @starlifter_p4_cost_alloys_o_star }
# 		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @starlifter_cost_unity_o_star }
# 	}
#
# 	potential = { NOT = { has_global_flag = lifters_disabled } }
# 	possible = { from = { has_technology = giga_tech_star_lifter } }
#
# 	on_build_complete = {
# 		save_event_target_as = giga_system
# 		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
# 		from = { country_event = { id = giga_dialog.1604 } }	# Notification
# 	}
# }
#
# star_lifter_5_o_star = {
# 	entity = "starlifter_05_o_star_entity"
# 	construction_entity = "starlifter_05_o_star_construction_entity"
# 	portrait = "GFX_megastructure_star_lifters"
# 	upgrade_from = { star_lifter_4_o_star }
# 	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
#
# 	outliner_trigger = {
# 		exists = owner
# 		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
# 	}
#
# 	build_time = @starlifter_p5_buildtime_o_star
# 	resources = {
# 		category = giga_megastructures
# 		cost = { alloys = @starlifter_p5_cost_alloys_o_star unity = @starlifter_cost_unity_o_star }
# 		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|@starlifter_p5_cost_alloys_o_star| }
# 		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@starlifter_cost_unity_o_star| }
# 		produces = { minerals = @starlifter_p5_produces_minerals_o_star }
# 		upkeep = { energy = @starlifter_p5_upkeep_energy_o_star }
# 	}
#
# 	on_build_start = {
# 		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = @starlifter_p5_cost_alloys_o_star }
# 		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @starlifter_cost_unity_o_star }
# 	}
#
# 	potential = { NOT = { has_global_flag = lifters_disabled } }
# 	possible = { from = { has_technology = giga_tech_star_lifter } }
#
# 	on_build_complete = {
# 		save_event_target_as = giga_system
# 		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
# 		from = {
# 			country_event = { id = giga_dialog.1605 }				# Notification
# 			set_country_flag = has_built_or_repaired_gigastructure	# Triggers Gigastructural Constructs
# 			if = {
# 				limit = {
# 					NOR = {
# 						has_global_flag = giga_achievements_disabled
# 						has_country_flag = giga_achievement_79
# 					}
# 				}
# 				set_country_flag = giga_achievement_79
# 				set_timed_country_flag = { flag = giga_achievement_79_notification days = 30 }
# 				giga_achievement_sound = yes
# 			}
# 		}
# 		every_system_planet = {
# 			limit = {
# 				OR = {
# 					giga_is_molten = yes
# 					giga_is_toxic = yes
# 					giga_is_barren = yes
# 				}
# 			}
# 			if = {		limit = { OR = { giga_is_molten = yes giga_is_toxic = yes } }	change_pc = pc_frozen }
# 			else_if = {	limit = { giga_is_barren = yes }								change_pc = pc_barren_cold }
# 		}
# 	}
# }