the_vat_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	entity_offset = { x = -20 y = -20 }
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_the_vat }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = {
			alloys = 5000
			unity = @giga_mega_start_unity_cost
		}
		upkeep = { energy = 5 }
	}

	potential = {
		has_technology = giga_tech_the_vat
		NOT = { has_global_flag = the_vat_disabled }
		OR = {
			check_variable = { which = giga_the_vat_cap value = 0 }						# No Cap
			check_variable = { which = giga_current_the_vat value < giga_the_vat_cap }
		}
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"		is_inside_border = from }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_the_vat_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_the_vat value < giga_the_vat_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
			custom_tooltip = { fail_text = "requires_no_existing_megastructure"	planet_has_no_megastructure = yes }
			custom_tooltip = { fail_text = "requires_survey_not_habitable"		is_surveyed = { who = prev.from status = yes } is_planet_habitable = no }
			custom_tooltip = { fail_text = "requires_not_minor_planetary_body"	is_asteroid = no is_moon = no }
			custom_tooltip = { fail_text = "requires_not_star"					is_star = no }
			custom_tooltip = {
				fail_text = "requires_not_astral_scar"
				is_astral_scar = no
			}
		}
	}

	ai_weight = {
		# weight = 100	# Default = 100

		# # Can we afford the upkeep
		# modifier = { factor = 1.00	chk_afford_alloys_10 = yes }
		# modifier = { factor = 0.90	chk_afford_alloys_09 = yes }
		# modifier = { factor = 0.80	chk_afford_alloys_08 = yes }
		# modifier = { factor = 0.70	chk_afford_alloys_07 = yes }
		# modifier = { factor = 0.60	chk_afford_alloys_06 = yes }
		# modifier = { factor = 0.50	chk_afford_alloys_05 = yes }
		# modifier = { factor = 0.40	chk_afford_alloys_04 = yes }
		# modifier = { factor = 0.30	chk_afford_alloys_03 = yes }
		# modifier = { factor = 0.20	chk_afford_alloys_25 = yes }
		# modifier = { factor = 0.10	chk_afford_alloys_02 = yes }
		# modifier = { factor = 0.00	chk_afford_alloys_15 = yes }

		# modifier = { factor = 1.00	chk_afford_energy_10 = yes }
		# modifier = { factor = 0.90	chk_afford_energy_09 = yes }
		# modifier = { factor = 0.80	chk_afford_energy_08 = yes }
		# modifier = { factor = 0.70	chk_afford_energy_07 = yes }
		# modifier = { factor = 0.60	chk_afford_energy_06 = yes }
		# modifier = { factor = 0.50	chk_afford_energy_05 = yes }
		# modifier = { factor = 0.40	chk_afford_energy_04 = yes }
		# modifier = { factor = 0.30	chk_afford_energy_03 = yes }
		# modifier = { factor = 0.20	chk_afford_energy_25 = yes }
		# modifier = { factor = 0.10	chk_afford_energy_02 = yes }
		# modifier = { factor = 0.00	chk_afford_energy_15 = yes }

		# modifier = { factor = 1.00	chk_afford_engineering_research_10 = yes }
		# modifier = { factor = 0.90	chk_afford_engineering_research_09 = yes }
		# modifier = { factor = 0.80	chk_afford_engineering_research_08 = yes }
		# modifier = { factor = 0.70	chk_afford_engineering_research_07 = yes }
		# modifier = { factor = 0.60	chk_afford_engineering_research_06 = yes }
		# modifier = { factor = 0.50	chk_afford_engineering_research_05 = yes }
		# modifier = { factor = 0.40	chk_afford_engineering_research_04 = yes }
		# modifier = { factor = 0.30	chk_afford_engineering_research_03 = yes }
		# modifier = { factor = 0.20	chk_afford_engineering_research_25 = yes }
		# modifier = { factor = 0.10	chk_afford_engineering_research_02 = yes }
		# modifier = { factor = 0.00	chk_afford_engineering_research_15 = yes }

		# modifier = { factor = 0.00	from = { has_monthly_income = { resource = influence value < 2 } } }

		# # Do we want the production
		# modifier = { factor = 3.75	chk_needs_minerals_10 = yes }
		# modifier = { factor = 3.50	chk_needs_minerals_09 = yes }
		# modifier = { factor = 3.25	chk_needs_minerals_08 = yes }
		# modifier = { factor = 3.00	chk_needs_minerals_07 = yes }
		# modifier = { factor = 2.75	chk_needs_minerals_06 = yes }
		# modifier = { factor = 2.50	chk_needs_minerals_05 = yes }
		# modifier = { factor = 2.25	chk_needs_minerals_04 = yes }
		# modifier = { factor = 2.00	chk_needs_minerals_03 = yes }
		# modifier = { factor = 1.75	chk_needs_minerals_25 = yes }
		# modifier = { factor = 1.50	chk_needs_minerals_02 = yes }
		# modifier = { factor = 1.25	chk_needs_minerals_15 = yes }

		# # Is this system a good location?
		# modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		# modifier = { factor = 0.5	any_neighbor_system = { any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } } }

		# # Do we lean towards this from federation/ethic/civic?
		# modifier = { factor = 2		from = { has_federation = yes federation = { has_federation_type = military_federation } } }
		# modifier = { factor = 3		from = { has_ethic = ethic_fanatic_militarist } }
		# modifier = { factor = 1.5	from = { has_ethic = ethic_militarist } }
		# modifier = { factor = 1.5	from = { has_civic = civic_machine_terminator } }
		# modifier = { factor = 1.5	from = { has_civic = civic_fanatic_purifiers } }
		# modifier = { factor = 1.5	from = { has_civic = civic_hive_devouring_swarm } }
		# modifier = { factor = 2		from = { is_at_war = yes } }

		# # How many of this megastructure can the AI build?
		# modifier = { factor = 0.00	from = { has_country_flag = has_recently_built_the_vat } }
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		OR = {
		# 			has_megastructure = the_vat_0
		# 			has_megastructure = the_vat_1
		# 			has_megastructure = the_vat_2
		# 			has_megastructure = the_vat_3
		# 		}
		# 	}
		# }

		weight = value:giga_ai_base_mega

		weight = value:giga_ai_upkeep|RESOURCE|alloys|AMOUNT|160|MIN|0.1|
		weight = value:giga_ai_upkeep|RESOURCE|energy|AMOUNT|150|MIN|0.25|
		weight = value:giga_ai_upkeep|RESOURCE|food|AMOUNT|300|MIN|0.1|
		weight = value:giga_ai_prevent_spam|MEGA|the_vat|
		weight = value:giga_ai_core_territory
		weight = value:giga_ai_unlocks_galwonders
		weight = value:giga_ai_militarist_plus
	}

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = {
			save_event_target_as = giga_planet
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			giga_set_has_mega_flag = yes
		}
		from = {
			set_timed_country_flag = { flag = has_recently_built_the_vat years = 20 }
			country_event = { id = giga_dialog.11301 }	# Notification
			change_variable = { which = giga_current_the_vat value = 1 }
		}
	}
}

the_vat_1 = {
	entity = "giga_the_vat_p1_entity"
	portrait = "GFX_megastructure_the_vat"
	entity_offset = { x = -20 y = -20 }
	place_entity_on_planet_plane = no
	upgrade_from = { the_vat_0 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = { alloys = 10000 unity = @giga_mega_unity_cost }
		upkeep = { alloys = 100 }
	}

	potential = { NOT = { has_global_flag = the_vat_disabled } }
	possible = { from = { has_technology = giga_tech_the_vat } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.11302 } }	# Notification
	}
}

the_vat_2 = {
	entity = "giga_the_vat_p2_entity"
	construction_entity = "giga_the_vat_construction_p2_entity"
	portrait = "GFX_megastructure_the_vat"
	entity_offset = { x = -20 y = -20 }
	place_entity_on_planet_plane = no
	upgrade_from = { the_vat_1 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = { alloys = 7500 unity = @giga_mega_unity_cost }
		upkeep = { alloys = 120 }
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	potential = { NOT = { has_global_flag = the_vat_disabled } }
	possible = { from = { has_technology = giga_tech_the_vat } }

	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.11303 } }	# Notification
	}
}

the_vat_3 = {
	entity = "giga_the_vat_p3_entity"
	construction_entity = "giga_the_vat_construction_p3_entity"
	portrait = "GFX_megastructure_the_vat"
	entity_offset = { x = -20 y = -20 }
	place_entity_on_planet_plane = no
	upgrade_from = { the_vat_2 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_megastructures
		cost = { alloys = 7500 unity = @giga_mega_unity_cost }
		upkeep = { alloys = 140 }
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	potential = { NOT = { has_global_flag = the_vat_disabled } }
	possible = { from = { has_technology = giga_tech_the_vat } }

	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.11304 } }	# Notification
	}
}

the_vat_4 = {
	entity = "giga_the_vat_p4_entity"
	construction_entity = "giga_the_vat_construction_p4_entity"
	portrait = "GFX_megastructure_the_vat"
	entity_offset = { x = -20 y = -20 }
	place_entity_on_planet_plane = no
	upgrade_from = { the_vat_3 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_megastructures
		cost = { alloys = 7500 unity = @giga_mega_unity_cost }
		upkeep = {
			alloys = 160
			energy = 150
		}
	}

	potential = { NOT = { has_global_flag = the_vat_disabled } }
	possible = { from = { has_technology = giga_tech_the_vat } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.11305 }				# Notification
			set_country_flag = has_built_or_repaired_megastructure	# Triggers Galactic Wonders
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_98
					}
				}
				set_country_flag = giga_achievement_98
				set_timed_country_flag = { flag = giga_achievement_98_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
	}
}