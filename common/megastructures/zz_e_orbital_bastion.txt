orbital_bastion_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = 0 y = -20 }
	prerequisites = { giga_tech_orbital_bastion }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 900
	resources = {
		category = giga_megastructures
		cost = {
			alloys = 2000
			influence = 100
			unity = @giga_small_mega_unity_cost
		}
		upkeep = { energy = 5 }
	}

	potential = {
		has_ascension_perk = ap_galactic_force_projection
		has_technology = giga_tech_orbital_bastion
		NOT = { has_global_flag = academy_disabled }
		OR = {
			check_variable = { which = giga_academy_cap value = 0 }						# No Cap
			check_variable = { which = giga_current_academy value < giga_academy_cap }
		}
	}

	possible = {
		custom_tooltip = { fail_text = "requires_no_more_than_15"	from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = orbital_bastion_0 is_megastructure_type = orbital_bastion_1 } } count < 15 } } }
		custom_tooltip = { fail_text = "requires_inside_border"		is_inside_border = from }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_academy_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_academy value < giga_academy_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
			custom_tooltip = { fail_text = "requires_no_existing_megastructure"	planet_has_no_megastructure = yes }
			custom_tooltip = { fail_text = "requires_not_asteroid"				is_asteroid = no }
			custom_tooltip = { fail_text = "requires_not_star"					is_star = no }
			custom_tooltip = {
				fail_text = "requires_not_astral_scar"
				is_astral_scar = no
			}
		}
	}

	ai_weight = {
		# weight = 100	# Default = 100

		# # Can we afford the upkeep
		# modifier = { factor = 1.00	chk_afford_energy_10 = yes }
		# modifier = { factor = 0.90	chk_afford_energy_09 = yes }
		# modifier = { factor = 0.80	chk_afford_energy_08 = yes }
		# modifier = { factor = 0.70	chk_afford_energy_07 = yes }
		# modifier = { factor = 0.60	chk_afford_energy_06 = yes }
		# modifier = { factor = 0.50	chk_afford_energy_05 = yes }
		# modifier = { factor = 0.40	chk_afford_energy_04 = yes }
		# modifier = { factor = 0.30	chk_afford_energy_03 = yes }
		# modifier = { factor = 0.20	chk_afford_energy_25 = yes }
		# modifier = { factor = 0.10	chk_afford_energy_02 = yes }
		# modifier = { factor = 0.00	chk_afford_energy_15 = yes }

		# # Do we want the production

		# # Is this system a good location?
		# modifier = { factor = 0.5	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }

		# # Do we lean towards this from federation/ethic/civic?
		# modifier = { factor = 2		from = { has_federation = yes federation = { has_federation_type = military_federation } } }
		# modifier = { factor = 4		from = { has_ethic = ethic_fanatic_militarist } }
		# modifier = { factor = 2		from = { has_ethic = ethic_militarist } }
		# modifier = { factor = 3		from = { has_civic = civic_machine_terminator } }
		# modifier = { factor = 3		from = { has_civic = civic_fanatic_purifiers } }
		# modifier = { factor = 3		from = { has_civic = civic_hive_devouring_swarm } }
		# modifier = { factor = 2		from = { is_at_war = yes } }

		# # How many of this megastructure can the AI build?
		# # These are capped anyway

		weight = value:giga_ai_base_mega

		mult = value:giga_ai_upkeep|RESOURCE|energy|AMOUNT|25|
		mult = value:giga_ai_core_territory
		mult = value:giga_ai_build_low_priority
		mult = value:giga_ai_unlock_low_priority
		mult = value:giga_ai_militarist
	}

	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.601 }	# Notification
			change_variable = { which = giga_current_academy value = 1 }
		}
		fromfrom.planet = {
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			giga_set_has_mega_flag = yes
		}
	}
}

orbital_bastion_1 = {
	entity = "orbital_barracks_entity"
	construction_entity = "orbital_barracks_entity"
	portrait = "GFX_megastructure_orbital_bastion"
	place_entity_on_planet_plane = no
	entity_offset = { x = 0 y = -20 }
	upgrade_from = { orbital_bastion_0 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 600
	resources = {
		category = giga_megastructures
		cost = { alloys = 2000 unity = @giga_small_mega_unity_cost }
		upkeep = { energy = 10 }
	}

	potential = { NOT = { has_global_flag = academy_disabled } }
	possible = {
		custom_tooltip = {
			fail_text = "requires_no_more_than_15"
			from = {
				count_owned_megastructure = {
					limit = { is_megastructure_type = orbital_bastion_1 }
					count < 15
				}
			}
		}
		from = {
			has_technology = giga_tech_orbital_bastion
			has_ascension_perk = ap_galactic_force_projection
		}
	}

	country_modifier = {
		country_naval_cap_add = 30
		command_limit_add = 2
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.602 } }	# Notification
	}
}

orbital_bastion_2 = {
	entity = "orbital_barracks_2_entity"
	construction_entity = "orbital_barracks_2_construction_entity"
	portrait = "GFX_megastructure_orbital_bastion"
	place_entity_on_planet_plane = no
	entity_offset = { x = 0 y = -20 }
	upgrade_from = { orbital_bastion_1 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 1000
	resources = {
		category = giga_megastructures
		cost = { alloys = 2500 unity = @giga_small_mega_unity_cost }
		upkeep = { energy = 25 }
	}

	potential = { NOT = { has_global_flag = academy_disabled } }
	possible = {
		custom_tooltip = {
			fail_text = "requires_no_more_than_6"
			from = {
				count_owned_megastructure = {
					limit = { is_megastructure_type = orbital_bastion_2 }
					count < 6
				}
			}
		}
		from = {
			has_technology = giga_tech_orbital_bastion
			has_ascension_perk = ap_galactic_force_projection
		}
	}

	country_modifier = {
		country_naval_cap_add = 60
		command_limit_add = 4
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.603 } }	# Notification
	}
}

orbital_bastion_3 = {
	entity = "orbital_barracks_3_entity"
	construction_entity = "orbital_barracks_3_construction_entity"
	portrait = "GFX_megastructure_orbital_bastion"
	place_entity_on_planet_plane = no
	entity_offset = { x = 0 y = -20 }
	upgrade_from = { orbital_bastion_2 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 1500
	resources = {
		category = giga_megastructures
		cost = { alloys = 9000 unity = @giga_mega_unity_cost }
		upkeep = { energy = 25 }
	}

	potential = { NOT = { has_global_flag = academy_disabled } }
	possible = {
		custom_tooltip = { fail_text = "already_have_bastion_in_system" NOT = { has_star_flag = already_have_bastion_in_system } }
		custom_tooltip = {
			fail_text = "requires_no_more_than_3"
			from = {
				count_owned_megastructure = {
					limit = { is_megastructure_type = orbital_bastion_3 }
					count < 3
				}
			}
		}
		from = {
			has_technology = giga_tech_orbital_bastion
			has_ascension_perk = ap_galactic_force_projection
		}
	}

	country_modifier = {
		country_naval_cap_add = 120
		command_limit_add = 8
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_start = { set_star_flag = already_have_bastion_in_system }
	on_build_cancel = { remove_star_flag = already_have_bastion_in_system }
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.604 }	# Notification
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_66
					}
				}
				set_country_flag = giga_achievement_66
				set_timed_country_flag = { flag = giga_achievement_66_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
	}
}