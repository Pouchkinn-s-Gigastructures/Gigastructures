penrose_sphere_0 = {
	entity = "giga_consite_10_10_entity"
	construction_entity = "giga_consite_10_10_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_penrose_sphere_1 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 1800
	resources = {
		category = giga_megastructures
		cost = {
			alloys = 5000
			influence = 150
			unity = @giga_mega_unity_cost
		}
		upkeep = { energy = 5 }
	}

	potential = {
		has_technology = giga_tech_penrose_sphere_1
		NOT = { has_global_flag = penrose_sphere_disabled }
		OR = {
			check_variable = { which = giga_penrose_sphere_cap value = 0 }						# No Cap
			check_variable = { which = giga_current_penrose_sphere value < giga_penrose_sphere_cap }
		}
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"					is_inside_border = from }
		custom_tooltip = { fail_text = "requires_surveyed_system"				giga_system_is_surveyed = yes }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_penrose_sphere_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_penrose_sphere value < giga_penrose_sphere_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "must_build_around_black_hole"		giga_black_hole = yes }
			custom_tooltip = { fail_text = "must_build_around_primary_star"		is_primary_star = yes }
			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				OR = {
					planet_has_no_megastructure = yes
					AND = {
						has_planet_flag = has_hrae_mc
						NOT = { has_planet_flag = has_penrose }
					}
				}
			}
		}
	}

	ai_weight = {
		# weight = 100	# Default = 100

		# # Can we afford the upkeep

		# # Do we want the production
		# modifier = { factor = 3.75	chk_needs_energy_10 = yes }
		# modifier = { factor = 3.50	chk_needs_energy_09 = yes }
		# modifier = { factor = 3.25	chk_needs_energy_08 = yes }
		# modifier = { factor = 3.00	chk_needs_energy_07 = yes }
		# modifier = { factor = 2.75	chk_needs_energy_06 = yes }
		# modifier = { factor = 2.50	chk_needs_energy_05 = yes }
		# modifier = { factor = 2.25	chk_needs_energy_04 = yes }
		# modifier = { factor = 2.00	chk_needs_energy_03 = yes }
		# modifier = { factor = 1.75	chk_needs_energy_25 = yes }
		# modifier = { factor = 1.50	chk_needs_energy_02 = yes }
		# modifier = { factor = 1.25	chk_needs_energy_15 = yes }

		# # Is this system a good location?
		# modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		# modifier = { factor = 0.5	any_neighbor_system = { any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } } }

		# # Do we lean towards this from federation/ethic/civic?

		# # How many of this megastructure can the AI build?
		# modifier = { factor = 0.00 from = { has_country_flag = has_recently_built_penrose_sphere } }
		# modifier = { factor = 0.00 from = { count_owned_megastructure = { limit = { is_megastructure_type = penrose_sphere_b4 } count > 2 } } }
		# modifier = { factor = 0.33 from = { count_owned_megastructure = { limit = { is_megastructure_type = penrose_sphere_b4 } count = 2 } } }
		# modifier = { factor = 0.66 from = { count_owned_megastructure = { limit = { is_megastructure_type = penrose_sphere_b4 } count = 1 } } }
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		OR = {
		# 			has_megastructure = penrose_sphere_0
		# 			has_megastructure = penrose_sphere_1
		# 			has_megastructure = penrose_sphere_b2
		# 			has_megastructure = penrose_sphere_b3
		# 		}
		# 	}
		# }

		weight = value:giga_ai_base_mega

		mult = value:giga_ai_upkeep|RESOURCE|alloys|AMOUNT|25|
		mult = value:giga_ai_unlock_low_priority
		mult = value:giga_ai_core_territory
		mult = value:giga_ai_prevent_spam|MEGA|penrose_sphere|
	}

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = {
			save_event_target_as = giga_planet
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			giga_set_has_mega_flag = yes
			set_planet_flag = has_penrose
		}
		from = {
			set_timed_country_flag = { flag = has_recently_built_penrose_sphere years = 20 }
			country_event = { id = giga_dialog.1201 }	# Notification
			change_variable = { which = giga_current_penrose_sphere value = 1 }
		}
	}
}

penrose_sphere_1 = {
	entity = "blackholeframe_entity"
	construction_entity = "blackholeframe_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { penrose_sphere_0 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = { alloys = 5000 unity = @giga_mega_unity_cost }
		upkeep = { energy = 10 }
	}

	potential = { NOT = { has_global_flag = penrose_sphere_disabled } }
	possible = { from = { has_technology = giga_tech_penrose_sphere_1 } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.1202 } }	# Notification
	}
}

##################################
### Detonate it ##################
##################################
penrose_sphere_a2 = {
	entity = "penrose_sphere_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { penrose_sphere_1 }
	upgrade_desc = hide
	
	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	potential = { NOT = { has_global_flag = penrose_sphere_disabled } }
	possible = { from = { has_technology = giga_tech_penrose_sphere_1 } 
		custom_tooltip = {
			fail_text = requires_no_cohesive_system
			fromfrom.solar_system = { 				
				NOR = {
					cohesive_system = yes
					compound_cluster = yes
				}
			}
		}
		hidden_trigger = {
			from = { is_ai = no }
		}
	}

	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = { alloys = 7500 unity = @giga_mega_unity_cost }
		upkeep = {
			alloys = 5
			energy = 25
		}
	}
	on_build_complete = {
		fromfrom.solar_system = { save_event_target_as = giga_system } 
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		# fromfrom = { set_name = "name_penrose"}	
		from = {
			country_event = { id = giga_dialog.1207 }
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_65
					}
				}
				set_country_flag = giga_achievement_65
				set_timed_country_flag = { flag = giga_achievement_65_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
	}
}

#Collect energy for a few years. Let it bounce and bounce!
penrose_sphere_a3 = {
	entity = "penrose_sphere_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { penrose_sphere_a2 }
	upgrade_desc = hide

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 900
	resources = {
		category = giga_megastructures
		cost = { energy = 10000 }
		upkeep = {
			alloys = 5
			energy = 25
		}
	}

	potential = {
		NOT = { has_global_flag = penrose_sphere_disabled }
	}
	possible = { from = { has_technology = giga_tech_penrose_sphere_1 } }

	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.1203 } }	# Notification
	}
}

#Placeholder for "detonate" button.
penrose_sphere_a4 = {
	entity = "penrose_sphere_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { penrose_sphere_a3 }
	upgrade_desc = hide

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	resources = {
		category = giga_megastructures
		cost = { energy = 2500 }
		upkeep = {
			alloys = 5
			energy = 25
		}
	}

	potential = {
		NOT = { has_global_flag = penrose_sphere_disabled }
	}
	possible = {
		from = { has_technology = giga_tech_penrose_sphere_1 }
		custom_tooltip = { fail_text = "cant_explode_two_bombs_at_once"		NOT = { any_megastructure = { is_megastructure_type = penrose_sphere_a4 } } }
	}

	on_build_complete = {
		save_event_target_as = giga_system
		set_star_flag = penrose_detonate_system
		save_global_event_target_as = penrose_detonate_system_location
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.1208 } } # Detonate
	}
}

penrose_sphere_a41 = { entity = "penrose_sphere_l1_entity" portrait = "GFX_megastructure_construction_background" potential = { always = no } resources = { category = giga_megastructures } }
penrose_sphere_a42 = { entity = "penrose_sphere_l2_entity" portrait = "GFX_megastructure_construction_background" potential = { always = no } resources = { category = giga_megastructures } }

##################################
### Make it safe #################
##################################
penrose_sphere_b2 = {
	entity = "penrose_sphere_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { penrose_sphere_1 }
	upgrade_desc = hide
	
	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	potential = { NOT = { has_global_flag = penrose_sphere_disabled } }
	possible = { from = { has_technology = giga_tech_penrose_sphere_1 } }

	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = { alloys = 7500 unity = @giga_mega_unity_cost }
		upkeep = {
			alloys = 5
		}
		produces = {
			energy = 250
		}
	}
	on_build_complete = {
		fromfrom.solar_system = { save_event_target_as = giga_system } 
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		# fromfrom = { set_name = "name_penrose"}	
		from = {
			country_event = { id = giga_dialog.1207 }
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_65
					}
				}
				set_country_flag = giga_achievement_65
				set_timed_country_flag = { flag = giga_achievement_65_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
	}
}

#Added some stabilizers. Now making a lotta energy
penrose_sphere_b3 = {
	entity = "penrose_sphere_ring_entity"
	construction_entity = "penrose_sphere_ring_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { penrose_sphere_b2 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_megastructures
		cost = { alloys = 5000 unity = @giga_mega_unity_cost }
		upkeep = { alloys = 25 }
		produces = { energy = 650 }
	}

	potential = { NOT = { has_global_flag = penrose_sphere_disabled } }
	possible = { from = { has_technology = giga_tech_penrose_sphere_2 } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.1204 } }	# Notification
	}
}

#Add a ringworld!
penrose_sphere_b4 = {
	entity = "penrose_sphere_ring_entity"
	construction_entity = "giga_ringworld_seam_entity_01_full_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { penrose_sphere_b3 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = { alloys = 20000 influence = 300 }
		upkeep = { alloys = 10 }
		produces = { energy = 600 }
	}

	potential = { 
		NOT = { has_global_flag = penrose_sphere_disabled } 
		is_giga_one_planet_origin = no
	}
	possible = { from = { has_technology = giga_tech_penrose_sphere_3 } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.1205 } }	# Notification
		fromfrom.planet = {
			change_pc = pc_black_hole_giga
		}
		spawn_megastructure = {
			name = "Penrose Segment"
			type = "gigablackhole_ring_world_2"
			orbit_angle = 0
			orbit_distance = 45
			owner = from
			graphical_culture = fromfrom
		}
		spawn_megastructure = {
			name = "Penrose Segment"
			type = "gigablackhole_ring_world_2"
			orbit_angle = 180
			orbit_distance = 45
			owner = from
			graphical_culture = fromfrom
		}
	}
}

gigablackhole_ring_world_2 = {
	entity = "penrose_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_desc = hide
	potential = { always = no }
	resources = { category = giga_megastructures }
	
	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
}

gigablackhole_ring_world_3 = {
	entity = "penrose_sphere_ringworld_01_entity"
	construction_entity = "penrose_sphere_ringworld_01_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { gigablackhole_ring_world_2 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_megastructures
		cost = { alloys = 40000 }
	}

	potential = { NOT = { has_global_flag = penrose_sphere_disabled } }
	possible = { from = { has_technology = giga_tech_penrose_sphere_3 } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.1206 }				# Notification
			set_country_flag = has_built_or_repaired_gigastructure	# Triggers Gigastructural Constructs
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_82
					}
				}
				set_country_flag = giga_achievement_82
				set_timed_country_flag = { flag = giga_achievement_82_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
		spawn_planet = {
			class = "pc_giga_penrose_habitable"
			location = fromfrom
			init_effect = {
				set_planet_entity = { graphical_culture = from }
				set_surveyed = { surveyed = yes surveyor = from }
				set_all_comms_surveyed = yes
				trigger_megastructure_icon = yes
				save_event_target_as = penrose_section
				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = megastructure
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_penrose

				giga_start_ai_colony_if_safe = yes
			}
		}
		# Name the segments
		if = {		limit = { NOT = { has_star_flag = giga_penrose_1 } } set_star_flag = giga_penrose_1 event_target:penrose_section = { set_name = "Penrose Segment A" } }
		else_if = {	limit = { NOT = { has_star_flag = giga_penrose_2 } } set_star_flag = giga_penrose_2 event_target:penrose_section = { set_name = "Penrose Segment B" } }
		remove_megastructure = fromfrom
	}
}