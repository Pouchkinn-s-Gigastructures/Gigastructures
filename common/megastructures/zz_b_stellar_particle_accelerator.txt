### DEPRECATED ### NEEDS TO BE CHANGED TO ADVANCED ORBITAL POST 3.12

# particle_accelerator_0 = {
# 	entity = "giga_consite_7_7_entity"
# 	construction_entity = "giga_consite_7_7_entity"
# 	# construction_blocks_and_blocked_by = none # BLOCKING TEST
# 	portrait = "GFX_megastructure_construction_background"
# 	place_entity_on_planet_plane = no
# 	prerequisites = { giga_tech_particle_accelerator }

# 	build_time = 1800
# 	resources = {
# 		category = giga_kilostructures
# 		cost = {
# 			alloys = 5000
# 			unity = @giga_kilo_unity_cost
# 		}
# 		upkeep = { energy = 5 }
# 	}

# 	potential = {
# 		has_technology = giga_tech_particle_accelerator
# 		NOT = { has_global_flag = accelerator_disabled }
# 		OR = {
# 			check_variable = { which = giga_accelerator_cap value = 0 }						# No Cap
# 			check_variable = { which = giga_current_accelerator value < giga_accelerator_cap }
# 		}
# 	}

# 	possible = {
# 		custom_tooltip = { fail_text = "requires_inside_border"				is_inside_border = from }
# 		custom_tooltip = { fail_text = "requires_surveyed_system"			giga_system_is_surveyed = yes }
# 		custom_tooltip = { fail_text = "requires_no_existing_accelerator"	giga_has_particle_accelerator = no }
# 		custom_tooltip = {
# 			fail_text = "requires_not_capped"
# 			from = {
# 				OR = {
# 					check_variable = { which = giga_accelerator_cap value = 0 }						# No Cap
# 					check_variable = { which = giga_current_accelerator value < giga_accelerator_cap }
# 				}
# 			}
# 		}
# 	}

# 	placement_rules = {
# 		planet_possible = {
# 			custom_tooltip = { fail_text = "requires_no_existing_megastructure"		planet_has_no_megastructure = yes }
# 			custom_tooltip = { fail_text = "must_build_around_star"					is_star = yes }
# 			custom_tooltip = { fail_text = "requires_no_anomaly"					has_anomaly = no }
# 			custom_tooltip = { fail_text = "requires_standard_planet_class"			giga_is_standard_star = yes }
# 		}
# 	}

# 	ai_weight = {
# 		# weight = 100	# Default = 100

# 		# # Can we afford the upkeep
# 		# modifier = { factor = 1.00	chk_afford_energy_10 = yes }
# 		# modifier = { factor = 0.90	chk_afford_energy_09 = yes }
# 		# modifier = { factor = 0.80	chk_afford_energy_08 = yes }
# 		# modifier = { factor = 0.70	chk_afford_energy_07 = yes }
# 		# modifier = { factor = 0.60	chk_afford_energy_06 = yes }
# 		# modifier = { factor = 0.50	chk_afford_energy_05 = yes }
# 		# modifier = { factor = 0.40	chk_afford_energy_04 = yes }
# 		# modifier = { factor = 0.30	chk_afford_energy_03 = yes }
# 		# modifier = { factor = 0.20	chk_afford_energy_25 = yes }
# 		# modifier = { factor = 0.10	chk_afford_energy_02 = yes }
# 		# modifier = { factor = 0.00	chk_afford_energy_15 = yes }

# 		# # Do we want the production
# 		# modifier = { factor = 3.75	chk_needs_physics_10 = yes }
# 		# modifier = { factor = 3.50	chk_needs_physics_09 = yes }
# 		# modifier = { factor = 3.25	chk_needs_physics_08 = yes }
# 		# modifier = { factor = 3.00	chk_needs_physics_07 = yes }
# 		# modifier = { factor = 2.75	chk_needs_physics_06 = yes }
# 		# modifier = { factor = 2.50	chk_needs_physics_05 = yes }
# 		# modifier = { factor = 2.25	chk_needs_physics_04 = yes }
# 		# modifier = { factor = 2.00	chk_needs_physics_03 = yes }
# 		# modifier = { factor = 1.75	chk_needs_physics_25 = yes }
# 		# modifier = { factor = 1.50	chk_needs_physics_02 = yes }
# 		# modifier = { factor = 1.25	chk_needs_physics_15 = yes }

# 		# # Is this system a good location?
# 		# modifier = { factor = 0.5	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }

# 		# # Do we lean towards this from federation/ethic/civic?
# 		# modifier = { factor = 2.00	from = { has_federation = yes federation = { has_federation_type = research_federation } } }
# 		# modifier = { factor = 2.00	from = { has_ethic = ethic_fanatic_materialist } }
# 		# modifier = { factor = 1.50	from = { has_ethic = ethic_materialist } }
# 		# modifier = { factor = 1.25	from = { has_civic = civic_technocracy } }

# 		# # How many of this megastructure can the AI build?
# 		# modifier = { factor = 0.00 from = { has_country_flag = has_recently_built_particle_accelerator } }
# 		# modifier = { factor = 0.00 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = particle_accelerator_1 is_megastructure_type = particle_accelerator_restored } } count > 5 } } }
# 		# modifier = { factor = 0.15 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = particle_accelerator_1 is_megastructure_type = particle_accelerator_restored } } count = 5 } } }
# 		# modifier = { factor = 0.30 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = particle_accelerator_1 is_megastructure_type = particle_accelerator_restored } } count = 4 } } }
# 		# modifier = { factor = 0.45 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = particle_accelerator_1 is_megastructure_type = particle_accelerator_restored } } count = 3 } } }
# 		# modifier = { factor = 0.60 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = particle_accelerator_1 is_megastructure_type = particle_accelerator_restored } } count = 2 } } }
# 		# modifier = { factor = 0.75 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = particle_accelerator_1 is_megastructure_type = particle_accelerator_restored } } count = 1 } } }
# 		# modifier = {
# 		# 	factor = 0
# 		# 	from = {
# 		# 		OR = {
# 		# 			has_megastructure = particle_accelerator_0
# 		# 			has_megastructure = particle_accelerator_ruined
# 		# 		}
# 		# 	}
# 		# }

# 		weight = value:giga_ai_base_kilo

# 		mult = value:giga_ai_science_mult
# 		mult = value:giga_ai_upkeep|RESOURCE|energy|AMOUNT|25|
# 		mult = value:giga_ai_core_territory
# 		mult = value:giga_ai_unlock_low_priority
# 		mult = value:giga_ai_build_low_priority
# 		mult = value:giga_ai_prevent_spam|MEGA|particle_accelerator|
# 		mult = value:giga_ai_materialist_plus
# 		mult = value:giga_ai_no_colony

# 		modifier = { factor = 2.00	from = { has_federation = yes federation = { has_federation_type = research_federation } } }
# 	}

# 	on_build_complete = {
# 		save_event_target_as = giga_system
# 		fromfrom.planet = {
# 			save_event_target_as = giga_planet
# 			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
# 			giga_set_has_mega_flag = yes
# 		}
# 		from = {
# 			set_timed_country_flag = { flag = has_recently_built_particle_accelerator years = 20 }
# 			country_event = { id = giga_dialog.1801 }	# Notification
# 			change_variable = { which = giga_current_accelerator value = 1 }
# 		}
# 	}
# }

# particle_accelerator_1 = {
# 	entity = "particle_accelerator_1"
# 	construction_entity = "particle_accelerator_1"
# 	portrait = "GFX_megastructure_physics_research"
# 	upgrade_from = { particle_accelerator_0 }

# 	country_modifier = { ship_shield_mult = 0.025 }

# 	build_time = 1800
# 	resources = {
# 		category = giga_kilostructures
# 		cost = { alloys = 5000 unity = @giga_kilo_unity_cost }
# 		# upkeep
# 		# off
# 		upkeep = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = { check_variable = { which = acc_intensity value = 1 } }
# 			}
# 			#energy = 0
# 		}
# 		# default
# 		upkeep = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = { check_variable = { which = acc_intensity value = 2 } }
# 			}
# 			energy = 25
# 			alloys = 5
# 		}
# 		# +40%
# 		upkeep = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = { check_variable = { which = acc_intensity value = 3 } }
# 			}
# 			energy = 35
# 			alloys = 7
# 		}
# 		# +100%
# 		upkeep = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = { check_variable = { which = acc_intensity value = 4 } }
# 			}
# 			energy = 50
# 			alloys = 10
# 		}
# 		# +200%
# 		upkeep = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = { check_variable = { which = acc_intensity value = 5 } }
# 			}
# 			energy = 75
# 			alloys = 15
# 		}
# 		#Physics
# 		# off
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 1 }
# 				}
# 			}
# 			#physics_research = 0
# 		}
# 		# default
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 2 }
# 					check_variable = { which = acc_spec value = 1 }
# 				}
# 			}
# 			physics_research = 150
# 		}
# 		# +25%
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 3 }
# 					check_variable = { which = acc_spec value = 1 }
# 				}
# 			}
# 			physics_research = 190
# 		}
# 		# +50%
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 4 }
# 					check_variable = { which = acc_spec value = 1 }
# 				}
# 			}
# 			physics_research = 225
# 		}
# 		# +75%
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 5 }
# 					check_variable = { which = acc_spec value = 1 }
# 				}
# 			}
# 			physics_research = 265
# 		}
# 		#DM
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 2 }
# 					check_variable = { which = acc_spec value = 2 }
# 				}
# 			}
# 			physics_research = 100
# 			sr_dark_matter = 1
# 		}
# 		# +25%
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 3 }
# 					check_variable = { which = acc_spec value = 2 }
# 				}
# 			}
# 			physics_research = 125
# 			sr_dark_matter = 1.25
# 		}
# 		# +50%
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 4 }
# 					check_variable = { which = acc_spec value = 2 }
# 				}
# 			}
# 			physics_research = 150
# 			sr_dark_matter = 1.5
# 		}
# 		# +75%
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 5 }
# 					check_variable = { which = acc_spec value = 2 }
# 				}
# 			}
# 			physics_research = 175
# 			sr_dark_matter = 1.75
# 		}
# 		#QNM
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 2 }
# 					check_variable = { which = acc_spec value = 3 }
# 				}
# 			}
# 			physics_research = 80
# 			ehof_sr_negative_mass = 0.7
# 		}
# 		# +25%
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 3 }
# 					check_variable = { which = acc_spec value = 3 }
# 				}
# 			}
# 			physics_research = 100
# 			ehof_sr_negative_mass = 0.85
# 		}
# 		# +50%
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 4 }
# 					check_variable = { which = acc_spec value = 3 }
# 				}
# 			}
# 			physics_research = 120
# 			ehof_sr_negative_mass = 1.05
# 		}
# 		# +75%
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 5 }
# 					check_variable = { which = acc_spec value = 3 }
# 				}
# 			}
# 			physics_research = 140
# 			ehof_sr_negative_mass = 1.225
# 		}
# 		# fallback (actual off button is intensity 1...)
# 		produces = {
# 			trigger = {
# 				NOT = { is_scope_type = country }
# 				planet = {
# 					check_variable = { which = acc_intensity value = 0 }
# 				}
# 			}
# 		}

# 		#Default values to display on megabuild tooltip
# 		upkeep = {
# 			trigger = {
# 				is_scope_type = country
# 			}
# 			energy = 25
# 			alloys = 5
# 		}
# 		produces = {
# 			trigger = {
# 				is_scope_type = country
# 			}
# 			physics_research = 150
# 		}
# 	}

# 	potential = { NOT = { has_global_flag = accelerator_disabled } }
# 	possible = { from = { has_technology = giga_tech_particle_accelerator } }

# 	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
# 	on_build_complete = {
# 		save_event_target_as = giga_system
# 		fromfrom.planet = {
# 			save_event_target_as = giga_planet
# 			if = {
# 				limit = { NOT = { has_global_flag = managing_giga_megastructure } }
# 				set_variable = {
# 					which = acc_intensity
# 					value = 2
# 				}
# 				set_variable = {
# 					which = acc_spec
# 					value = 1
# 				}
# 				set_variable = {
# 					which = giga_failure_chance
# 					value = 0
# 				}
# 			}
# 		}
# 		from = {
# 			if = {
# 				limit = { NOT = { has_country_flag = giga_repaired_mega_no_dialog } }
# 				country_event = { id = giga_dialog.1802 }				# Notification
# 			}
# 			if = {
# 				limit = { has_country_flag = giga_repaired_mega_no_dialog }
# 				remove_country_flag = giga_repaired_mega_no_dialog
# 			}
# 			if = {
# 				limit = {
# 					NOR = {
# 						has_global_flag = giga_achievements_disabled
# 						has_country_flag = giga_achievement_53
# 					}
# 				}
# 				set_country_flag = giga_achievement_53
# 				set_timed_country_flag = { flag = giga_achievement_53_notification days = 30 }
# 				giga_achievement_sound = yes
# 			}
# 		}
# 	}
# }

# particle_accelerator_1_manage = {
# 	entity = ""
# 	portrait = "GFX_megastructure_physics_research"
# 	upgrade_from = { particle_accelerator_1 }

# 	build_time = 0
# 	resources = { category = giga_kilostructures }
# 	# construction_blocks_and_blocked_by = none # BLOCKING TEST

# 	potential = {
# 		NOR = {
# 			has_global_flag = accelerator_disabled
# 			has_global_flag = managing_giga_megastructure
# 		}
# 		is_ai = no
# 		#always = no
# 	}
# 	possible = { from = { has_technology = giga_tech_particle_accelerator } }

# 	on_build_complete = {
# 		from = { set_country_flag = giga_repaired_mega_no_dialog }
# 		set_global_flag = managing_giga_megastructure
# 		# fallback for associated planet object missing
# 		if = {
# 			limit = { NOT = { exists = fromfrom.planet } }
# 			star = {
# 				save_global_event_target_as = giga_mega_manage_planet
# 			}
# 		}
# 		else = {
# 			fromfrom.planet = { save_global_event_target_as = giga_mega_manage_planet }
# 		}
# 		event_target:giga_mega_manage_planet = {
# 			if = {
# 				limit = {
# 					check_variable = {
# 						which = acc_intensity
# 						value = 0
# 					}
# 				}
# 				set_variable = {
# 					which = acc_intensity
# 					value = 2
# 				}
# 			}
# 			if = {
# 				limit = {
# 					check_variable = {
# 						which = acc_spec
# 						value = 0
# 					}
# 				}
# 				set_variable = {
# 					which = acc_spec
# 					value = 1
# 				}
# 			}
# 			solar_system = {
# 				spawn_megastructure = {
# 					type = particle_accelerator_1
# 					planet = event_target:giga_mega_manage_planet
# 					owner = space_owner
# 				}
# 			}
# 		}
# 		remove_global_flag = managing_giga_megastructure
# 		from = {
# 			country_event = { id = giga_accelerator.1000 }
# 			remove_country_flag = giga_repaired_mega_no_dialog
# 		}
# 		set_global_flag = managing_giga_megastructure
# 		remove_megastructure = fromfrom
# 	}
# }

# # particle_accelerator_1_dismantle = {
	
# # }

# #Ruined
# particle_accelerator_ruined = {
# 	entity = "ruined_particle_accelerator_1"
# 	portrait = "GFX_megastructure_construction_background"
# 	potential = { always = no }
# 	resources = { category = giga_kilostructures }
# }

# #Restored
# particle_accelerator_restored = {
# 	entity = "particle_accelerator_1"
# 	construction_entity = "particle_accelerator_1"
# 	portrait = "GFX_megastructure_physics_research"
# 	upgrade_from = { particle_accelerator_ruined }

# 	build_time = 1800
# 	resources = {
# 		category = giga_kilostructures
# 		cost = { alloys = 5000 unity = @giga_kilo_repair_unity_cost }
# 		upkeep = {
# 			energy = 25
# 			alloys = 5
# 		}
# 		produces = { physics_research = 150 }
# 	}

# 	potential = { NOT = { has_global_flag = accelerator_disabled } }
# 	possible = {
# 		exists = from
# 		from = { has_technology = giga_tech_particle_accelerator }
# 	}

# 	ai_weight = { factor = value:giga_ai_base_repairs } # If we can build it, we will build it
# 	on_build_complete = {
# 		from = { set_country_flag = giga_repaired_mega_no_dialog }
# 		set_global_flag = managing_giga_megastructure
# 		# fallback for associated planet object missing
# 		if = {
# 			limit = { NOT = { exists = fromfrom.planet } }
# 			star = {
# 				save_global_event_target_as = giga_mega_manage_planet
# 			}
# 		}
# 		else = {
# 			fromfrom.planet = { save_global_event_target_as = giga_mega_manage_planet }
# 		}
# 		event_target:giga_mega_manage_planet = {
# 			set_variable = {
# 				which = acc_intensity
# 				value = 2
# 			}
# 			set_variable = {
# 				which = acc_spec
# 				value = 1
# 			}
# 			set_variable = {
# 				which = giga_failure_chance
# 				value = 0
# 			}
# 			solar_system = {
# 				spawn_megastructure = {
# 					type = particle_accelerator_1
# 					planet = event_target:giga_mega_manage_planet
# 					owner = space_owner
# 				}
# 			}
# 		}
# 		remove_global_flag = managing_giga_megastructure
# 		from = {
# 			country_event = { id = giga_dialog.1804 }
# 			remove_country_flag = giga_repaired_mega_no_dialog
# 		}
# 		#set_global_flag = managing_giga_megastructure
# 		remove_megastructure = fromfrom
# 	}
# }