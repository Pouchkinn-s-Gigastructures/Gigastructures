matter_decompressor_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = no
	scale_offset = yes
	prerequisites = { "tech_matter_decompressor" }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 1800
	resources = {
		category = giga_matter_decompressor
		cost = {
			alloys = 5000
			unity = @giga_big_mega_start_unity_cost
		}
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|5000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@giga_big_mega_start_unity_cost| }
		upkeep = { energy = 5 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = 5000 }
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @giga_big_mega_start_unity_cost }
	}
	on_build_cancel = {
		giga_ai_savings_refund = { CATEGORY = important RESOURCE = alloys }
		giga_ai_savings_refund = { CATEGORY = important RESOURCE = unity }
	}

	potential = {
		NOT = { has_global_flag = vanilla_matter_disabled }
		has_gw_matter_decompressor = yes
		OR = {
			check_variable = { which = giga_vanilla_matter_cap value = 0 }						# No Cap
			check_variable = { which = giga_current_vanilla_matter value < giga_vanilla_matter_cap }
		}
	}

	possible = {
		hidden_trigger = {
			exists = starbase
		}
		custom_tooltip = { fail_text = "requires_inside_border"						is_inside_border = from }
		custom_tooltip = { fail_text = "requires_surveyed_system"					giga_system_is_surveyed = yes }
		custom_tooltip = { fail_text = "requires_no_habitable_planets"				giga_any_hab_planets = no }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_vanilla_matter_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_vanilla_matter value < giga_vanilla_matter_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "must_build_around_star"					is_star = yes }
			custom_tooltip = { fail_text = "requires_no_existing_megastructure"		planet_has_no_megastructure = yes }
			custom_tooltip = { fail_text = "requires_no_anomaly"					has_anomaly = no }
			custom_tooltip = { fail_text = "must_build_around_black_hole"			giga_black_hole = yes }
		}
	}

	ai_weight = {
		# weight = 100	# Default = 100

		# # Can we afford the upkeep
		# modifier = { factor = 1.00	chk_afford_energy_10 = yes }
		# modifier = { factor = 0.90	chk_afford_energy_09 = yes }
		# modifier = { factor = 0.80	chk_afford_energy_08 = yes }
		# modifier = { factor = 0.70	chk_afford_energy_07 = yes }
		# modifier = { factor = 0.60	chk_afford_energy_06 = yes }
		# modifier = { factor = 0.50	chk_afford_energy_05 = yes }
		# modifier = { factor = 0.40	chk_afford_energy_04 = yes }
		# modifier = { factor = 0.30	chk_afford_energy_03 = yes }
		# modifier = { factor = 0.20	chk_afford_energy_25 = yes }
		# modifier = { factor = 0.10	chk_afford_energy_02 = yes }
		# modifier = { factor = 0.00	chk_afford_energy_15 = yes }

		# # Do we want the production
		# modifier = { factor = 3.75	chk_needs_minerals_10 = yes }
		# modifier = { factor = 3.50	chk_needs_minerals_09 = yes }
		# modifier = { factor = 3.25	chk_needs_minerals_08 = yes }
		# modifier = { factor = 3.00	chk_needs_minerals_07 = yes }
		# modifier = { factor = 2.75	chk_needs_minerals_06 = yes }
		# modifier = { factor = 2.50	chk_needs_minerals_05 = yes }
		# modifier = { factor = 2.25	chk_needs_minerals_04 = yes }
		# modifier = { factor = 2.00	chk_needs_minerals_03 = yes }
		# modifier = { factor = 1.75	chk_needs_minerals_25 = yes }
		# modifier = { factor = 1.50	chk_needs_minerals_02 = yes }
		# modifier = { factor = 1.25	chk_needs_minerals_15 = yes }

		# # Is this system a good location?
		# modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		# modifier = { factor = 0.5	any_neighbor_system = { any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } } }

		# # Do we lean towards this from federation/ethic/civic?

		# # How many of this megastructure can the AI build?
		# modifier = { factor = 0.00 from = { has_country_flag = has_recently_built_matter_decompressor } }
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		OR = {
		# 			has_megastructure = matter_decompressor_0
		# 			has_megastructure = matter_decompressor_1
		# 			has_megastructure = matter_decompressor_2
		# 			has_megastructure = matter_decompressor_3
		# 			has_megastructure = matter_decompressor_ruined
		# 		}
		# 	}
		# }

		weight = value:giga_ai_base_mega

		mult = value:giga_ai_upkeep|RESOURCE|energy|AMOUNT|100|
		mult = value:giga_ai_output|RESOURCE|minerals|AMOUNT|2000|
		mult = value:giga_ai_unlocks_gigastructures
		mult = value:giga_ai_core_territory
		mult = value:giga_ai_weight_savings|CATEGORY|important|RESOURCE|alloys|AMOUNT|55000|
		mult = value:giga_ai_prevent_spam|MEGA|matter_decompressor|
	}

	on_build_complete = {
		from = {
			set_timed_country_flag = { flag = has_recently_built_matter_decompressor years = 20 }
			set_country_flag = built_matter_decompressor_site
			change_variable = { which = giga_current_vanilla_matter value = 1 }
		}
		fromfrom.planet = {
			giga_set_has_mega_flag = yes
			if = { limit = { has_orbital_station = yes } orbital_station = { dismantle = yes } }
		}
	}
}

matter_decompressor_1 = {
	entity = "matter_decompressor_stage_1_entity"
	construction_entity = "matter_decompressor_stage_1_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = yes
	scale_offset = yes
	place_entity_on_planet_plane = no
	upgrade_from = { matter_decompressor_0 }
	prerequisites = { "tech_matter_decompressor" }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_megastructures
		cost = { alloys = 12500 unity = @giga_big_mega_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|12500| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@giga_big_mega_unity_cost| }
		produces = { minerals = 500 }
		upkeep = { energy = 25 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = 12500 }
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @giga_big_mega_unity_cost }
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = { from = { country_event = { id = mega.9010 } } }
}

matter_decompressor_2 = {
	entity = "matter_decompressor_stage_2_entity"
	construction_entity = "matter_decompressor_stage_2_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = yes
	scale_offset = yes
	place_entity_on_planet_plane = no
	upgrade_from = { matter_decompressor_1 }
	prerequisites = { "tech_matter_decompressor" }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_megastructures
		cost = { alloys = 12500 unity = @giga_big_mega_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|12500| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@giga_big_mega_unity_cost| }
		produces = { minerals = 1000 }
		upkeep = { energy = 50 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = 12500 }
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @giga_big_mega_unity_cost }
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = { from = { country_event = { id = mega.9011 } } }
}

matter_decompressor_3 = {
	entity = "matter_decompressor_stage_3_entity"
	construction_entity = "matter_decompressor_stage_3_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = yes
	scale_offset = yes
	place_entity_on_planet_plane = no
	build_time = 3600
	upgrade_from = { matter_decompressor_2 }
	prerequisites = { "tech_matter_decompressor" }

	resources = {
		category = giga_megastructures
		cost = { alloys = 12500 unity = @giga_big_mega_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|12500| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@giga_big_mega_unity_cost| }
		produces = { minerals = 1500 }
		upkeep = { energy = 75 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = 12500 }
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @giga_big_mega_unity_cost }
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = { from = { country_event = { id = mega.9012 } } }
}

matter_decompressor_4 = {
	entity = "matter_decompressor_stage_4_entity"
	construction_entity = "matter_decompressor_stage_4_construction_entity"
	portrait = "GFX_megastructure_matter_decompressor_background"
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = yes
	scale_offset = yes
	place_entity_on_planet_plane = no
	upgrade_from = { matter_decompressor_3 }
	prerequisites = { "tech_matter_decompressor" }
	show_prereqs = yes

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_megastructures
		cost = { alloys = 12500 unity = @giga_big_mega_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|12500| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@giga_big_mega_unity_cost| }
		produces = { minerals = 2000 }
		upkeep = { energy = 100 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = 12500 }
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @giga_big_mega_unity_cost }
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		set_star_flag = matter_decompressor_built
		from = {
			set_country_flag = has_built_or_repaired_megastructure
			set_country_flag = has_built_or_repaired_gigastructure	# Triggers Gigastructural Constructs
			country_event = { id = mega.9013 }
		}
	}
}

# Ruined Matter Decompressor
matter_decompressor_ruined = {
	entity = "matter_decompressor_destroyed_01_entity"
	construction_entity = "matter_decompressor_stage_4_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = yes
	scale_offset = yes
	place_entity_on_planet_plane = no
	potential = { always = no }
	resources = { category = giga_megastructures }
	
	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
}

# Restored Matter Decompressor
matter_decompressor_restored = {
	entity = "matter_decompressor_stage_4_entity"
	construction_entity = "matter_decompressor_stage_4_construction_entity"
	portrait = "GFX_megastructure_matter_decompressor_background"
	entity_offset = { x = -20 y = -20 }
	rotate_to_center = yes
	scale_offset = yes
	place_entity_on_planet_plane = no
	upgrade_from = { matter_decompressor_ruined }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 4800
	resources = {
		category = giga_megastructures
		cost = { alloys = 20000 unity = @giga_big_mega_repair_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|alloys|AMOUNT|20000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|important|RESOURCE|unity|AMOUNT|@giga_big_mega_repair_unity_cost| }
		produces = { minerals = 2000 }
		upkeep = { energy = 100 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = alloys AMOUNT = 20000 }
		giga_ai_savings_withdraw = { CATEGORY = important RESOURCE = unity  AMOUNT = @giga_big_mega_repair_unity_cost }
		fromfrom = { set_graphical_culture = root.from }
	}

	possible = {
		exists = from
		from = { has_technology = tech_mega_engineering }
	}

	ai_weight = { factor = value:giga_ai_base_repairs } # If we can build it, we will build it
	on_build_complete = {
		giga_remove_system_debris = yes
		set_star_flag = matter_decompressor_built
		from = {
			set_country_flag = has_built_or_repaired_megastructure
			set_country_flag = has_built_or_repaired_gigastructure	# Triggers Gigastructural Constructs
			country_event = { id = mega.9101 }
		}
		fromfrom.planet = {
			giga_set_has_mega_flag = yes
		}
	}
}