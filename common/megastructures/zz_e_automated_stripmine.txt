automated_stripmine_0 = {
	entity = "giga_consite_5_5_entity"
	construction_entity = "giga_consite_5_5_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_automated_stripmine_2 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 1800
	resources = {
		category = giga_megastructures
		cost = {
			alloys = 3500
			unity = @giga_small_mega_unity_cost
		}
		upkeep = { energy = 5 }
	}

	potential = {
		has_technology = giga_tech_automated_stripmine_2
		NOT = { has_global_flag = drill_disabled }
		OR = {
			check_variable = { which = giga_drill_cap value = 0 }						# No Cap
			check_variable = { which = giga_current_drill value < giga_drill_cap }
		}
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"		is_inside_border = from }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_drill_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_drill value < giga_drill_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
			custom_tooltip = { fail_text = "requires_no_existing_megastructure"	planet_has_no_megastructure = yes }
			custom_tooltip = { fail_text = "requires_no_crisis_planet"			NOT = { has_planet_flag = crisis_vital_planet } }
			custom_tooltip = { fail_text = "already_stripmined"					NOR = { has_planet_flag = stripminedplanet is_planet_class = pc_core_mined } }
			custom_tooltip = { fail_text = "requires_not_minor_planetary_body"	is_asteroid = no is_moon = no }
			custom_tooltip = { fail_text = "requires_not_star"					is_star = no }
			custom_tooltip = {
				fail_text = "requires_not_astral_scar"
				is_astral_scar = no
			}
			custom_tooltip = {
				fail_text = "cant_build_around_gas"
				NOR = {
					is_planet_class = pc_shrouded
					giga_is_gas_giant = yes
					giga_brown_dwarf = yes
				}
			}
			hidden_trigger = {
				or = {
					is_colonizable = no
					and = {
						from = { is_ai = no }
					}
				}
			}
		}
	}

	ai_weight = {
		# weight = 100	# Default = 100

		# # Can we afford the upkeep
		# modifier = { factor = 1.00	chk_afford_energy_10 = yes }
		# modifier = { factor = 0.90	chk_afford_energy_09 = yes }
		# modifier = { factor = 0.80	chk_afford_energy_08 = yes }
		# modifier = { factor = 0.70	chk_afford_energy_07 = yes }
		# modifier = { factor = 0.60	chk_afford_energy_06 = yes }
		# modifier = { factor = 0.50	chk_afford_energy_05 = yes }
		# modifier = { factor = 0.40	chk_afford_energy_04 = yes }
		# modifier = { factor = 0.30	chk_afford_energy_03 = yes }
		# modifier = { factor = 0.20	chk_afford_energy_25 = yes }
		# modifier = { factor = 0.10	chk_afford_energy_02 = yes }
		# modifier = { factor = 0.00	chk_afford_energy_15 = yes }

		# # Do we want the production
		# modifier = { factor = 3.75	chk_needs_minerals_10 = yes }
		# modifier = { factor = 3.50	chk_needs_minerals_09 = yes }
		# modifier = { factor = 3.25	chk_needs_minerals_08 = yes }
		# modifier = { factor = 3.00	chk_needs_minerals_07 = yes }
		# modifier = { factor = 2.75	chk_needs_minerals_06 = yes }
		# modifier = { factor = 2.50	chk_needs_minerals_05 = yes }
		# modifier = { factor = 2.25	chk_needs_minerals_04 = yes }
		# modifier = { factor = 2.00	chk_needs_minerals_03 = yes }
		# modifier = { factor = 1.75	chk_needs_minerals_25 = yes }
		# modifier = { factor = 1.50	chk_needs_minerals_02 = yes }
		# modifier = { factor = 1.25	chk_needs_minerals_15 = yes }

		# # Is this system a good location?
		# modifier = { factor = 0.5	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		# modifier = { factor = 2.50	fromfrom.planet = { planet_size > 25 } }
		# modifier = { factor = 2.00	fromfrom.planet = { planet_size <= 25 planet_size > 20 } }
		# modifier = { factor = 1.50	fromfrom.planet = { planet_size <= 20 planet_size > 15 } }
		# modifier = { factor = 0.66	fromfrom.planet = { planet_size <= 15 planet_size > 10 } }
		# modifier = { factor = 0.33	fromfrom.planet = { planet_size <= 10 planet_size > 5 } }
		# modifier = { factor = 0.00	fromfrom.planet = { planet_size <= 5 } }

		# # Do we lean towards this from federation/ethic/civic?

		# # How many of this megastructure can the AI build?
		# modifier = { factor = 0.00 from = { has_country_flag = has_recently_built_automated_stripmine } }
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		OR = {
		# 			has_megastructure = automated_stripmine_0
		# 			has_megastructure = automated_stripmine_1
		# 		}
		# 	}
		# }

		weight = value:giga_ai_base_mega

		mult = value:giga_ai_upkeep|RESOURCE|energy|AMOUNT|75|
		mult = value:giga_ai_output|RESOURCE|minerals|AMOUNT|250|
		mult = value:giga_ai_prevent_spam|MEGA|automated_stripmine|
		mult = value:giga_ai_build_low_priority
		mult = value:giga_ai_unlock_low_priority
		mult = value:giga_ai_cap_availability_boost
	}

	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			set_timed_country_flag = { flag = has_recently_built_automated_stripmine years = 20 }
			country_event = { id = giga_dialog.3301 }	# Notification
			change_variable = { which = giga_current_drill value = 1 }
		}
		fromfrom.planet = {
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			giga_set_has_mega_flag = yes
		}
	}
}

# automated_stripmine_1 = {
# 	entity = "automated_stripmine_01_rotation_ni_entity"
# 	construction_entity = "automated_stripmine_01_rotation_ni_entity"
# 	portrait = "GFX_megastructure_barren"
# 	upgrade_from = { automated_stripmine_0 }
# 	scales_with_planet = yes
# 	build_time = 1800
# 	resources = {
# 		category = giga_megastructures
# 		cost = { alloys = 3000 unity = @giga_small_mega_unity_cost }
# 		upkeep = {
# 			alloys = 25
# 			energy = 5
# 		}
# 	}

# 	potential = { NOT = { has_global_flag = drill_disabled } }
# 	possible = { from = { has_technology = giga_tech_automated_stripmine_2 } }

# 	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
# 	on_build_complete = {
# 		save_event_target_as = giga_system
# 		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
# 		from = { country_event = { id = giga_dialog.3302 } }	# Notification
# 	}
# }

automated_stripmine_1 = {
	entity = "automated_stripmine_01_rotation_i_entity"
	construction_entity = "automated_stripmine_01_rotation_ni_entity" #add animation on main drill for active entity
	portrait = "GFX_megastructure_barren"
	upgrade_from = { automated_stripmine_0 }
	scales_with_planet = yes
	
	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_megastructures
		cost = { alloys = 7500 unity = @giga_mega_unity_cost }
		#Defaults
		produces = { trigger = { NOT = { is_scope_type = megastructure } } minerals = 250 } #If the planet doesn't exist the mega hasn't been built in all likelihood
		upkeep = { trigger = { NOT = { is_scope_type = megastructure } } energy = 75 }

		upkeep = { energy = 75 multiplier = value:giga_stripmine_speed_manage }
		produces = { trigger = { is_scope_type = megastructure } minerals = 1 multiplier = value:giga_stripmine_mineral_output_final }
		produces = { trigger = { is_scope_type = megastructure } alloys = 1 multiplier = value:giga_stripmine_alloy_output }
		produces = { trigger = { is_scope_type = megastructure } exotic_gases = 1 multiplier = value:giga_stripmine_sr_exotic_gases_output }
		produces = { trigger = { is_scope_type = megastructure } rare_crystals = 1 multiplier = value:giga_stripmine_sr_rare_crystals_output }
		produces = { trigger = { is_scope_type = megastructure } volatile_motes = 1 multiplier = value:giga_stripmine_sr_volatile_motes_output }
		produces = { trigger = { has_global_flag = @giga_amb_flag is_scope_type = megastructure } giga_sr_amb_megaconstruction = 1 multiplier = value:giga_stripmine_sr_amb_output }
		produces = { trigger = { has_ancrel = yes is_scope_type = megastructure planet = { exists = archaeological_site } exists = this } minor_artifacts = 1 multiplier = value:giga_stripmine_minor_artifacts_output }
		produces = { trigger = { is_scope_type = megastructure } food = 1 multiplier = value:giga_stripmine_food_output } # 1/6 of whatever the mineral output is 
	}

	potential = { NOT = { has_global_flag = drill_disabled } }
	possible = { from = { has_technology = giga_tech_automated_stripmine_2 } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_start = {
		fromfrom = {
			save_event_target_as = giga_stripmine
			giga_set_stripmine_info = yes
		}
	}
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = {
			save_event_target_as = giga_planet
		}
		from = { 
			save_event_target_as = giga_stripmine_builder
		}
		fromfrom = {
			save_event_target_as = giga_stripmine
			giga_set_stripmine_info = yes
			giga_stripmine_colony_destruction = yes
		}
		from = {
			country_event = { id = giga_dialog.3303 }	# Notification
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_61
					}
				}
				set_country_flag = giga_achievement_61
				set_timed_country_flag = { flag = giga_achievement_61_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
		event_target:giga_global_situation_country = {
			start_situation = {
				type = giga_situation_stripmine
				target = fromfrom
				effect = {
					save_global_event_target_as = situation_of_stripmine_@target
					target = {
						set_megastructure_flag = stripmine_mega_of_@prev
					}					
				}
			}
		}
	}
}