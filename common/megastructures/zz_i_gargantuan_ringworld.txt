ringworld_gargantuan_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	prerequisites = { "giga_tech_ringworld_gargantuan_2" }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 7200
	resources = {
		category = giga_gigastructures
		cost = {
			alloys = 20000
			influence = 300
		}
		upkeep = { energy = 20 }
	}

	potential = {
		has_gigastructural_constructs = yes
		has_technology = giga_tech_ringworld_titanic_2
		has_technology = giga_tech_ringworld_behemoth
		has_technology = giga_tech_ringworld_gargantuan_2
		is_giga_one_planet_origin = no
		NOR = {
			has_global_flag = ring_gargantuan_disabled
			has_global_flag = ring_behemoth_disabled
			has_global_flag = ring_titanic_disabled
		}
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"				is_inside_border = from }
		custom_tooltip = { fail_text = "requires_surveyed_system"			giga_system_is_surveyed = yes }
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "must_build_around_star"			is_star = yes }
			custom_tooltip = { fail_text = "requires_no_anomaly"			has_anomaly = no }
			custom_tooltip = { fail_text = "requires_base_ringworld_two"	hidden:solar_system = { has_star_flag = ring_world_built_two } }
			custom_tooltip = { fail_text = "already_have_gar_ringworld"		hidden:solar_system = { NOT = { has_star_flag = ring_world_built_three } } }
		}
	}

	ai_weight = {
		# factor = value:giga_ai_base_repairs	# Default = 100

		# # Can we afford the upkeep

		# # Do we want the production

		# # Is this system a good location?

		# # Do we lean towards this from federation/ethic/civic?

		# # How many of this megastructure can the AI build?
		# modifier = { factor = 0.00	from = { has_country_flag = has_recently_built_gargantuan_ring } }
		# modifier = { factor = 0.00	from = { check_variable = { which = completed_g_ringworlds value > 1 } } }
		# modifier = { factor = 0.25	from = { check_variable = { which = completed_g_ringworlds value = 1 } } }
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		OR = {
		# 			has_country_flag = giga_started_ringworld
		# 			has_country_flag = giga_started_t_ringworld
		# 			has_country_flag = giga_started_b_ringworld
		# 			has_country_flag = giga_started_g_ringworld
		# 		}
		# 	}
		# }

		weight = value:giga_ai_base_giga

		mult = value:giga_ai_prevent_spam|MEGA|gargantuan_ring|
		mult = value:giga_ai_overpopulation_boost
		mult = value:giga_ai_unlocks_gigastructures
		mult = value:giga_ai_core_territory

		modifier = {
			factor = 0
			from = {
				OR = {
					has_country_flag = giga_started_ringworld
					has_country_flag = giga_started_t_ringworld
					has_country_flag = giga_started_b_ringworld
					has_country_flag = giga_started_g_ringworld
				}
			}
		}
	}

	on_build_complete = {
		save_event_target_as = giga_system
		set_star_flag = ring_world_built_three
		fromfrom.planet = {
			save_event_target_as = giga_planet
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			giga_set_has_mega_flag = yes
		}
		from = {
			set_timed_country_flag = { flag = has_recently_built_gargantuan_ring years = 20 }
			country_event = { id = giga_dialog.2301 }	# Notification
			set_country_flag = giga_started_g_ringworld
		}
		set_variable = { which = g_ring_segments value = 0 }
	}
}

ringworld_gargantuan_1 = {
	entity = ""
	construction_entity = "gargantuan_full_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { ringworld_gargantuan_0 }

	build_time = 19200
	resources = { category = giga_gigastructures
		cost = { alloys = 40000 }
	}

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	potential = {
		NOR = {
			has_global_flag = ring_gargantuan_disabled
			has_global_flag = ring_behemoth_disabled
			has_global_flag = ring_titanic_disabled
		}
	}
	possible = {
		from = {
			has_gigastructural_constructs = yes
			has_technology = giga_tech_ringworld_titanic_2
			has_technology = giga_tech_ringworld_behemoth
			has_technology = giga_tech_ringworld_gargantuan_2
		}
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it

	on_build_start = {
		if = {
			limit = {
				from = {
					NOR = {
						graphical_culture = arthropoid_01
						graphical_culture = avian_01
						graphical_culture = fungoid_01
						graphical_culture = humanoid_01
						graphical_culture = mammalian_01
						graphical_culture = molluscoid_01
						graphical_culture = plantoid_01
						graphical_culture = reptilian_01
						graphical_culture = lithoid_01
						graphical_culture = necroid_01
					}
				}
			}
			fromfrom = { set_graphical_culture = mammalian_01 }
		}
		else = { fromfrom = { set_graphical_culture = root.from } }
	}

	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.2302 } }	# Notification
		remove_megastructure = fromfrom
		spawn_megastructure = { name = "Ring Section M" type = "ringworld_g_3x_segment" orbit_angle = 0		orbit_distance = 179 owner = from graphical_culture = mammalian_01 }
		spawn_megastructure = { name = "Ring Section N" type = "ringworld_g_3x_segment" orbit_angle = 90	orbit_distance = 179 owner = from graphical_culture = mammalian_01 }
		spawn_megastructure = { name = "Ring Section O" type = "ringworld_g_3x_segment" orbit_angle = 180	orbit_distance = 179 owner = from graphical_culture = mammalian_01 }
		spawn_megastructure = { name = "Ring Section P" type = "ringworld_g_3x_segment" orbit_angle = 270	orbit_distance = 179 owner = from graphical_culture = mammalian_01 }
	}
}

ringworld_g_3x_segment = {
	entity = "gargantuan_quarter_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = { always = no }
	upgrade_from = { ringworld_gargantuan_1 }
	resources = { category = giga_gigastructures }
	
	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
}

ringworld_gargantuan_2 = {
	entity = ""
	construction_entity = "gargantuan_quarter_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { ringworld_g_3x_segment }
	show_in_outliner = no

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 14400
	resources = {
		category = giga_gigastructures
		cost = { alloys = 40000 }
	}

	potential = {
		NOR = {
			has_global_flag = ring_gargantuan_disabled
			has_global_flag = ring_behemoth_disabled
			has_global_flag = ring_titanic_disabled
		}
	}
	possible = {
		from = {
			has_gigastructural_constructs = yes
			has_technology = giga_tech_ringworld_titanic_2
			has_technology = giga_tech_ringworld_behemoth
			has_technology = giga_tech_ringworld_gargantuan_2
		}
	}

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.2303 } }	# Notification

		change_variable = { which = g_ring_segments value = 1 }
		if = {
			limit = { check_variable = { which = g_ring_segments value >= 4 } }
			from = {
				country_event = { id = giga_dialog.2304 }	# Fully completed Ringworld
				remove_country_flag = giga_started_g_ringworld
				change_variable = { which = completed_g_ringworlds value = 1 }
				if = {
					limit = {
						NOR = {
							has_global_flag = giga_achievements_disabled
							has_country_flag = giga_achievement_88
						}
					}
					set_country_flag = giga_achievement_88
					set_timed_country_flag = { flag = giga_achievement_88_notification days = 30 }
					giga_achievement_sound = yes
				}
			}
			set_variable = { which = g_ring_segments value = 0 }
		}

		spawn_planet = {
			class = "pc_ringworld_tech"
			location = fromfrom
			orbit_angle_offset = 30
			init_effect = {
				set_name = "Ring Section"
				giga_set_ringworld_graphical_culture = {
					TARGET = this
					SOURCE = prev.from
					SIZE = gargantuan
					TYPE = tech
				}
				set_surveyed = { surveyed = yes surveyor = from }
				set_all_comms_surveyed = yes
				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = megastructure
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_ringworld_tit
				set_planet_flag = giga_ringworld_beh
				set_planet_flag = giga_ringworld_gar
			}
		}
		spawn_planet = {
			class = "pc_ringworld_seam"
			location = fromfrom
			orbit_angle_offset = 0
			init_effect = {
				set_name = "Ring Section"
				giga_set_ringworld_graphical_culture = {
					TARGET = this
					SOURCE = prev.from
					SIZE = gargantuan
					TYPE = seam
				}
				set_surveyed = { surveyed = yes surveyor = from }
				set_all_comms_surveyed = yes
				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = megastructure
			}
		}
		spawn_planet = {
			class = "pc_ringworld_habitable"
			location = fromfrom
			orbit_angle_offset = -30
			size = 40
			init_effect = {
				giga_set_ringworld_graphical_culture = {
					TARGET = this
					SOURCE = prev.from
					SIZE = gargantuan
					TYPE = gaia_habitable
				}
				set_surveyed = { surveyed = yes surveyor = from }
				set_all_comms_surveyed = yes
				clear_blockers = yes
				save_event_target_as = ring_section
				trigger_megastructure_icon = yes
				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = megastructure
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_ringworld_tit
				set_planet_flag = giga_ringworld_beh
				set_planet_flag = giga_ringworld_gar
				add_modifier = { modifier = "giga_gargantuan_housing" days = -1 }

				giga_start_ai_colony_if_safe = yes
			}
		}
		if = {		limit = { NOT = { has_star_flag = ring_01 } } set_star_flag = ring_01 event_target:ring_section = { set_name = "Habitable Section A" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_02 } } set_star_flag = ring_02 event_target:ring_section = { set_name = "Habitable Section B" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_03 } } set_star_flag = ring_03 event_target:ring_section = { set_name = "Habitable Section C" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_04 } } set_star_flag = ring_04 event_target:ring_section = { set_name = "Habitable Section D" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_05 } } set_star_flag = ring_05 event_target:ring_section = { set_name = "Habitable Section E" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_06 } } set_star_flag = ring_06 event_target:ring_section = { set_name = "Habitable Section F" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_07 } } set_star_flag = ring_07 event_target:ring_section = { set_name = "Habitable Section G" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_08 } } set_star_flag = ring_08 event_target:ring_section = { set_name = "Habitable Section H" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_09 } } set_star_flag = ring_09 event_target:ring_section = { set_name = "Habitable Section I" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_10 } } set_star_flag = ring_10 event_target:ring_section = { set_name = "Habitable Section J" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_11 } } set_star_flag = ring_11 event_target:ring_section = { set_name = "Habitable Section K" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_12 } } set_star_flag = ring_12 event_target:ring_section = { set_name = "Habitable Section L" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_13 } } set_star_flag = ring_13 event_target:ring_section = { set_name = "Habitable Section M" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_14 } } set_star_flag = ring_14 event_target:ring_section = { set_name = "Habitable Section N" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_15 } } set_star_flag = ring_15 event_target:ring_section = { set_name = "Habitable Section O" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_16 } } set_star_flag = ring_16 event_target:ring_section = { set_name = "Habitable Section P" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_17 } } set_star_flag = ring_17 event_target:ring_section = { set_name = "Habitable Section Q" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_18 } } set_star_flag = ring_18 event_target:ring_section = { set_name = "Habitable Section R" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_19 } } set_star_flag = ring_19 event_target:ring_section = { set_name = "Habitable Section S" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_20 } } set_star_flag = ring_20 event_target:ring_section = { set_name = "Habitable Section T" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_21 } } set_star_flag = ring_21 event_target:ring_section = { set_name = "Habitable Section U" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_22 } } set_star_flag = ring_22 event_target:ring_section = { set_name = "Habitable Section V" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_23 } } set_star_flag = ring_23 event_target:ring_section = { set_name = "Habitable Section W" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_24 } } set_star_flag = ring_24 event_target:ring_section = { set_name = "Habitable Section X" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_25 } } set_star_flag = ring_25 event_target:ring_section = { set_name = "Habitable Section Y" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_26 } } set_star_flag = ring_26 event_target:ring_section = { set_name = "Habitable Section Z" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_27 } } set_star_flag = ring_27 event_target:ring_section = { set_name = "Habitable Section Aa" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_28 } } set_star_flag = ring_28 event_target:ring_section = { set_name = "Habitable Section Ab" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_29 } } set_star_flag = ring_29 event_target:ring_section = { set_name = "Habitable Section Ac" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_30 } } set_star_flag = ring_30 event_target:ring_section = { set_name = "Habitable Section Ad" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_31 } } set_star_flag = ring_31 event_target:ring_section = { set_name = "Habitable Section Ae" } }
		else_if = {
			limit = { NOT = { has_star_flag = ring_32 } }
			set_star_flag = ring_32
			event_target:ring_section = { set_name = "Habitable Section Af" }
			remove_star_flag = ring_01
			remove_star_flag = ring_02
			remove_star_flag = ring_03
			remove_star_flag = ring_04
			remove_star_flag = ring_05
			remove_star_flag = ring_06
			remove_star_flag = ring_07
			remove_star_flag = ring_08
			remove_star_flag = ring_09
			remove_star_flag = ring_10
			remove_star_flag = ring_11
			remove_star_flag = ring_12
			remove_star_flag = ring_13
			remove_star_flag = ring_14
			remove_star_flag = ring_15
			remove_star_flag = ring_16
			remove_star_flag = ring_17
			remove_star_flag = ring_18
			remove_star_flag = ring_19
			remove_star_flag = ring_20
			remove_star_flag = ring_21
			remove_star_flag = ring_22
			remove_star_flag = ring_23
			remove_star_flag = ring_24
			remove_star_flag = ring_25
			remove_star_flag = ring_26
			remove_star_flag = ring_27
			remove_star_flag = ring_28
			remove_star_flag = ring_29
			remove_star_flag = ring_30
			remove_star_flag = ring_31
			remove_star_flag = ring_32
		}
		remove_megastructure = fromfrom
	}
}

# Ruined Ring World Segment
ring_world_gargantuan_ruined = {
	entity = "gargantuan_ruined_quarter_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = { always = no }
	resources = { category = giga_gigastructures }
	
	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
}

# Restored Ring World Segment
ring_world_gargantuan_restored = {
	entity = ""
	construction_entity = "gargantuan_quarter_construction_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { ring_world_gargantuan_ruined }
	show_in_outliner = no

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 14400
	resources = {
		category = giga_gigastructures
		cost = { alloys = 40000 }
	}

	potential = {
		NOR = {
			has_global_flag = ring_gargantuan_disabled
			has_global_flag = ring_behemoth_disabled
			has_global_flag = ring_titanic_disabled
		}
	}
	possible = {
		from = {
			has_technology = tech_mega_engineering
		}
		custom_tooltip = { fail_text = "requires_surveyed_system"					giga_system_is_surveyed = yes }
	}

	ai_weight = {
		factor = value:giga_ai_base_repairs
		modifier = {
			weight = 0
			from = { is_country_type = fallen_empire }
		}
		# give the AI some breathing room to do *something else* than the onion ring
		modifier = {
			weight = 0
			from = {
				has_monthly_income = {
					resource = alloys
					value < 3000
				}
			}
		}
	}

	on_build_start = {
		if = {
			limit = {
				from = {
					NOR = {
						graphical_culture = arthropoid_01
						graphical_culture = avian_01
						graphical_culture = fungoid_01
						graphical_culture = humanoid_01
						graphical_culture = mammalian_01
						graphical_culture = molluscoid_01
						graphical_culture = plantoid_01
						graphical_culture = reptilian_01
						graphical_culture = lithoid_01
						graphical_culture = necroid_01
					}
				}
			}
			fromfrom = { set_graphical_culture = mammalian_01 }
		}
		else = { fromfrom = { set_graphical_culture = root.from } }
	}

	on_build_complete = {
		giga_remove_system_debris = yes
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.2305 } }	# Notification

		change_variable = { which = g_ring_segments value = 1 }
		if = {
			limit = { check_variable = { which = g_ring_segments value >= 4 } }
			from = {
				country_event = { id = giga_dialog.2304 }	# Fully completed Ringworld
				remove_country_flag = giga_started_g_ringworld
				change_variable = { which = completed_g_ringworlds value = 1 }
				if = {
					limit = {
						NOR = {
							has_global_flag = giga_achievements_disabled
							has_country_flag = giga_achievement_88
						}
					}
					set_country_flag = giga_achievement_88
					set_timed_country_flag = { flag = giga_achievement_88_notification days = 30 }
					giga_achievement_sound = yes
				}
			}
			set_variable = { which = g_ring_segments value = 0 }
		}

		spawn_planet = {
			class = "pc_ringworld_tech"
			location = fromfrom
			orbit_angle_offset = 30
			init_effect = {
				set_name = "Ring Section"
				giga_set_ringworld_graphical_culture = {
					TARGET = this
					SOURCE = prev.from
					SIZE = gargantuan
					TYPE = tech
				}
				set_surveyed = { surveyed = yes surveyor = from }
				set_all_comms_surveyed = yes
				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = megastructure
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_ringworld_tit
				set_planet_flag = giga_ringworld_beh
				set_planet_flag = giga_ringworld_gar
			}
		}
		spawn_planet = {
			class = "pc_ringworld_seam"
			location = fromfrom
			orbit_angle_offset = 0
			init_effect = {
				set_name = "Ring Section"
				giga_set_ringworld_graphical_culture = {
					TARGET = this
					SOURCE = prev.from
					SIZE = gargantuan
					TYPE = seam
				}
				set_surveyed = { surveyed = yes surveyor = from }
				set_all_comms_surveyed = yes
				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = megastructure
			}
		}
		spawn_planet = {
			class = "pc_ringworld_habitable"
			location = fromfrom
			orbit_angle_offset = -30
			size = 40
			init_effect = {
				giga_set_ringworld_graphical_culture = {
					TARGET = this
					SOURCE = prev.from
					SIZE = gargantuan
					TYPE = gaia_habitable
				}
				set_surveyed = { surveyed = yes surveyor = from }
				set_all_comms_surveyed = yes
				clear_blockers = yes
				save_event_target_as = ring_section
				trigger_megastructure_icon = yes
				set_planet_flag = forbid_guillis_planet_modifiers
				set_planet_flag = megastructure
				set_planet_flag = colony_event			# Vanilla uses to prevent unwanted events on planets
				set_planet_flag = giga_ringworld_tit
				set_planet_flag = giga_ringworld_beh
				set_planet_flag = giga_ringworld_gar
				add_modifier = { modifier = "giga_gargantuan_housing" days = -1 }

				giga_start_ai_colony_if_safe = yes
			}
		}
		if = {		limit = { NOT = { has_star_flag = ring_01 } } set_star_flag = ring_01 event_target:ring_section = { set_name = "Habitable Section A" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_02 } } set_star_flag = ring_02 event_target:ring_section = { set_name = "Habitable Section B" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_03 } } set_star_flag = ring_03 event_target:ring_section = { set_name = "Habitable Section C" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_04 } } set_star_flag = ring_04 event_target:ring_section = { set_name = "Habitable Section D" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_05 } } set_star_flag = ring_05 event_target:ring_section = { set_name = "Habitable Section E" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_06 } } set_star_flag = ring_06 event_target:ring_section = { set_name = "Habitable Section F" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_07 } } set_star_flag = ring_07 event_target:ring_section = { set_name = "Habitable Section G" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_08 } } set_star_flag = ring_08 event_target:ring_section = { set_name = "Habitable Section H" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_09 } } set_star_flag = ring_09 event_target:ring_section = { set_name = "Habitable Section I" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_10 } } set_star_flag = ring_10 event_target:ring_section = { set_name = "Habitable Section J" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_11 } } set_star_flag = ring_11 event_target:ring_section = { set_name = "Habitable Section K" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_12 } } set_star_flag = ring_12 event_target:ring_section = { set_name = "Habitable Section L" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_13 } } set_star_flag = ring_13 event_target:ring_section = { set_name = "Habitable Section M" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_14 } } set_star_flag = ring_14 event_target:ring_section = { set_name = "Habitable Section N" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_15 } } set_star_flag = ring_15 event_target:ring_section = { set_name = "Habitable Section O" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_16 } } set_star_flag = ring_16 event_target:ring_section = { set_name = "Habitable Section P" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_17 } } set_star_flag = ring_17 event_target:ring_section = { set_name = "Habitable Section Q" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_18 } } set_star_flag = ring_18 event_target:ring_section = { set_name = "Habitable Section R" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_19 } } set_star_flag = ring_19 event_target:ring_section = { set_name = "Habitable Section S" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_20 } } set_star_flag = ring_20 event_target:ring_section = { set_name = "Habitable Section T" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_21 } } set_star_flag = ring_21 event_target:ring_section = { set_name = "Habitable Section U" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_22 } } set_star_flag = ring_22 event_target:ring_section = { set_name = "Habitable Section V" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_23 } } set_star_flag = ring_23 event_target:ring_section = { set_name = "Habitable Section W" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_24 } } set_star_flag = ring_24 event_target:ring_section = { set_name = "Habitable Section X" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_25 } } set_star_flag = ring_25 event_target:ring_section = { set_name = "Habitable Section Y" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_26 } } set_star_flag = ring_26 event_target:ring_section = { set_name = "Habitable Section Z" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_27 } } set_star_flag = ring_27 event_target:ring_section = { set_name = "Habitable Section Aa" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_28 } } set_star_flag = ring_28 event_target:ring_section = { set_name = "Habitable Section Ab" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_29 } } set_star_flag = ring_29 event_target:ring_section = { set_name = "Habitable Section Ac" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_30 } } set_star_flag = ring_30 event_target:ring_section = { set_name = "Habitable Section Ad" } }
		else_if = {	limit = { NOT = { has_star_flag = ring_31 } } set_star_flag = ring_31 event_target:ring_section = { set_name = "Habitable Section Ae" } }
		else_if = {
			limit = { NOT = { has_star_flag = ring_32 } }
			set_star_flag = ring_32
			event_target:ring_section = { set_name = "Habitable Section Af" }
			remove_star_flag = ring_01
			remove_star_flag = ring_02
			remove_star_flag = ring_03
			remove_star_flag = ring_04
			remove_star_flag = ring_05
			remove_star_flag = ring_06
			remove_star_flag = ring_07
			remove_star_flag = ring_08
			remove_star_flag = ring_09
			remove_star_flag = ring_10
			remove_star_flag = ring_11
			remove_star_flag = ring_12
			remove_star_flag = ring_13
			remove_star_flag = ring_14
			remove_star_flag = ring_15
			remove_star_flag = ring_16
			remove_star_flag = ring_17
			remove_star_flag = ring_18
			remove_star_flag = ring_19
			remove_star_flag = ring_20
			remove_star_flag = ring_21
			remove_star_flag = ring_22
			remove_star_flag = ring_23
			remove_star_flag = ring_24
			remove_star_flag = ring_25
			remove_star_flag = ring_26
			remove_star_flag = ring_27
			remove_star_flag = ring_28
			remove_star_flag = ring_29
			remove_star_flag = ring_30
			remove_star_flag = ring_31
			remove_star_flag = ring_32
		}
		remove_megastructure = fromfrom
	}
}