terraform_toxic_0 = {
	entity = "giga_consite_5_5_entity"
	construction_entity = "giga_consite_5_5_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_terraform_toxic }

	build_time = 1260

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}

	resources = {
		category = giga_kilostructures
		cost = {
			alloys = 2000
			influence = 50
			unity = @giga_kilo_unity_cost
		}
		upkeep = { energy = 5 }
	}

	potential = {
		has_technology = giga_tech_terraform_toxic
		NOT = { has_global_flag = terraform_toxic_disabled }
		OR = {
			check_variable = { which = giga_terraform_toxic_cap value = 0 }						# No Cap
			check_variable = { which = giga_current_terraform_toxic value < giga_terraform_toxic_cap }
		}
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"		is_inside_border = from }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_terraform_toxic_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_terraform_toxic value < giga_terraform_toxic_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "must_build_around_toxic"			giga_is_toxic = yes }
			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
			custom_tooltip = { fail_text = "requires_survey_not_habitable"		is_surveyed = { who = prev.from status = yes } is_planet_habitable = no }
			custom_tooltip = { fail_text = "requires_not_asteroid"				is_asteroid = no }
			custom_tooltip = { fail_text = "requires_not_star"					is_star = no }
			custom_tooltip = {
				fail_text = "requires_not_astral_scar"
				is_astral_scar = no
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				NOT = { has_planet_flag = giga_terraforming_megastructure }
			}
			# custom_tooltip = { #Someone left an unfinished failtext here so I'll just comment it out for now I guess
			# 	fail_text = "requires"
			# }
		}
	}

	ai_weight = {
		# weight = 300	# Default = 100

		# # Can we afford the upkeep

		# # Do we want the production

		# # Is this system a good location?
		# modifier = { factor = 0.50	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		# modifier = { factor = 3.00	fromfrom.planet = { planet_size >= 25 } }
		# modifier = { factor = 2.00	fromfrom.planet = { planet_size < 25 planet_size >= 20 } }
		# modifier = { factor = 1.50	fromfrom.planet = { planet_size < 20 planet_size >= 15 } }
		# modifier = { factor = 0.00	fromfrom.planet = { planet_size < 15 } }

		# # Do we lean towards this from federation/ethic/civic?
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		any_planet_within_border = {
		# 			is_colonizable = yes
		# 			planet_size > 15
		# 		}
		# 	}
		# }

		# # How many of this megastructure can the AI build?
		# modifier = { factor = 0.00 from = { has_country_flag = has_recently_built_terraform_toxic } }
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		OR = {
		# 			has_megastructure = terraform_toxic_0
		# 			has_megastructure = terraform_toxic_1
		# 			has_megastructure = terraform_toxic_2
		# 			has_megastructure = terraform_toxic_3
		# 		}
		# 	}
		# }

		weight = value:giga_ai_base_kilo

		mult = value:giga_ai_planet_size
		mult = value:giga_ai_prevent_spam|MEGA|terraform_toxic|
		mult = value:giga_ai_build_low_priority
		mult = value:giga_ai_unlock_low_priority
		mult = value:giga_ai_overpopulation_boost
	}

	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			set_timed_country_flag = { flag = has_recently_built_terraform_toxic years = 20 }
			country_event = { id = giga_dialog.3901 }	# Notification
			change_variable = { which = giga_current_terraform_toxic value = 1 }
		}
		fromfrom.planet = {
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			giga_set_has_mega_flag = yes
			set_planet_flag = giga_terraforming_megastructure
		}
	}
}

terraform_toxic_1 = {
	entity = "atmo_purifier_just_rings_entity"
	construction_entity = "atmo_purifier_just_rings_entity"
	portrait = "GFX_megastructure_toxic_world"
	upgrade_from = { terraform_toxic_0 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}

	build_time = 1260
	resources = {
		category = giga_kilostructures
		cost = { alloys = 2000 unity = @giga_kilo_unity_cost }
		upkeep = {
			alloys = 10
			energy = 25
		}
	}

	potential = { NOT = { has_global_flag = terraform_toxic_disabled } }
	possible = { from = { has_technology = giga_tech_terraform_toxic } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.3902 } }	# Notification
	}
}

terraform_toxic_2 = {
	entity = "atmo_purifier_rings_entity"
	construction_entity = "atmo_purifier_just_poles_entity"
	portrait = "GFX_megastructure_toxic_world"
	upgrade_from = { terraform_toxic_1 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 1260
	resources = {
		category = megastructures
		cost = { alloys = 2000 unity = @giga_kilo_unity_cost }
		upkeep = {
			alloys = 20
			energy = 50
		}
	}

	potential = { NOT = { has_global_flag = terraform_toxic_disabled } }
	possible = { from = { has_technology = giga_tech_terraform_toxic } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.3903 } }	# Notification
	}
}

terraform_toxic_3 = {
	entity = ""
	portrait = "GFX_megastructure_toxic_world"
	upgrade_from = { terraform_toxic_2 }

	build_time = 3600
	resources = {
		category = giga_terraforming_by_megas
		cost = { energy = 7500 }
	}

	potential = { NOT = { has_global_flag = terraform_toxic_disabled } }
	possible = { from = { has_technology = giga_tech_terraform_toxic } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.3904 }	# Notification
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_58
					}
				}
				set_country_flag = giga_achievement_58
				set_timed_country_flag = { flag = giga_achievement_58_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
		fromfrom.planet = {
			remove_planet_flag = giga_terraforming_megastructure
			giga_clear_has_mega_flag = yes
		    change_pc = pc_ll_foggy
			add_modifier = { modifier = lifeless_foggy }
			add_modifier = { modifier = lifeless_foggy_gases days = 1800 }
			giga_reroll_lifeless = yes
			set_planet_flag = used_to_be_toxic
			fire_on_action = {
				on_action = on_terraforming_complete
				scopes = { from = from }
			}
			if = {
				limit = { space_owner = { is_country_type = katzenartig_imperium } }
				set_planet_flag = katzen_planet_colonized
				planet_event = { id = giga_katzen.110 }
			}

			planet_event = { id = giga_mega.1000 } # apply locale modifiers
		}
		remove_megastructure = fromfrom
	}
}