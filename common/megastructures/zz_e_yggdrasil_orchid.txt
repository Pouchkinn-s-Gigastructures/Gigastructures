yggdrasil_orchid_0 = {
	entity = "giga_consite_5_5_entity"
	construction_entity = "giga_consite_5_5_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_yggdrasil_orchid }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_yggdrasil_orchid
		cost = {
			alloys = 5000
			influence = 75
			unity = @giga_mega_unity_cost
		}
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|alloys|AMOUNT|5000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|unity|AMOUNT|@giga_mega_unity_cost| }
		upkeep = { energy = 5 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = alloys AMOUNT = 5000 }
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = unity  AMOUNT = @giga_mega_unity_cost }
	}
	on_build_cancel = {
		giga_ai_savings_refund = { CATEGORY = resource RESOURCE = alloys }
		giga_ai_savings_refund = { CATEGORY = resource RESOURCE = unity }
	}

	potential = {
		has_technology = giga_tech_yggdrasil_orchid
		NOT = { has_global_flag = orchid_disabled }
		OR = {
			check_variable = { which = giga_orchid_cap value = 0 }						# No Cap
			check_variable = { which = giga_current_orchid value < giga_orchid_cap }
		}
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"		is_inside_border = from }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_orchid_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_orchid value < giga_orchid_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "must_build_around_gas"				giga_is_gas_giant = yes }
			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
			custom_tooltip = { fail_text = "requires_no_existing_megastructure"	planet_has_no_megastructure = yes }
			custom_tooltip = { fail_text = "requires_survey_not_habitable"		is_surveyed = { who = prev.from status = yes } is_planet_habitable = no }
			custom_tooltip = { fail_text = "requires_not_minor_planetary_body"	is_asteroid = no is_moon = no }
			custom_tooltip = { fail_text = "requires_not_star"					is_star = no }
			custom_tooltip = {
				fail_text = "requires_not_astral_scar"
				is_astral_scar = no
			}
		}
	}

	ai_weight = {
		# weight = 100	# Default = 100

		# # Can we afford the upkeep
		# modifier = { factor = 1.00	chk_afford_energy_10 = yes }
		# modifier = { factor = 0.90	chk_afford_energy_09 = yes }
		# modifier = { factor = 0.80	chk_afford_energy_08 = yes }
		# modifier = { factor = 0.70	chk_afford_energy_07 = yes }
		# modifier = { factor = 0.60	chk_afford_energy_06 = yes }
		# modifier = { factor = 0.50	chk_afford_energy_05 = yes }
		# modifier = { factor = 0.40	chk_afford_energy_04 = yes }
		# modifier = { factor = 0.30	chk_afford_energy_03 = yes }
		# modifier = { factor = 0.20	chk_afford_energy_25 = yes }
		# modifier = { factor = 0.10	chk_afford_energy_02 = yes }
		# modifier = { factor = 0.00	chk_afford_energy_15 = yes }

		# # Do we want the production
		# modifier = { factor = 3.75	chk_needs_physics_10 = yes }
		# modifier = { factor = 3.50	chk_needs_physics_09 = yes }
		# modifier = { factor = 3.25	chk_needs_physics_08 = yes }
		# modifier = { factor = 3.00	chk_needs_physics_07 = yes }
		# modifier = { factor = 2.75	chk_needs_physics_06 = yes }
		# modifier = { factor = 2.50	chk_needs_physics_05 = yes }
		# modifier = { factor = 2.25	chk_needs_physics_04 = yes }
		# modifier = { factor = 2.00	chk_needs_physics_03 = yes }
		# modifier = { factor = 1.75	chk_needs_physics_25 = yes }
		# modifier = { factor = 1.50	chk_needs_physics_02 = yes }
		# modifier = { factor = 1.25	chk_needs_physics_15 = yes }

		# modifier = { factor = 3.75	chk_needs_society_10 = yes }
		# modifier = { factor = 3.50	chk_needs_society_09 = yes }
		# modifier = { factor = 3.25	chk_needs_society_08 = yes }
		# modifier = { factor = 3.00	chk_needs_society_07 = yes }
		# modifier = { factor = 2.75	chk_needs_society_06 = yes }
		# modifier = { factor = 2.50	chk_needs_society_05 = yes }
		# modifier = { factor = 2.25	chk_needs_society_04 = yes }
		# modifier = { factor = 2.00	chk_needs_society_03 = yes }
		# modifier = { factor = 1.75	chk_needs_society_25 = yes }
		# modifier = { factor = 1.50	chk_needs_society_02 = yes }
		# modifier = { factor = 1.25	chk_needs_society_15 = yes }

		# modifier = { factor = 3.75	chk_needs_food_10 = yes }
		# modifier = { factor = 3.50	chk_needs_food_09 = yes }
		# modifier = { factor = 3.25	chk_needs_food_08 = yes }
		# modifier = { factor = 3.00	chk_needs_food_07 = yes }
		# modifier = { factor = 2.75	chk_needs_food_06 = yes }
		# modifier = { factor = 2.50	chk_needs_food_05 = yes }
		# modifier = { factor = 2.25	chk_needs_food_04 = yes }
		# modifier = { factor = 2.00	chk_needs_food_03 = yes }
		# modifier = { factor = 1.75	chk_needs_food_25 = yes }
		# modifier = { factor = 1.50	chk_needs_food_02 = yes }
		# modifier = { factor = 1.25	chk_needs_food_15 = yes }

		# # Is this system a good location?
		# modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		# modifier = { factor = 0.5	any_neighbor_system = { any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } } }

		# # Do we lean towards this from federation/ethic/civic?
		# modifier = { factor = 3		from = { is_hive_empire = yes } }
		# modifier = { factor = 0		from = { is_machine_empire = yes NOR = { has_civic = civic_machine_servitor has_civic = civic_machine_assimilator } } }
		# modifier = { factor = 0		from = { is_lithoid_empire = yes } }

		# # How many of this megastructure can the AI build?
		# modifier = { factor = 0.00 from = { has_country_flag = has_recently_built_yggdrasil_orchid } }
		# modifier = { factor = 0.00 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = yggdrasil_orchid_3 is_megastructure_type = yggdrasil_orchid_restored } } count > 1 } } }
		# modifier = { factor = 0.50 from = { count_owned_megastructure = { limit = { OR = { is_megastructure_type = yggdrasil_orchid_3 is_megastructure_type = yggdrasil_orchid_restored } } count = 1 } } }
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		OR = {
		# 			has_megastructure = yggdrasil_orchid_0
		# 			has_megastructure = yggdrasil_orchid_1
		# 			has_megastructure = yggdrasil_orchid_2
		# 			has_megastructure = yggdrasil_orchid_ruined
		# 		}
		# 	}
		# }

		weight = value:giga_ai_base_mega

		mult = value:giga_ai_upkeep|RESOURCE|energy|AMOUNT|150|MIN|0.25|
		mult = value:giga_ai_upkeep|RESOURCE|alloys|AMOUNT|50|MIN|0.25|
		mult = value:giga_ai_output|RESOURCE|food|AMOUNT|650|MIN|0.1|
		mult = value:giga_ai_core_territory
		mult = value:giga_ai_unlocks_galwonders
		mult = value:giga_ai_weight_savings|CATEGORY|resource|RESOURCE|alloys|AMOUNT|22500|
		mult = value:giga_ai_cap_availability_boost

		modifier = { factor = 0 	from = { country_uses_food = no } }
		modifier = { factor = 3		from = { is_hive_empire = yes } }
		modifier = { factor = 0.1	from = { is_machine_empire = yes NOR = { has_civic = civic_machine_servitor has_civic = civic_machine_assimilator } } }
	}

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = {
			save_event_target_as = giga_planet
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			giga_set_has_mega_flag = yes
			set_planet_flag = megastructure
			set_planet_flag = giga_planet_mega
		}
		from = {
			set_timed_country_flag = { flag = has_recently_built_yggdrasil_orchid years = 20 }
			country_event = { id = giga_dialog.2001 }	# Notification
			change_variable = { which = giga_current_orchid value = 1 }
		}
	}
}

yggdrasil_orchid_1 = {
	entity = "yggdrasil_phase_01_entity"
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { yggdrasil_orchid_0 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = { alloys = 7500 unity = @giga_mega_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|alloys|AMOUNT|7500| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|unity|AMOUNT|@giga_mega_unity_cost| }
		upkeep = { alloys = 10 }
		produces = { society_research = 50 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = alloys AMOUNT = 7500 }
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = unity  AMOUNT = @giga_mega_unity_cost }
	}

	potential = { NOT = { has_global_flag = orchid_disabled } }
	possible = { from = { has_technology = giga_tech_yggdrasil_orchid } }

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.2002 } }	# Notification
	}
}

yggdrasil_orchid_2 = {
	entity = "yggdrasil_phase_02_entity"
	construction_entity = "yggdrasil_phase_02_construction_entity"
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { yggdrasil_orchid_1 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = { alloys = 5000 unity = @giga_mega_unity_cost }
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|alloys|AMOUNT|5000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|unity|AMOUNT|@giga_mega_unity_cost| }
		upkeep = {
			alloys = 10
			energy = 25
		}
		produces = { society_research = 100 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = alloys AMOUNT = 5000 }
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = unity  AMOUNT = @giga_mega_unity_cost }
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	potential = { NOT = { has_global_flag = orchid_disabled } }
	possible = { from = { has_technology = giga_tech_yggdrasil_orchid } }

	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.2003 } }	# Notification
	}
}

yggdrasil_orchid_3 = {
	entity = "yggdrasil_phase_03_entity"
	construction_entity = "yggdrasil_phase_03_construction_entity"
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { yggdrasil_orchid_2 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 3600
	resources = {
		category = giga_megastructures
		cost = {
			food = 1000
			energy = 5000
			unity = @giga_mega_unity_cost
		}
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|alloys|AMOUNT|5000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|unity|AMOUNT|@giga_mega_unity_cost| }

		upkeep = {
			alloys = 40
			energy = 150
			unity = 15
		}

		upkeep = {
			trigger = { has_megastructure_flag = clearing_yggdrasil_locusts }
			energy = 150
		}

		produces = {
			physics_research = 300
			society_research = 500
			food = 650
		}

		produces = {
			trigger = { has_megastructure_flag = yggdrasil_storm }
			food = -325
		}

		produces = {
			trigger = { has_megastructure_flag = clearing_yggdrasil_locusts }
			food = -520
		}

		produces = {
			trigger = { has_megastructure_flag = yggdrasil_locusts }
			food = -228
		}

		produces = {
			trigger = { has_megastructure_flag = studying_yggdrasil_locusts }
			food = -325
			society_research = 250
		}
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = alloys AMOUNT = 5000 }
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = unity  AMOUNT = @giga_mega_unity_cost }
	}

	potential = { NOT = { has_global_flag = orchid_disabled } }
	possible = { from = { has_technology = giga_tech_yggdrasil_orchid } }

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			if = {
				limit = { NOT = { has_country_flag = giga_repaired_mega_no_dialog } }
				country_event = { id = giga_dialog.2004 }				# Notification
			}
			set_country_flag = has_built_or_repaired_megastructure	# Triggers Galactic Wonders
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_69
					}
				}
				set_country_flag = giga_achievement_69
				set_timed_country_flag = { flag = giga_achievement_69_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
		if = {
			limit = { exists = fromfrom.planet }
			fromfrom.planet = { change_pc = pc_food_giant } 
		}
	}
}

#Ruined
yggdrasil_orchid_ruined = {
	entity = "yggdrasil_phase_00_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = { always = no }
	resources = { category = giga_megastructures }
	
	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
}

#Restored
yggdrasil_orchid_restored = {
	entity = "yggdrasil_phase_03_entity"
	construction_entity = "yggdrasil_phase_03_entity"
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { yggdrasil_orchid_ruined }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 6000
	resources = {
		category = giga_megastructures
		cost = {
			food = 1500
			energy = 10000
			alloys = 5000
			unity = @giga_mega_repair_unity_cost
		}
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|alloys|AMOUNT|5000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|unity|AMOUNT|@giga_mega_repair_unity_cost| }
		upkeep = {
			alloys = 40
			energy = 150
			unity = 15
		}
		upkeep = {
			trigger = { has_megastructure_flag = clearing_yggdrasil_locusts }
			energy = 150
		}

		produces = {
			physics_research = 300
			society_research = 500
			food = 650
		}

		produces = {
			trigger = { has_megastructure_flag = yggdrasil_storm }
			food = -325
		}

		produces = {
			trigger = { has_megastructure_flag = clearing_yggdrasil_locusts }
			food = -520
		}

		produces = {
			trigger = { has_megastructure_flag = yggdrasil_locusts }
			food = -228
		}

		produces = {
			trigger = { has_megastructure_flag = studying_yggdrasil_locusts }
			food = -325
			society_research = 250
		}
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = alloys AMOUNT = 5000 }
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = unity  AMOUNT = @giga_mega_repair_unity_cost }
	}

	potential = { NOT = { has_global_flag = orchid_disabled } }
	possible = {
		exists = from
		from = { has_technology = tech_mega_engineering }
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.2006 }				# Notification
			set_country_flag = has_built_or_repaired_megastructure	# Triggers Galactic Wonders
		}
		giga_remove_system_debris = yes
		fromfrom.planet = { change_pc = pc_food_giant }
	}
}