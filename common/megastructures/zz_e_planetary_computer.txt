planetary_computer_0 = {
	entity = "giga_consite_5_5_entity"
	construction_entity = "giga_consite_5_5_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_planetary_computer }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 1800
	resources = {
		category = giga_planetary_computer
		cost = {
			alloys = 2500
			influence = 150
			unity = @giga_mega_unity_cost
		}
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|alloys|AMOUNT|2500| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|unity|AMOUNT|@giga_mega_unity_cost| }
		upkeep = { energy = 5 }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = alloys AMOUNT = 2500 }
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = unity  AMOUNT = @giga_mega_unity_cost }
	}
	on_build_cancel = {
		giga_ai_savings_refund = { CATEGORY = resource RESOURCE = alloys }
		giga_ai_savings_refund = { CATEGORY = resource RESOURCE = unity }
	}

	potential = {
		has_technology = giga_tech_planetary_computer
		NOT = { has_global_flag = planetary_computer_disabled }
		OR = {
			check_variable = { which = giga_planetary_computer_cap value = 0 }						# No Cap
			check_variable = { which = giga_current_planetary_computer value < giga_planetary_computer_cap }
		}
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"		is_inside_border = from }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_planetary_computer_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_planetary_computer value < giga_planetary_computer_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
			custom_tooltip = { fail_text = "requires_not_asteroid"				is_asteroid = no }
			custom_tooltip = { fail_text = "requires_not_star"					is_star = no }
			custom_tooltip = {
				fail_text = "requires_not_astral_scar"
				is_astral_scar = no
			}
			custom_tooltip = { fail_text = "requires_no_crisis_planet"			NOT = { has_planet_flag = crisis_vital_planet } }
			custom_tooltip = {
				fail_text = "must_build_around_comp"
				NOR = {
					is_planet_class = pc_giga_planetary_computer
					has_planet_flag = has_planet_pc_mega
				}
				habitable_structure = no
				OR = {
					is_planet_habitable = yes
					giga_is_barren_cn = yes
					giga_is_frozen = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_surveyed_planet"
				OR = {
					AND = {
						is_surveyed = { who = prev.from status = yes }
						prev.from = { is_ai = no }
					}
					AND = {
						is_surveyed = { who = prev.from status = yes }
						prev.from = { is_ai = yes }
						is_planet_habitable = no
					}
				}
			}
		}
	}

	ai_weight = {
		# weight = 100	# Default = 100

		# # Can we afford the upkeep

		# # Do we want the production
		# modifier = { factor = 3.75	chk_needs_physics_10 = yes }
		# modifier = { factor = 3.50	chk_needs_physics_09 = yes }
		# modifier = { factor = 3.25	chk_needs_physics_08 = yes }
		# modifier = { factor = 3.00	chk_needs_physics_07 = yes }
		# modifier = { factor = 2.75	chk_needs_physics_06 = yes }
		# modifier = { factor = 2.50	chk_needs_physics_05 = yes }
		# modifier = { factor = 2.25	chk_needs_physics_04 = yes }
		# modifier = { factor = 2.00	chk_needs_physics_03 = yes }
		# modifier = { factor = 1.75	chk_needs_physics_25 = yes }
		# modifier = { factor = 1.50	chk_needs_physics_02 = yes }
		# modifier = { factor = 1.25	chk_needs_physics_15 = yes }

		# modifier = { factor = 3.75	chk_needs_society_10 = yes }
		# modifier = { factor = 3.50	chk_needs_society_09 = yes }
		# modifier = { factor = 3.25	chk_needs_society_08 = yes }
		# modifier = { factor = 3.00	chk_needs_society_07 = yes }
		# modifier = { factor = 2.75	chk_needs_society_06 = yes }
		# modifier = { factor = 2.50	chk_needs_society_05 = yes }
		# modifier = { factor = 2.25	chk_needs_society_04 = yes }
		# modifier = { factor = 2.00	chk_needs_society_03 = yes }
		# modifier = { factor = 1.75	chk_needs_society_25 = yes }
		# modifier = { factor = 1.50	chk_needs_society_02 = yes }
		# modifier = { factor = 1.25	chk_needs_society_15 = yes }

		# modifier = { factor = 3.75	chk_needs_engineering_10 = yes }
		# modifier = { factor = 3.50	chk_needs_engineering_09 = yes }
		# modifier = { factor = 3.25	chk_needs_engineering_08 = yes }
		# modifier = { factor = 3.00	chk_needs_engineering_07 = yes }
		# modifier = { factor = 2.75	chk_needs_engineering_06 = yes }
		# modifier = { factor = 2.50	chk_needs_engineering_05 = yes }
		# modifier = { factor = 2.25	chk_needs_engineering_04 = yes }
		# modifier = { factor = 2.00	chk_needs_engineering_03 = yes }
		# modifier = { factor = 1.75	chk_needs_engineering_25 = yes }
		# modifier = { factor = 1.50	chk_needs_engineering_02 = yes }
		# modifier = { factor = 1.25	chk_needs_engineering_15 = yes }

		# # Is this system a good location?
		# modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		# modifier = { factor = 0.5	any_neighbor_system = { any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } } }
		# modifier = { factor = 3.00	fromfrom.planet = { planet_size >= 25 } }
		# modifier = { factor = 2.00	fromfrom.planet = { planet_size < 25 planet_size >= 20 } }
		# modifier = { factor = 1.50	fromfrom.planet = { planet_size < 20 planet_size >= 15 } }
		# modifier = { factor = 0.00	fromfrom.planet = { planet_size < 15 } }

		# # Do we lean towards this from federation/ethic/civic?
		# modifier = { factor = 2		from = { has_federation = yes federation = { has_federation_type = research_federation } } }
		# modifier = { factor = 3		from = { has_ethic = ethic_fanatic_materialist } }
		# modifier = { factor = 1.5	from = { has_ethic = ethic_materialist } }
		# modifier = { factor = 1.5	from = { has_civic = civic_technocracy } }

		# # How many of this megastructure can the AI build?
		# modifier = { factor = 0.00 from = { has_country_flag = has_recently_built_planetary_computer } }
		# modifier = { factor = 0.00 from = { check_variable = { which = planetary_computer value > 3 } } }
		# modifier = { factor = 0.25 from = { check_variable = { which = planetary_computer value = 3 } } }
		# modifier = { factor = 0.50 from = { check_variable = { which = planetary_computer value = 2 } } }
		# modifier = { factor = 0.75 from = { check_variable = { which = planetary_computer value = 1 } } }
		# modifier = {
		# 	factor = 0
		# 	from = {
		# 		OR = {
		# 			has_megastructure = planetary_computer_0
		# 			has_megastructure = planetary_computer_1
		# 			has_megastructure = planetary_computer_2
		# 		}
		# 	}
		# }

		weight = value:giga_ai_base_mega

		mult = value:giga_ai_science_mult
		mult = value:giga_ai_unlocks_gigastructures
		mult = value:giga_ai_planet_size
		mult = value:giga_ai_overpopulation_boost
		mult = value:giga_ai_prevent_spam|MEGA|planetary_computer|
		mult = value:giga_ai_core_territory
		mult = value:giga_ai_cap_availability_boost
		mult = value:giga_ai_materialist
	}

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = {
			save_event_target_as = giga_planet
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			giga_set_has_mega_flag = yes
			set_planet_flag = has_planet_pc_mega
		}
		from = {
			set_timed_country_flag = { flag = has_recently_built_planetary_computer years = 230 }
			country_event = { id = giga_dialog.1301 }	# Notification
			change_variable = { which = giga_current_planetary_computer value = 1 }
		}
	}
}

planetary_computer_1 = {
	entity = ""
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { planetary_computer_0 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2500
	resources = {
		category = giga_megastructures
		cost = {
			alloys = 5000
			energy = 5000
			unity = @giga_mega_unity_cost
		}
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|alloys|AMOUNT|5000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|unity|AMOUNT|@giga_mega_unity_cost| }
		upkeep = {
			energy = 10
			alloys = 10
		}
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = alloys AMOUNT = 5000 }
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = unity  AMOUNT = @giga_mega_unity_cost }
	}

	potential = { NOT = { has_global_flag = planetary_computer_disabled } }
	possible = { from = { has_technology = giga_tech_planetary_computer } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.1302 } }	# Notification
	}
}

planetary_computer_2 = {
	entity = ""
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { planetary_computer_1 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 4700
	resources = {
		category = giga_megastructures
		cost = {
			alloys = 20000
			energy = 20000
			unity = @giga_mega_unity_cost
		}
		cost = { alloys = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|alloys|AMOUNT|20000| }
		cost = { unity = -1 multiplier = value:giga_ai_savings_cost|CATEGORY|resource|RESOURCE|unity|AMOUNT|@giga_mega_unity_cost| }
	}

	on_build_start = {
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = alloys AMOUNT = 20000 }
		giga_ai_savings_withdraw = { CATEGORY = resource RESOURCE = unity  AMOUNT = @giga_mega_unity_cost }
	}

	potential = { NOT = { has_global_flag = planetary_computer_disabled } }
	possible = { from = { has_technology = giga_tech_planetary_computer } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.1303 }				# Notification
			set_country_flag = has_built_or_repaired_gigastructure	# Triggers Gigastructural Constructs
			change_variable = { which = planetary_computer value = 1 }
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_77
					}
				}
				set_country_flag = giga_achievement_77
				set_timed_country_flag = { flag = giga_achievement_77_notification days = 30 }
				giga_achievement_sound = yes
			}
		}
		fromfrom.planet = {
			giga_clear_has_mega_flag = yes
			set_planet_flag = megastructure
			set_planet_flag = giga_planet_mega
			set_planet_flag = giga_planetary_computer
		    change_pc = pc_giga_planetary_computer
			add_modifier = { modifier = "giga_planetary_computer" days = -1 }

			if = {
				limit = {
					is_colony = no
				}
				giga_start_ai_colony_if_safe = yes
			}
		}
		remove_megastructure = fromfrom
	}
}