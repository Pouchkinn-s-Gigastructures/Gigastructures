substellar_compressor_0 = {
	entity = "giga_consite_5_5_entity"
	construction_entity = "giga_consite_5_5_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	prerequisites = { giga_tech_substellar_compressor }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = {
			alloys = 5000
			unity = @giga_mega_unity_cost
		}
		upkeep = { energy = 5 }
	}

	potential = {
		has_technology = giga_tech_substellar_compressor
		NOT = { has_global_flag = compressor_disabled }
		OR = {
			check_variable = { which = giga_compressor_cap value = 0 }						# No Cap
			check_variable = { which = giga_current_compressor value < giga_compressor_cap }
		}
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"		is_inside_border = from }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_compressor_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_compressor value < giga_compressor_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
			custom_tooltip = { fail_text = "requires_no_existing_megastructure"	planet_has_no_megastructure = yes }
			custom_tooltip = { fail_text = "requires_survey_not_habitable"		is_surveyed = { who = prev.from status = yes } is_planet_habitable = no }
			custom_tooltip = { fail_text = "requires_not_minor_planetary_body"	is_asteroid = no is_moon = no }
			custom_tooltip = {
				fail_text = "must_build_around_dwarf"
				OR = {
					giga_brown_dwarf = yes
					AND = {
						has_modifier = helioforming_candidate
						giga_is_gas_giant = yes
					}
				}
			}
		}
	}

	ai_weight = {
		# factor = 10 # If we can build it, we will build it

		# modifier = {
		# 	factor = 0
		# 	fromfrom.planet = { is_planet_class = pc_t_star }
		# }

		weight = value:giga_ai_base_mega

		mult = value:giga_ai_output|RESOURCE|energy|AMOUNT|350|
		mult = value:giga_ai_core_territory
		mult = value:giga_ai_unlocks_galwonders
		mult = value:giga_ai_cap_availability_boost
	}

	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.1701 }	# Notification
			change_variable = { which = giga_current_compressor value = 1 }
		}
		fromfrom.planet = {
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			giga_set_has_mega_flag = yes
		}
	}
}

substellar_compressor_1 = {
	entity = "gasignitor_phase_01_entity"
	construction_entity = "gasignitor_phase_01_entity"
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { substellar_compressor_0 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = { alloys = 6500 unity = @giga_mega_unity_cost }
		upkeep = {
			alloys = 5
			energy = 5
		}
	}

	potential = { NOT = { has_global_flag = compressor_disabled } }
	possible = { from = { has_technology = giga_tech_substellar_compressor } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.1702 } }	# Notification
	}
}

substellar_compressor_2 = {
	entity = "gasignitor_phase_02_entity"
	construction_entity = "gasignitor_phase_02_entity"
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { substellar_compressor_1 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 2700
	resources = {
		category = giga_megastructures
		cost = { alloys = 3500 unity = @giga_mega_unity_cost }
		upkeep = {
			alloys = 10
			energy = 10
		}
	}

	potential = { NOT = { has_global_flag = compressor_disabled } }
	possible = { from = { has_technology = giga_tech_substellar_compressor } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.1703 } }	# Notification
	}
}

substellar_compressor_4 = {
	entity = "gasignitor_phase_04_entity"
	construction_entity = "gasignitor_compression_phase_entity"
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { substellar_compressor_2 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 7200
	resources = {
		category = giga_megastructures
		cost = {
			alloys = 5000
			energy = 30000
			unity = @giga_mega_unity_cost
		}
		upkeep = {
			alloys = 10
			energy = 50
		}
		produces = { physics_research = 50 }
	}

	potential = { NOT = { has_global_flag = compressor_disabled } }
	possible = { from = { has_technology = giga_tech_substellar_compressor } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = { country_event = { id = giga_dialog.1704 } }	# Notification
		fromfrom.planet = {
			change_planet_size = -10
			if = {
				limit = { has_modifier = helioforming_candidate }
				change_planet_size = 2
			}
		}
	}
}

substellar_compressor_5 = {
	entity = "gasignitor_phase_02_entity"
	construction_entity = "gasignitor_phase_02_entity"
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { substellar_compressor_4 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 360
	resources = {
		category = giga_megastructures
		cost = { energy = 5000 unity = @giga_mega_unity_cost }
	}

	potential = { NOT = { has_global_flag = compressor_disabled } }
	possible = { from = { has_technology = giga_tech_substellar_compressor } }

	ai_weight = { factor = value:giga_ai_base_continue } # If we can build it, we will build it
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			country_event = { id = giga_dialog.1705 }	# Notification
			set_country_flag = has_built_or_repaired_megastructure	# Triggers Galactic Wonders
			if = {
				limit = {
					NOR = {
						has_global_flag = giga_achievements_disabled
						has_country_flag = giga_achievement_68
					}
				}
				set_country_flag = giga_achievement_68
				set_timed_country_flag = { flag = giga_achievement_68_notification days = 30 }
				giga_achievement_sound = yes
			}
		}

		fromfrom = {
			upgrade_megastructure_to = substellar_compressor_6

			# Humans renaming Jupiter -> Lucifer, a reference to 2010: Odyssey Two
			if = {
				limit = { 
					# check the country are the appropriate humans
					root.from = {
						or = {
							has_country_flag = human_1 # UNE
							has_country_flag = human_2 # COM
						}
					}
					# check that the ignited planet is jupiter
					solar_system = { has_star_flag = sol_system }
					planet = { 
						or = {
							has_planet_flag = jupiter
							and = {
								is_moon = no
								giga_is_gas_giant = yes
								planet_size = 27 #35 (earlier stage subtracts 8)	
							}
						}
					}
				}
				planet = {
					set_name = NAME_giga_Lucifer
				}
			}

			planet = {
				change_pc = pc_gigaignited_star
				if = {		limit = { has_modifier = "giga_brown_dwarf" }		remove_modifier = "giga_brown_dwarf" }
				else_if = {	limit = { has_modifier = "helioforming_candidate" }	remove_modifier = "helioforming_candidate" }
				else = { change_planet_size = -2 }
				every_moon = {
					if = {
						limit = { giga_is_frozen = yes }
						random_list = {
							1 = {
								change_pc = pc_ll_temperate
								giga_reroll_lifeless = yes
								add_modifier = { modifier = "lifeless_temperate" days = -1 }
								if = {
									limit = {
										exists = orbital_station
									}
									orbital_station = {
										delete_fleet = this
									}
								}
								if = {
									limit = { space_owner = { is_country_type = katzenartig_imperium } }
									set_planet_flag = katzen_planet_colonized
									planet_event = { id = giga_katzen.110 }
								}
							}
							1 = {
								change_pc = pc_melted_frozen
								reroll_deposits = yes
							}
						}
					}
					else_if = {
						limit = { OR = { giga_is_barren_cn = yes } }
						random_list = {
							1 = {
								change_pc = pc_ll_temperate
								giga_reroll_lifeless = yes
								add_modifier = { modifier = "lifeless_temperate" days = -1 }
								if = {
									limit = {
										exists = orbital_station
									}
									orbital_station = {
										delete_fleet = this
									}
								}
								if = {
									limit = { space_owner = { is_country_type = katzenartig_imperium } }
									set_planet_flag = katzen_planet_colonized
									planet_event = { id = giga_katzen.110 }
								}
							}
							1 = { add_modifier = { modifier = "terraforming_candidate" days = -1 } }
						}
					}
					else_if = {
						limit = { giga_is_molten = yes }
						change_pc = pc_ll_torrid
						if = {
							limit = {
								exists = orbital_station
							}
							orbital_station = {
								delete_fleet = this
							}
						}
					}
					else_if = {
						limit = { NOR = { giga_is_gas_giant = yes is_a_habitable_planet_megastructure = yes} }
						add_modifier = { modifier = "terraforming_candidate" days = -1 }
					}
				}
			}

			if = { #EaW planet
				limit = { ROOT.fromfrom.solar_system = { has_star_flag = eaw_system } }
				ROOT.fromfrom.solar_system = {
					# check if stuff is their default
					# if player messed with something just leave it, 
					# it's probably something they care about like a terraformed world
					if = {
						limit = { is_star_class = sc_t }
						set_star_class = sc_m
					}
					random_system_planet = {
						limit = { has_planet_flag = giga_dirt_behemoth }
						if = {
							limit = { is_planet_class = pc_t_star_big }
							set_planet_size = 28
							change_pc = pc_gigaignited_star
						}
					}
					random_system_planet = {
						limit = { has_planet_flag = giga_dirt_planet_1 }
						if = {
							limit = { is_planet_class = pc_barren }
							change_pc = pc_ll_temperate
							add_modifier = {
								modifier = lifeless_temperate
								days = -1
							}
						}
					}
					random_system_planet = {
						limit = { has_planet_flag = giga_dirt_planet_2 }
						if = {
							limit = { is_planet_class = pc_barren_cold }
							add_modifier = {
								modifier = terraforming_candidate
								days = -1
							}
						}
					}
					random_system_planet = {
						limit = { has_planet_flag = giga_dirt_planet_3 }
						if = {
							limit = { is_planet_class = pc_frozen }
							change_pc = pc_melted_frozen
						}
					}
					random_system_planet = {
						limit = { has_planet_flag = giga_dirt_planet_4 }
						if = {
							limit = { is_planet_class = pc_barren_cold }
							change_pc = pc_ll_temperate
							add_modifier = {
								modifier = lifeless_temperate
								days = -1
							}
						}
					}
					random_system_planet = {
						limit = { has_planet_flag = giga_dirt_planet_5 }
						if = {
							limit = { is_planet_class = pc_frozen }
							change_pc = pc_melted_frozen
						}
					}
					if = {
						limit = {
							exists = event_target:giga_eaw_country
							event_target:giga_eaw_country = { is_country_type = primitive }
						}
						starbase = {
							owner = { country_event = { id = giga_flavor_systems.2007 } } 
						}
					}
					if = {
						limit = { NOT = { starbase = { owner = { is_country = event_target:giga_eaw_country } } } }
						random_system_planet = {
							limit = { has_planet_flag = giga_eaw_planet }
							if = {
								limit = { exists = observation_outpost_owner }
								observation_outpost = { dismantle = yes }
							}
							every_owned_pop = { kill_pop = yes }
							change_pc = pc_molten
							if = {
								limit = { has_modifier = giga_eaw_faust_planet_modifier }
								remove_modifier = giga_eaw_faust_planet_modifier
							}
						}
						if = {
							limit = { exists = event_target:giga_eaw_country }
							event_target:giga_eaw_country = { destroy_country = yes }
						}
					}
				}
			}
		}
	}
}

substellar_compressor_6 = {
	entity = "gasignitor_phase_02_entity"
	construction_entity = "gasignitor_phase_02_entity"
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { substellar_compressor_5 }
	upgrade_desc = hide
	potential = { always = no }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 0
	resources = {
		category = giga_megastructures
		upkeep = { alloys = 10 }
		produces = {
			energy = 350
			physics_research = 150
		}
	}
}

# Dismantle
substellar_compressor_7 = {
	entity = ""
	portrait = "GFX_megastructure_gas_giant"
	upgrade_from = { substellar_compressor_6 }

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	build_time = 360
	resources = {
		category = giga_megastructures
		cost = {
			energy = 1000
			alloys = -5000
		}
	}

	potential = { NOT = { has_global_flag = compressor_disabled } }
	possible = { 
		from = { 
			hidden_trigger = {
				is_ai = no # AI please, stop taking these down
			}  
			has_technology = giga_tech_substellar_compressor 
		} 
	}

	ai_weight = { factor = 0 } # the completed substellar compressor is very good and very cheap, the AI should not take it down
	on_build_complete = {
		remove_megastructure = fromfrom
		fromfrom.planet = {
			giga_clear_has_mega_flag = yes
		}
	}
}