asteroid_artillery_0 = {
	entity = "giga_asteroid_artillery_cover_entity"
	construction_entity = "giga_asteroid_artillery_cover_entity"
	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	prerequisites = { giga_tech_asteroid_artillery }

	build_time = 1800
	resources = {
		category = giga_kilostructures
		cost = {
			alloys = 5000
			unity = @giga_kilo_unity_cost
		}
		upkeep = { energy = 5 }
	}

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}

	potential = {
		has_technology = giga_tech_asteroid_artillery
		NOT = { has_global_flag = asteroid_artillery_disabled }
	}

	possible = {
		custom_tooltip = { fail_text = "requires_inside_border"		is_inside_border = from }
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "must_build_around_asteroid"			is_asteroid = yes }
			custom_tooltip = { fail_text = "requires_no_anomaly"				has_anomaly = no }
			custom_tooltip = { fail_text = "requires_no_existing_megastructure"	planet_has_no_megastructure = yes }
			custom_tooltip = { fail_text = "requires_survey_not_habitable"		is_surveyed = { who = prev.from status = yes } is_planet_habitable = no }
		}
	}

	ai_weight = {
		# weight = 100	# Default = 100

		# # Is this system a good location?
		# modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		# modifier = { factor = 0.5	any_neighbor_system = { any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } } }

		# modifier = { factor = 0.00 from = { has_country_flag = has_recently_built_asteroid_artillery } }

		# # How many of this megastructure can the AI build?
		# modifier = {
		# 	factor = 0.5
		# 	from = {
		# 		OR = {
		# 			has_megastructure = asteroid_artillery_0
		# 			has_megastructure = asteroid_artillery_1
		# 		}
		# 	}
		# }

		weight = value:giga_ai_base_mega #it's a kilo but it's important later
		mult = value:giga_ai_strategic_location
		mult = value:giga_ai_prevent_spam|MEGA|asteroid_artillery|
		mult = value:giga_ai_build_low_priority
		mult = value:giga_ai_unlock_low_priority
		mult = value:giga_ai_cap_availability_boost
	}

	on_build_start = { apply_giga_bulwark_trad_build_speed = yes }

	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = {
			save_event_target_as = giga_planet
			if = { limit = { exists = orbital_station } orbital_station = { dismantle = yes } }
			set_planet_flag = megastructure
			giga_set_has_mega_flag = yes
		}
		from = {
			set_timed_country_flag = { flag = has_recently_built_asteroid_artillery years = 10 }
			country_event = { id = giga_artillery.1004 }	# Notification
		}
		spawn_megastructure = {
			type = "asteroid_artillery_1"
			planet = ROOT.fromfrom.planet
			owner = ROOT.from
		}
		remove_megastructure = fromfrom
	}
}

asteroid_artillery_1_fake = {
	entity = ""
	construction_entity = "giga_asteroid_artillery_new_gun_entity"
	portrait = "GFX_megastructure_asteroid_artillery"
	upgrade_from = { asteroid_artillery_0 }
	place_entity_on_planet_plane = no

	build_time = 1800
	resources = {
		category = giga_kilostructures
		cost = { alloys = 5000 unity = @giga_kilo_unity_cost }
	}

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	potential = { NOT = { has_global_flag = asteroid_artillery_disabled } }
	possible = { from = { has_technology = giga_tech_asteroid_artillery } }

	ai_weight = { 
		factor = value:giga_ai_base_continue
	}
	on_build_start = { apply_giga_bulwark_trad_build_speed = yes }
	on_build_complete = {
	}
}

asteroid_artillery_1 = {
	entity = ""
	construction_entity = "giga_asteroid_artillery_new_gun_entity"
	portrait = "GFX_megastructure_asteroid_artillery"
	upgrade_from = { asteroid_artillery_config asteroid_artillery_repaired }
	place_entity_on_planet_plane = no

	build_time = 1800
	resources = {
		category = giga_kilostructures
		cost = { alloys = 5000 unity = @giga_kilo_unity_cost }
	}

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	potential = { NOT = { has_global_flag = asteroid_artillery_disabled } }
	possible = { from = { has_technology = giga_tech_asteroid_artillery } }

	ai_weight = { 
		factor = value:giga_ai_base_continue
	}
	on_build_start = { apply_giga_bulwark_trad_build_speed = yes }
	on_build_complete = {
		save_event_target_as = giga_system
		if = { limit = { exists = fromfrom.planet } fromfrom.planet = { save_event_target_as = giga_planet } }
		from = {
			if = {
				limit = { NOT = { has_country_flag = already_setup_max_ast_artillery_points } }
				change_variable = {
					which = asteroid_artillery_points_max
					value = 3
				}
				set_country_flag = already_setup_max_ast_artillery_points
			}
		}
		if = {
			limit = { fromfrom.planet = { NOR = { has_planet_flag = asteroid_has_artillery has_planet_flag = just_repaired_ast_art } } }
			from = { country_event = { id = giga_artillery.1005 } }
			fromfrom.planet = { 
				change_pc = pc_giga_asteroid_artillery 
				set_planet_flag = asteroid_has_artillery
				solar_system = {
					assign_giga_asteroids_id = yes
				}
				set_variable = {
					which = asteroid_artillery_hp
					value = 0
				}
				set_variable = {
					which = asteroid_artillery_dmg
					value = 0
				}
				set_variable = {
					which = asteroid_artillery_atkspeed
					value = 0
				}
				set_variable = {
					which = asteroid_artillery_range
					value = 0
				}
				set_variable = {
					which = asteroid_artillery_pen
					value = 0
				}
				set_variable = {
					which = asteroid_artillery_tracking
					value = 0
				}
				set_variable = {
					which = asteroid_artillery_points_used
					value = 0
				}
				set_variable = {
					which = asteroid_artillery_points_current
					value = 5
				}
				#costs
				set_variable = {
					which = asteroid_artillery_hp_cost
					value = 500
				}
				set_variable = {
					which = asteroid_artillery_dmg_cost
					value = 500
				}
				set_variable = {
					which = asteroid_artillery_atkspeed_cost
					value = 500
				}
				set_variable = {
					which = asteroid_artillery_range_cost
					value = 500
				}
				set_variable = {
					which = asteroid_artillery_pen_cost
					value = 500
				}
				set_variable = {
					which = asteroid_artillery_tracking_cost
					value = 500
				}
				#modifiers
				set_variable = {
					which = asteroid_artillery_hp_perc
					value = 0
				}
				set_variable = {
					which = asteroid_artillery_dmg_perc
					value = 0
				}
				set_variable = {
					which = asteroid_artillery_atkspeed_perc
					value = 0
				}
				set_variable = {
					which = asteroid_artillery_range_perc
					value = 0
				}
				set_variable = {
					which = asteroid_artillery_pen_perc
					value = 0
				}
				set_variable = {
					which = asteroid_artillery_tracking_perc
					value = 0
				}
			}
			create_fleet = { 
				name = "Asteroid Artillery" 
				settings = { spawn_debris = no } 
				effect = { 
					set_owner = prev.space_owner
					create_ship = { 
						name = "Asteroid Artillery" 
						random_existing_design = asteroid_artillery
					}
					set_location = {
						target = event_target:giga_planet
						distance = 0.5
						angle = 0
					}
					set_variable = {
						which = giga_asteroid_ship_id
						value = ROOT.fromfrom.planet.giga_asteroid_id
					}
					apply_ast_art_tech_upgrades = yes
				}
			}
		}
		if = {
			limit = { fromfrom.planet = { has_planet_flag = just_repaired_ast_art } }
			fromfrom.planet = { 
				remove_planet_flag = just_repaired_ast_art
				set_planet_flag = asteroid_has_artillery
			}
			create_fleet = { 
				name = "Asteroid Artillery" 
				settings = { spawn_debris = no } 
				effect = { 
					set_owner = prev.space_owner
					create_ship = { 
						name = "Asteroid Artillery" 
						random_existing_design = asteroid_artillery
					}
					set_location = {
						target = event_target:giga_planet
						distance = 0.5
						angle = 0
					}
					set_variable = {
						which = giga_asteroid_ship_id
						value = ROOT.fromfrom.planet.giga_asteroid_id
					}
					reapply_ast_art_modifiers = yes
					apply_ast_art_tech_upgrades = yes
				}
			}
		}
		fromfrom = {
			set_variable = {
				which = giga_asteroid_megastructure_id
				value = ROOT.fromfrom.planet.giga_asteroid_id
			}
		}
	}
}

asteroid_artillery_config = {
	entity = ""
	construction_entity = "giga_asteroid_artillery_new_gun_entity"
	portrait = "GFX_megastructure_asteroid_artillery"
	upgrade_from = { asteroid_artillery_1 }
	place_entity_on_planet_plane = no

	# construction_blocks_and_blocked_by = none # BLOCKING TEST
	

	build_time = 0

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	potential = { is_ai = no NOR = { has_global_flag = asteroid_artillery_disabled has_global_flag = upgrading_ast_art } }
	possible = { from = { has_technology = giga_tech_asteroid_artillery } }

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_complete = {
		set_global_flag = upgrading_ast_art
		from = { 
			random_owned_megastructure = {
				limit = { is_megastructure_type = asteroid_artillery_config }
				planet = { save_global_event_target_as = asteroid_artillery_location }
				solar_system = {
					# spawn_megastructure = {
					# 	type = "asteroid_artillery_1"
					# 	planet = PREV.planet
					# 	owner = root
					# }
					random_fleet_in_system = {
						limit = {
							check_variable = {
								which = giga_asteroid_ship_id
								value = event_target:asteroid_artillery_location.giga_asteroid_id
							}
						}
						save_global_event_target_as = asteroid_artillery_ship_config_target
					}
				}
				# remove_megastructure = this
				upgrade_megastructure_to = asteroid_artillery_1
				finish_upgrade = yes
			}
			country_event = { id = giga_artillery.1000 }
		}	# Notification
	}
}

asteroid_artillery_ruined = {
	entity = "giga_asteroid_artillery_core_ruined_entity"
	construction_entity = "giga_asteroid_artillery_core_ruined_entity"
	portrait = "GFX_megastructure_asteroid_artillery"
	place_entity_on_planet_plane = no
	resources = { category = giga_kilostructures }

	potential = { always = no }
	possible = { always = no }

	ai_weight = { factor = 10 } # If we can build it, we will build it
}

asteroid_artillery_repaired = {
	entity = "giga_asteroid_artillery_core_entity"
	construction_entity = "giga_asteroid_artillery_core_entity"
	portrait = "GFX_megastructure_asteroid_artillery"
	upgrade_from = { asteroid_artillery_ruined }
	place_entity_on_planet_plane = no

	build_time = 1350
	resources = {
		category = giga_kilostructures
		cost = { alloys = 2500 unity = @giga_kilo_repair_unity_cost }
	}

	outliner_trigger = {
		exists = owner
		NOT = { has_megastructure_flag = giga_outliner_hidden_by_@owner }
	}
	
	potential = { NOT = { has_global_flag = asteroid_artillery_disabled } }
	possible = { 
		from = { has_technology = giga_tech_asteroid_artillery } 
		from = { is_same_empire = prev.space_owner }
		NOT = {
			any_fleet_in_system = {
				is_in_combat = yes
			}
		}
	}

	ai_weight = { 
		factor = value:giga_ai_base_repairs
	}
	on_build_start = { apply_giga_bulwark_trad_build_speed = yes }
	on_build_complete = {
		save_event_target_as = giga_system
		fromfrom.planet = {
			set_planet_flag = just_repaired_ast_art
		}
		# spawn_megastructure = {
		# 	type = "asteroid_artillery_1"
		# 	planet = ROOT.fromfrom.planet
		# 	owner = ROOT.from
		# }
		from = { country_event = { id = giga_artillery.1003 } }	# Notification
		# remove_megastructure = fromfrom
		fromfrom = {
			upgrade_megastructure_to = asteroid_artillery_1
			finish_upgrade = yes
		}
	}
}