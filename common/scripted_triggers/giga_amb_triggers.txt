# should this country type use supertensiles?
giga_country_uses_supertensiles = {
	or = {
		is_country_type = default # early out before the expensive check
		is_country_type = fallen_empire
		is_country_type = awakened_fallen_empire

		# fairly expensive check as it uses an any_country
		giga_is_playable_country = yes
	}
}

# does this country have an origin which needs an initial boost
giga_has_amb_important_origin = {
	or = {
    	# flag for other mods to mark their origins important
    	has_country_flag = giga_amb_third_party_origin
	
		has_origin = origin_void_dwellers
		has_origin = origin_void_machines
		giga_has_frameworld_origin = yes
		has_origin = origin_incohesive
		has_origin = origin_elysium
		has_origin = origin_arc_welders

		#has_civic = xvcv_mdlc_civic_planet_cracker # machine & robot expansion planet crackers
	}
}

giga_has_any_supertensiles_district_or_building = {
	or = {
		has_building = building_giga_megaworkshop_hub
		has_building = building_giga_megaworkshop
		has_district = district_giga_supertensiles
		has_district = district_giga_frameworld_supertensiles
		has_district = district_giga_birch_ktisma_supertensiles
	}
}

#Used to destroy buildings that require the SR but lack it.
giga_buildings_no_living_metal = {
	exists = owner
	owner = {
		is_ai = yes
		has_deficit = sr_living_metal
		resource_stockpile_compare = { #can buy on market
			resource = energy
			value < 1500
		}
	}
}

#Used in the buildings file to determine if the country has the needed Strategic Resource.
giga_buildings_has_living_metal = {
	exists = owner
	OR = {
		owner = {
			has_monthly_income = {
				resource = sr_living_metal
				value >= 2
			}
		}
		AND = {
			free_building_slots > 1
			owner = {
				has_monthly_income = {
					resource = sr_living_metal
					value > 0
				}
			}
		}
	}
}

giga_living_metal_infusion_plant_upkeep_affordable = {
	has_monthly_income = {
		resource = energy
		value > 2
	}
	has_monthly_income = {
		resource = sr_living_metal
		value > 1
	}
}

giga_amb_supertensiles_exception = {
	or = {
		is_megastructure_type = ehof_pgate_unknown
		is_megastructure_type = ehof_pgate_gateway
		is_megastructure_type = lgate_base
	}
}

giga_has_supertensiles_designation = {
	or = {
		has_designation = col_giga_supertensiles_foundry
		has_designation = col_giga_habitat_supertensiles_foundry
	}
}

