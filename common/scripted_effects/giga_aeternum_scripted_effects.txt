create_birch_aeternum = {
	if = {
		limit = { has_global_flag = giga_core_aeternum_4 }
		create_species = {
			name = "Lux-Aeternite"
			plural = "Lux-Aeternites"
			class = aeternite
			portrait = lux_aeternite
			homeworld = THIS
			traits = {
				trait = trait_bionic_implants
				trait = trait_fertile
				trait = trait_psionic
			}
			effect = {
				save_global_event_target_as = birch_aeternites
			}
		}
	}
	else = {
		create_species = {
			name = "Aeternite"
			plural = "Aeternites"
			class = HUM
			portrait = humanoid_04
			homeworld = THIS
			traits = {
				trait = trait_pc_continental_preference
				trait = trait_robust
				trait = trait_erudite
				trait = trait_fertile
				trait = trait_psionic
			}
			effect = {
				save_global_event_target_as = birch_aeternites
			}
		}
	}

	if = {
		limit = {
			host_has_dlc = "Lithoids Species Pack"
			host_has_dlc = "Synthetic Dawn Story Pack"
		}
		create_species = {
			name = "Psikosynthetic"
			plural = "Psikosynthetics"
			class = MACHINE
			portrait = lith_machine
			homeworld = THIS
			traits = {
				trait = trait_mechanical
				trait = trait_robot_learning_algorithms
				trait = trait_robot_propaganda_machines
				trait = trait_robot_emotion_emulators
				trait = trait_robot_logic_engines
				trait = trait_psionic
			}
			effect = {
				save_global_event_target_as = birch_aeternites_robots
			}
		}
	}
	else = {
		create_species = {
			name = "Psikosynthetic"
			plural = "Psikosynthetics"
			class = MACHINE
			portrait = hum_robot_red
			homeworld = THIS
			traits = {
				trait = trait_mechanical
				trait = trait_robot_learning_algorithms
				trait = trait_robot_propaganda_machines
				trait = trait_robot_emotion_emulators
				trait = trait_robot_logic_engines
				trait = trait_psionic
			}
			effect = {
				save_global_event_target_as = birch_aeternites_robots
			}
		}
	}

	create_pop = {
		species = event_target:birch_aeternites
		count = 250
	}
	create_pop = {
		species = event_target:birch_aeternites_robots
		count = 100
	}
	create_country = {
		species = event_target:birch_aeternites
		name = "Aeternum"
		type = dormant_aeternum
		authority = auth_imperial
		ethos = {
			ethic = ethic_fanatic_materialist
			ethic = ethic_xenophobe
		}
		origin = origin_default
		civics = {
			civic = civic_citizen_service
			civic = civic_agrarian_idyll
		}
		flag = {
			icon={
				category="blocky"
				file="flag_blocky_12.dds"
			}
			background={
				category="backgrounds"
				file="hex.dds"
			}
			colors={
				"pink"
				"burgundy"
				"null"
				"null"
			}
		}
		effect = {
			create_leader = {
				class = official
				species = event_target:birch_aeternites
				name = "Alice CXLIII"
				gender = female
				skill = 10
				set_age = 10000
				traits = {
					trait = katzen_trait_elite
				}
				effect = {
					set_leader_flag = birch_alice
					save_global_event_target_as = birch_alice
				}
			}
			set_leader = event_target:birch_alice
			set_country_flag = protected_from_queen_storm
			set_country_flag = birch_aeternum
			set_graphical_culture = fallen_empire_01
			save_global_event_target_as = birch_aeternum
			create_leader = {
				class = scientist
				species = event_target:birch_aeternites_robots
				name = "Diplomatic Unit"
				skill = 10
				set_age = 2500
				traits = {
					trait = katzen_trait_elite
				}
				effect = {
					set_leader_flag = birch_aeternum_robot
					save_global_event_target_as = birch_aeternum_robot
				}
			}
			if = {
				limit = { has_global_flag = giga_core_aeternum_4 }
				create_ship_design = { design = "Valistus-Suojelija" }
				add_ship_design = last_created_design
				set_country_flag = sbtg_aeternum
				set_name = "Lux Aeternum"
				change_country_flag = {
					icon={
						category="blocky"
						file="flag_blocky_12.dds"
					}
					background={
						category="backgrounds"
						file="hex.dds"
					}
					colors={
						"yellow"
						"yellow"
						"null"
						"null"
					}
				}
			}
			else = { #just so it doesn't have 2 designs for starbases to guarantee its always the right design chosen
				create_ship_design = { design = "Suojelija" }
				add_ship_design = last_created_design
			}
		}
	}
	set_owner = event_target:birch_aeternum
	set_capital = yes
	while = {
		count = 10
		create_army = { name = "Aeternite Guardians"	owner = last_created_country species = event_target:birch_aeternites type = "aeternite_defender"}
	}
	add_modifier = {
		modifier = birch_world_grand_shield
		days = -1
	}
	if = {
		limit = { NOT = { has_global_flag = giga_core_aeternum_4 } }
		add_modifier = {
			modifier = aeternum_birch_world
			days = -1
		}
	}
	else = {
		add_modifier = {
			modifier = aeternum_birch_world_acot
			days = -1
		}
	}

	if = {
		limit = { has_global_flag = giga_core_aeternum_4 }
		event_target:birch_aeternites = {
			if = {
				limit = { has_trait = trait_pc_void_birch_preference }
				modify_species = {
					remove_trait = trait_pc_void_birch_preference
				}
			}
			if = {
				limit = { has_trait = trait_pc_birch_preference }
				modify_species = {
				remove_trait = trait_pc_birch_preference
				}
			}
		}
		change_pc = pc_void_birch #Lol
		while = {
			count = 30
			create_army = { name = "Aeternite Guardians"	owner = last_created_country species = event_target:birch_aeternites type = "aeternite_defender"} 
		}
		set_name = "Aeternal Aiondia"
	}
}

create_aeternite_home_platform = {
	create_fleet = { #home defenses
		name = "Kodinpuolustus"
		settings = {
			spawn_debris = no
			can_change_composition = no
			can_disband = no
			can_change_leader = no
			can_upgrade = no
		}
		effect = {
			set_owner = event_target:birch_aeternum
			while = {
				count = 6
				create_ship = {
					name = "Huoltaja"
					design = "Huoltaja"
					upgradable = no
				}
			}
			if = {
				limit = { has_global_flag = giga_core_aeternum_2 }
				while = {
					count = 3
					create_ship = {
						name = "Huoltaja"
						design = "Huoltaja"
						upgradable = no
					}
				}
			}
			if = {
				limit = { has_global_flag = giga_core_aeternum_3 }
				while = {
					count = 6
					create_ship = {
						name = "Huoltaja"
						design = "Huoltaja"
						upgradable = no
					}
				}
			}
			if = {
				limit = { has_global_flag = giga_core_aeternum_4 }
				while = {
					count = 8
					create_ship = {
						name = "Valistus-Huoltaja"
						design = "Valistus-Huoltaja"
						upgradable = no
					}
				}
			}
			set_formation_scale = 5
			set_fleet_flag = aeternum_home_platform
			set_location = {
				target = PREV
				distance = 1
				angle = 0
			}
		}
	}
}

create_aeternite_platform = {
	if = {
		limit = { has_global_flag = giga_core_aeternum_4 }
		create_ship = {
			name = random
			design = "Valistus-Sietamotan"
			graphical_culture = owner
		}
	}
	else = {
		create_ship = {
			name = random
			design = "Sietamotan"
			graphical_culture = owner
		}
	}
}

create_aeternum_home_citadel = {
	create_starbase = {
		size = "starbase_aet"

		owner = event_target:birch_aeternum

		# module = "gun_battery" #Given to their base
		# module = "gun_battery"
		# module = "gun_battery"
		# module = "gun_battery"
		# module = "gun_battery"
		# module = "gun_battery"

		building = "target_uplink_computer"

		effect = {
			while = {
				count = 20
				create_aeternite_platform = yes
			}
			if = {
				limit = {
					solar_system = {has_star_flag = giga_galactic_center}
				}
				while = {
					count = 10
					create_aeternite_platform = yes
				}
				starbase = {
					set_starbase_building = {
						slot = 2
						building = giga_aiondia_listening_post
					}
				}
			}
		}
	}
}

create_aeternum_citadel = {
	create_starbase = {
		size = "starbase_aet"

		owner = event_target:birch_aeternum

		# module = "gun_battery" #Given to their base
		# module = "gun_battery"
		# module = "gun_battery"
		# module = "gun_battery"
		# module = "gun_battery"
		# module = "gun_battery"

		building = "target_uplink_computer"

		effect = {
			while = {
				count = 3
				create_aeternite_platform = yes
			}
		}
	}
}
spawn_aeternite_guardian_fleet = {
	event_target:birch_aeternum = {
		create_leader = {
			class = commander
			species = event_target:birch_aeternites_robots
			name = random
			skill = 10
		}
	}
	create_fleet = {
		name = "Puolustuslaivasto"
		settings = {
			spawn_debris = no
			can_change_composition = no
			can_disband = no
			can_change_leader = no
			can_upgrade = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:birch_aeternum
			if = {
				limit = { NOT = { has_global_flag = giga_core_aeternum_4 } }
				while = {
					count = 100
					create_ship = {
						name = random
						design = "Lennokki"
						prefix = no
					}
				}
				while = {
					count = 40
					create_ship = {
						name = random
						design = "Laasti"
						prefix = no
					}
				}
				while = {
					count = 16
					create_ship = {
						name = random
						design = "Ohittaa"
						prefix = no
					}
				}
				while = {
					count = 6
					create_ship = {
						name = random
						design = "Havittaja"
						prefix = no
					}
				}
				while = {
					count = 1
					create_ship = {
						name = random
						design = "Klaneetta"
						prefix = no
					}
				}
				if = {
					limit = { has_global_flag = giga_core_aeternum_2 }
					while = {
						count = 10
						create_ship = {
							name = random
							design = "Ohittaa"
							prefix = no
						}
					}
					while = {
						count = 5
						create_ship = {
							name = random
							design = "Havittaja"
							prefix = no
						}
					}
				}
				if = {
					limit = { has_global_flag = giga_core_aeternum_3 }
					while = {
						count = 25
						create_ship = {
							name = random
							design = "Ohittaa"
							prefix = no
						}
					}
					while = {
						count = 15
						create_ship = {
							name = random
							design = "Havittaja"
							prefix = no
						}
					}
					while = {
						count = 1
						create_ship = {
							name = random
							design = "Klaneetta"
							prefix = no
						}
					}
				}
			}
			else = {
				while = {
					count = 46
					create_ship = {
						name = random
						design = "Valistus-Lennokki"
						prefix = no
					}
				}
				while = {
					count = 32
					create_ship = {
						name = random
						design = "Valistus-Laasti"
						prefix = no
					}
				}
				while = {
					count = 20
					create_ship = {
						name = random
						design = "Valistus-Ohittaa"
						prefix = no
					}
				}
				while = {
					count = 8
					create_ship = {
						name = random
						design = "Valistus-Havittaja"
						prefix = no
					}
				}
				while = {
					count = 1
					create_ship = {
						name = random
						design = "Valistus-Klaneetta"
						prefix = no
					}
				}
			}
			set_formation_scale = 1.5
			set_location = {
				target = PREV
				distance = 15
				angle = random
			}
			assign_leader = last_created_leader
		}
	}
}

spawn_aeternite_guardian_awaken_fleet = { #big fleet for when they awaken
	event_target:birch_aeternum = {
		create_leader = {
			class = commander
			species = event_target:birch_aeternites
			name = random
			skill = 6
		}
	}
	create_fleet = {
		name = "Puolustuslaivasto"
		settings = {
			spawn_debris = no
			can_change_composition = yes
			can_disband = no
			can_upgrade = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:birch_aeternum
			if = {
				limit = { NOT = { has_global_flag = giga_core_aeternum_4 } }
				while = {
					count = 100
					create_ship = {
						name = random
						design = "Lennokki"
						prefix = no
					}
				}
				while = {
					count = 40
					create_ship = {
						name = random
						design = "Laasti"
						prefix = no
					}
				}
				while = {
					count = 16
					create_ship = {
						name = random
						design = "Ohittaa"
						prefix = no
					}
				}
				while = {
					count = 6
					create_ship = {
						name = random
						design = "Havittaja"
						prefix = no
					}
				}
				while = {
					count = 1
					create_ship = {
						name = random
						design = "Klaneetta"
						prefix = no
					}
				}
				if = {
					limit = { has_global_flag = giga_core_aeternum_2 }
					while = {
						count = 16
						create_ship = {
							name = random
							design = "Ohittaa"
							prefix = no
						}
					}
					while = {
						count = 6
						create_ship = {
							name = random
							design = "Havittaja"
							prefix = no
						}
					}
				}
				if = {
					limit = { has_global_flag = giga_core_aeternum_3 }
					while = {
						count = 30
						create_ship = {
							name = random
							design = "Ohittaa"
							prefix = no
						}
					}
					while = {
						count = 25
						create_ship = {
							name = random
							design = "Havittaja"
							prefix = no
						}
					}
					while = {
						count = 1
						create_ship = {
							name = random
							design = "Klaneetta"
							prefix = no
						}
					}
				}
			}
			else = {
				while = {
					count = 64
					create_ship = {
						name = random
						design = "Valistus-Lennokki"
						prefix = no
					}
				}
				while = {
					count = 32
					create_ship = {
						name = random
						design = "Valistus-Laasti"
						prefix = no
					}
				}
				while = {
					count = 12
					create_ship = {
						name = random
						design = "Valistus-Ohittaa"
						prefix = no
					}
				}
				while = {
					count = 4
					create_ship = {
						name = random
						design = "Valistus-Havittaja"
						prefix = no
					}
				}
				while = {
					count = 1
					create_ship = {
						name = random
						design = "Valistus-Klaneetta"
						prefix = no
					}
				}
			}
			set_formation_scale = 1.5
			set_location = {
				target = PREV
				distance = 15
				angle = random
			}
			assign_leader = last_created_leader
		}
	}
}

spawn_aeternite_strike_fleet = { #big fleet
	event_target:birch_aeternum = {
		create_leader = {
			class = commander
			species = event_target:birch_aeternites
			name = random
			skill = 6
		}
	}
	create_fleet = {
		name = "Askuryhmo"
		settings = {
			spawn_debris = no
			can_change_composition = yes
			can_disband = no
			can_upgrade = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:birch_aeternum
			if = {
				limit = { NOT = { has_global_flag = giga_core_aeternum_4 } }
				while = {
					count = 60
					create_ship = {
						name = random
						design = "Lennokki"
						prefix = no
					}
				}
				while = {
					count = 20
					create_ship = {
						name = random
						design = "Laasti"
						prefix = no
					}
				}
				while = {
					count = 10
					create_ship = {
						name = random
						design = "Ohittaa"
						prefix = no
					}
				}
				while = {
					count = 4
					create_ship = {
						name = random
						design = "Havittaja"
						prefix = no
					}
				}
				if = {
					limit = { has_global_flag = giga_core_aeternum_2 }
					while = {
						count = 8
						create_ship = {
							name = random
							design = "Ohittaa"
							prefix = no
						}
					}
					while = {
						count = 4
						create_ship = {
							name = random
							design = "Havittaja"
							prefix = no
						}
					}
				}
				if = {
					limit = { has_global_flag = giga_core_aeternum_3 }
					while = {
						count = 16
						create_ship = {
							name = random
							design = "Ohittaa"
							prefix = no
						}
					}
					while = {
						count = 8
						create_ship = {
							name = random
							design = "Havittaja"
							prefix = no
						}
					}
				}
			}
			else = {
				while = {
					count = 32
					create_ship = {
						name = random
						design = "Valistus-Lennokki"
						prefix = no
					}
				}
				while = {
					count = 16
					create_ship = {
						name = random
						design = "Valistus-Laasti"
						prefix = no
					}
				}
				while = {
					count = 8
					create_ship = {
						name = random
						design = "Valistus-Ohittaa"
						prefix = no
					}
				}
				while = {
					count = 2
					create_ship = {
						name = random
						design = "Valistus-Havittaja"
						prefix = no
					}
				}
				while = {
					count = 1
					create_ship = {
						name = random
						design = "Valistus-Klaneetta"
						prefix = no
					}
				}
			}
			set_formation_scale = 1.5
			set_location = {
				target = PREV
				distance = 15
				angle = random
			}
			assign_leader = last_created_leader
		}
	}
}

spawn_aeternite_assault_fleet = { #fast fleet
	event_target:birch_aeternum = {
		create_leader = {
			class = commander
			species = event_target:birch_aeternites
			name = random
			skill = 6
		}
	}
	create_fleet = {
		name = "Hyakkoysjoukko"
		settings = {
			spawn_debris = no
			can_change_composition = yes
			can_disband = no
			can_upgrade = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:birch_aeternum
			if = {
				limit = { NOT = { has_global_flag = giga_core_aeternum_4 } }
				while = {
					count = 80
					create_ship = {
						name = random
						design = "Lennokki"
						prefix = no
					}
				}
				while = {
					count = 40
					create_ship = {
						name = random
						design = "Laasti"
						prefix = no
					}
				}
				if = {
					limit = { has_global_flag = giga_core_aeternum_2 }
					while = {
						count = 20
						create_ship = {
							name = random
							design = "Lennokki"
							prefix = no
						}
					}
					while = {
						count = 10
						create_ship = {
							name = random
							design = "Laasti"
							prefix = no
						}
					}
				}
				if = {
					limit = { has_global_flag = giga_core_aeternum_3 }
					while = {
						count = 30
						create_ship = {
							name = random
							design = "Lennokki"
							prefix = no
						}
					}
					while = {
						count = 25
						create_ship = {
							name = random
							design = "Laasti"
							prefix = no
						}
					}
				}
			}
			else = {
				while = {
					count = 32
					create_ship = {
						name = random
						design = "Valistus-Lennokki"
						prefix = no
					}
				}
				while = {
					count = 12
					create_ship = {
						name = random
						design = "Valistus-Laasti"
						prefix = no
					}
				}
			}
			set_formation_scale = 1.5
			set_location = {
				target = PREV
				distance = 15
				angle = random
			}
			assign_leader = last_created_leader
		}
	}
}

spawn_aeternite_troop_fleet = {
	create_fleet = { #Spawn a simple task force of panzers
		name = "Armeika"
		settings = {
			spawn_debris = no
			can_upgrade = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:birch_aeternum
			while = {
				count = 20
				create_army_transport = {
					army_type = aeternite_attacker
					species = event_target:birch_aeternites_robots
				}
			}
			set_location = {
				target = PREV
				distance = 10
				angle = random
			}
		}
	}
}

spawn_aeternite_colossus_fleet = {
	create_fleet = {
		name = "Klaneettakrakkausyksikko"
		settings = {
			spawn_debris = no
			can_upgrade = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:birch_aeternum
			if = {
				limit = { NOT = { has_global_flag = giga_core_aeternum_4 } }
				create_ship = {
					name = random
					design = "Klaneettakrakkausyksikko"
					prefix = no
				}
			}
			else = {
				create_ship = {
					name = random
					design = "Valistus-Klaneettakrakkausyksikko"
					prefix = no
				}
			}
			set_location = {
				target = PREV
				distance = 10
				angle = random
			}
		}
	}
}

spawn_aeternite_small_fleet = { #warforge fleet
	event_target:birch_aeternum = {
		create_leader = {
			class = commander
			species = event_target:birch_aeternites
			name = random
			skill = 6
			effect = {
				save_global_event_target_as = aet_admiral
			}
		}
	}
	create_fleet = {
		name = "Pianalaivosta"
		settings = {
			spawn_debris = no
			can_upgrade = no
			uses_naval_capacity = no
		}
		effect = {
			if = {
				limit = { NOT = { has_global_flag = giga_core_aeternum_4 } }
				set_owner = event_target:birch_aeternum
				while = {
					count = 30
					create_ship = {
						name = random
						design = "Lennokki"
						prefix = no
					}
				}
				while = {
					count = 15
					create_ship = {
						name = random
						design = "Laasti"
						prefix = no
					}
				}
				if = {
					limit = { has_global_flag = giga_core_aeternum_2 }
					while = {
						count = 8
						create_ship = {
							name = random
							design = "Lennokki"
							prefix = no
						}
					}
					while = {
						count = 10
						create_ship = {
							name = random
							design = "Laasti"
							prefix = no
						}
					}
				}
				if = {
					limit = { has_global_flag = giga_core_aeternum_3 }
					while = {
						count = 12
						create_ship = {
							name = random
							design = "Lennokki"
							prefix = no
						}
					}
					while = {
						count = 16
						create_ship = {
							name = random
							design = "Laasti"
							prefix = no
						}
					}
				}
			}
			else = {
				while = {
					count = 16
					create_ship = {
						name = random
						design = "Valistus-Lennokki"
						prefix = no
					}
				}
				while = {
					count = 8
					create_ship = {
						name = random
						design = "Valistus-Laasti"
						prefix = no
					}
				}
			}
			set_formation_scale = 1.5
			set_location = {
				target = PREV
				distance = 15
				angle = random
			}
			assign_leader = event_target:aet_admiral
		}
	}
}

spawn_aeternite_big_fleet = { #warforge fleet (capital ships)
	event_target:birch_aeternum = {
		create_leader = {
			class = commander
			species = event_target:birch_aeternites
			name = random
			skill = 6
			effect = {
				save_global_event_target_as = aet_admiral
			}
		}
	}
	create_fleet = {
		name = "Saarilaivosta"
		settings = {
			spawn_debris = no
			can_upgrade = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:birch_aeternum
			if = {
				limit = { NOT = { has_global_flag = giga_core_aeternum_4 } }
				while = {
					count = 16
					create_ship = {
						name = random
						design = "Lennokki"
						prefix = no
					}
				}
				while = {
					count = 8
					create_ship = {
						name = random
						design = "Laasti"
						prefix = no
					}
				}
				while = {
					count = 4
					create_ship = {
						name = random
						design = "Ohittaa"
						prefix = no
					}
				}
				while = {
					count = 2
					create_ship = {
						name = random
						design = "Havittaja"
						prefix = no
					}
				}
				if = {
					limit = { has_global_flag = giga_core_aeternum_2 }
					while = {
						count = 4
						create_ship = {
							name = random
							design = "Ohittaa"
							prefix = no
						}
					}
					while = {
						count = 2
						create_ship = {
							name = random
							design = "Havittaja"
							prefix = no
						}
					}
				}
				if = {
					limit = { has_global_flag = giga_core_aeternum_3 }
					while = {
						count = 6
						create_ship = {
							name = random
							design = "Ohittaa"
							prefix = no
						}
					}
					while = {
						count = 4
						create_ship = {
							name = random
							design = "Havittaja"
							prefix = no
						}
					}
				}
			}
			else = {
				while = {
					count = 12
					create_ship = {
						name = random
						design = "Valistus-Lennokki"
						prefix = no
					}
				}
				while = {
					count = 6
					create_ship = {
						name = random
						design = "Valistus-Laasti"
						prefix = no
					}
				}
				while = {
					count = 4
					create_ship = {
						name = random
						design = "Valistus-Ohittaa"
						prefix = no
					}
				}
				while = {
					count = 2
					create_ship = {
						name = random
						design = "Valistus-Havittaja"
						prefix = no
					}
				}
				while = {
					count = 1
					create_ship = {
						name = random
						design = "Valistus-Klaneetta"
						prefix = no
					}
				}
			}
			set_formation_scale = 1.5
			set_location = {
				target = PREV
				distance = 15
				angle = random
			}
			assign_leader = event_target:aet_admiral
		}
	}
}

set_aeternum_comms_scramble_modifier = {
	if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_comms_scramble_count value = 0 } } }
		add_modifier = {
			modifier = aeternum_comms_scramble_1
			days = 1080
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_comms_scramble_count value = 1 } } }
		add_modifier = {
			modifier = aeternum_comms_scramble_2
			days = 1080
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_comms_scramble_count value = 2 } } }
		add_modifier = {
			modifier = aeternum_comms_scramble_3
			days = 1080
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_comms_scramble_count value = 3 } } }
		add_modifier = {
			modifier = aeternum_comms_scramble_4
			days = 1080
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_comms_scramble_count value = 4 } } }
		add_modifier = {
			modifier = aeternum_comms_scramble_5
			days = 1080
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_comms_scramble_count value = 5 } } }
		add_modifier = {
			modifier = aeternum_comms_scramble_6
			days = 1080
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_comms_scramble_count value = 6 } } }
		add_modifier = {
			modifier = aeternum_comms_scramble_7
			days = 1080
		}
	}
}

remove_aeternum_comms_scramble_modifiers = {
	if = {
		limit = { has_modifier = aeternum_comms_scramble_1 }
		remove_modifier = aeternum_comms_scramble_1
	}
	if = {
		limit = { has_modifier = aeternum_comms_scramble_2 }
		remove_modifier = aeternum_comms_scramble_2
	}
	if = {
		limit = { has_modifier = aeternum_comms_scramble_3 }
		remove_modifier = aeternum_comms_scramble_3
	}
	if = {
		limit = { has_modifier = aeternum_comms_scramble_4 }
		remove_modifier = aeternum_comms_scramble_4
	}
	if = {
		limit = { has_modifier = aeternum_comms_scramble_5 }
		remove_modifier = aeternum_comms_scramble_5
	}
	if = {
		limit = { has_modifier = aeternum_comms_scramble_6 }
		remove_modifier = aeternum_comms_scramble_6
	}
	if = {
		limit = { has_modifier = aeternum_comms_scramble_7 }
		remove_modifier = aeternum_comms_scramble_7
	}
}

set_aeternum_speed_debuff = {
	if = {
		limit = {
			NOR = {
				has_modifier = aeternum_comms_scramble_speed_1
				has_modifier = aeternum_comms_scramble_speed_2
				has_modifier = aeternum_comms_scramble_speed_3
				has_modifier = aeternum_comms_scramble_speed_4
				has_modifier = aeternum_comms_scramble_speed_5
				has_modifier = aeternum_comms_scramble_speed_6
				has_modifier = aeternum_comms_scramble_speed_7
			}
		}
		add_modifier = {
			modifier = aeternum_comms_scramble_speed_1
			days = -1
		}
	}
	else_if = {
		limit = { has_modifier = aeternum_comms_scramble_speed_1 }
		remove_modifier = aeternum_comms_scramble_speed_1
		add_modifier = {
			modifier = aeternum_comms_scramble_speed_2
			days = -1
		}
	}
	else_if = {
		limit = { has_modifier = aeternum_comms_scramble_speed_2 }
		remove_modifier = aeternum_comms_scramble_speed_2
		add_modifier = {
			modifier = aeternum_comms_scramble_speed_3
			days = -1
		}
	}
	else_if = {
		limit = { has_modifier = aeternum_comms_scramble_speed_3 }
		remove_modifier = aeternum_comms_scramble_speed_3
		add_modifier = {
			modifier = aeternum_comms_scramble_speed_4
			days = -1
		}
	}
	else_if = {
		limit = { has_modifier = aeternum_comms_scramble_speed_4 }
		remove_modifier = aeternum_comms_scramble_speed_4
		add_modifier = {
			modifier = aeternum_comms_scramble_speed_5
			days = -1
		}
	}
	else_if = {
		limit = { has_modifier = aeternum_comms_scramble_speed_5 }
		remove_modifier = aeternum_comms_scramble_speed_5
		add_modifier = {
			modifier = aeternum_comms_scramble_speed_6
			days = -1
		}
	}
	else_if = {
		limit = { has_modifier = aeternum_comms_scramble_speed_6 }
		remove_modifier = aeternum_comms_scramble_speed_6
		add_modifier = {
			modifier = aeternum_comms_scramble_speed_7
			days = -1
		}
	}
}

set_aeternum_intel_scramble_modifier = {
	if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_intel_scramble_count value = 0 } } }
		add_modifier = {
			modifier = aeternum_intel_scramble_1
			days = 720
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_intel_scramble_count value = 1 } } }
		add_modifier = {
			modifier = aeternum_intel_scramble_2
			days = 720
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_intel_scramble_count value = 2 } } }
		add_modifier = {
			modifier = aeternum_intel_scramble_3
			days = 720
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_intel_scramble_count value = 3 } } }
		add_modifier = {
			modifier = aeternum_intel_scramble_4
			days = 720
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_intel_scramble_count value = 4 } } }
		add_modifier = {
			modifier = aeternum_intel_scramble_5
			days = 720
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_intel_scramble_count value = 5 } } }
		add_modifier = {
			modifier = aeternum_intel_scramble_6
			days = 720
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_intel_scramble_count value = 6 } } }
		add_modifier = {
			modifier = aeternum_intel_scramble_7
			days = 720
		}
	}
}

remove_aeternum_intel_scramble_modifiers = {
	if = {
		limit = { has_modifier = aeternum_intel_scramble_1 }
		remove_modifier = aeternum_intel_scramble_1
	}
	if = {
		limit = { has_modifier = aeternum_intel_scramble_2 }
		remove_modifier = aeternum_intel_scramble_2
	}
	if = {
		limit = { has_modifier = aeternum_intel_scramble_3 }
		remove_modifier = aeternum_intel_scramble_3
	}
	if = {
		limit = { has_modifier = aeternum_intel_scramble_4 }
		remove_modifier = aeternum_intel_scramble_4
	}
	if = {
		limit = { has_modifier = aeternum_intel_scramble_5 }
		remove_modifier = aeternum_intel_scramble_5
	}
	if = {
		limit = { has_modifier = aeternum_intel_scramble_6 }
		remove_modifier = aeternum_intel_scramble_6
	}
	if = {
		limit = { has_modifier = aeternum_intel_scramble_7 }
		remove_modifier = aeternum_intel_scramble_7
	}
}

remove_aeternum_infra_bombing_modifiers = {
	if = {
		limit = { has_modifier = aeternum_infra_bomb_1 }
		remove_modifier = aeternum_infra_bomb_1
	}
	if = {
		limit = { has_modifier = aeternum_infra_bomb_2 }
		remove_modifier = aeternum_infra_bomb_2
	}
	if = {
		limit = { has_modifier = aeternum_infra_bomb_3 }
		remove_modifier = aeternum_infra_bomb_3
	}
	if = {
		limit = { has_modifier = aeternum_infra_bomb_4 }
		remove_modifier = aeternum_infra_bomb_4
	}
}

set_aeternum_infra_bombing_modifier = {
	if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_infra_bombing_count value = 0 } } }
		add_modifier = {
			modifier = aeternum_infra_bomb_1
			days = 720
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_infra_bombing_count value = 1 } } }
		add_modifier = {
			modifier = aeternum_infra_bomb_2
			days = 720
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_infra_bombing_count value = 2 } } }
		add_modifier = {
			modifier = aeternum_infra_bomb_3
			days = 720
		}
	}
	else_if = {
		limit = { event_target:birch_aeternum = { check_variable = { which = aeternum_infra_bombing_count value = 3 } } }
		add_modifier = {
			modifier = aeternum_infra_bomb_4
			days = 720
		}
	}
}

increase_aeternite_intel = {
	if = {
		limit = {
			has_global_flag = aeternum_vanquished
		}
		if = {
			limit = {
				check_variable = {
					which = aeternite_intel_count
					value < 70
				}
			}
			change_variable = {
				which = aeternite_intel_count
				value = 1
			}
		}
	}
	else = {
		if = {
			limit = {
				check_variable = {
					which = aeternite_intel_count
					value < 30
				}
			}
			change_variable = {
				which = aeternite_intel_count
				value = 1
			}
			if = {
				limit = {
					check_variable = {
						which = aeternite_intel_count
						value = 30
					}
				}
				set_country_flag = giga_achievement_aet4
				set_timed_country_flag = { flag = giga_achievement_aet4_notification days = 30 }
				giga_achievement_sound = yes
			}
			clear_aet_intel_modifier = yes
			apply_aet_intel_modifier = yes
		}
	}
}

apply_aet_intel_modifier = {
	if = { limit = { check_variable = { which = aeternite_intel_count value = 1 } } add_modifier = { modifier = aet_intel_1 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 2 } } add_modifier = { modifier = aet_intel_2 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 3 } } add_modifier = { modifier = aet_intel_3 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 4 } } add_modifier = { modifier = aet_intel_4 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 5 } } add_modifier = { modifier = aet_intel_5 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 6 } } add_modifier = { modifier = aet_intel_6 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 7 } } add_modifier = { modifier = aet_intel_7 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 8 } } add_modifier = { modifier = aet_intel_8 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 9 } } add_modifier = { modifier = aet_intel_9 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 10 } } add_modifier = { modifier = aet_intel_10 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 11 } } add_modifier = { modifier = aet_intel_11 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 12 } } add_modifier = { modifier = aet_intel_12 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 13 } } add_modifier = { modifier = aet_intel_13 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 14 } } add_modifier = { modifier = aet_intel_14 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 15 } } add_modifier = { modifier = aet_intel_15 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 16 } } add_modifier = { modifier = aet_intel_16 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 17 } } add_modifier = { modifier = aet_intel_17 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 18 } } add_modifier = { modifier = aet_intel_18 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 19 } } add_modifier = { modifier = aet_intel_19 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 20 } } add_modifier = { modifier = aet_intel_20 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 21 } } add_modifier = { modifier = aet_intel_21 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 22 } } add_modifier = { modifier = aet_intel_22 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 23 } } add_modifier = { modifier = aet_intel_23 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 24 } } add_modifier = { modifier = aet_intel_24 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 25 } } add_modifier = { modifier = aet_intel_25 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 26 } } add_modifier = { modifier = aet_intel_26 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 27 } } add_modifier = { modifier = aet_intel_27 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 28 } } add_modifier = { modifier = aet_intel_28 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 29 } } add_modifier = { modifier = aet_intel_29 days = -1 } }
	if = { limit = { check_variable = { which = aeternite_intel_count value = 30 } } add_modifier = { modifier = aet_intel_30 days = -1 } }
}

clear_aet_intel_modifier = {
	if = { limit = { has_modifier = aet_intel_1 } remove_modifier = aet_intel_1 }
	if = { limit = { has_modifier = aet_intel_2 } remove_modifier = aet_intel_2 }
	if = { limit = { has_modifier = aet_intel_3 } remove_modifier = aet_intel_3 }
	if = { limit = { has_modifier = aet_intel_4 } remove_modifier = aet_intel_4 }
	if = { limit = { has_modifier = aet_intel_5 } remove_modifier = aet_intel_5 }
	if = { limit = { has_modifier = aet_intel_6 } remove_modifier = aet_intel_6 }
	if = { limit = { has_modifier = aet_intel_7 } remove_modifier = aet_intel_7 }
	if = { limit = { has_modifier = aet_intel_8 } remove_modifier = aet_intel_8 }
	if = { limit = { has_modifier = aet_intel_9 } remove_modifier = aet_intel_9 }
	if = { limit = { has_modifier = aet_intel_10 } remove_modifier = aet_intel_10 }
	if = { limit = { has_modifier = aet_intel_11 } remove_modifier = aet_intel_11 }
	if = { limit = { has_modifier = aet_intel_12 } remove_modifier = aet_intel_12 }
	if = { limit = { has_modifier = aet_intel_13 } remove_modifier = aet_intel_13 }
	if = { limit = { has_modifier = aet_intel_14 } remove_modifier = aet_intel_14 }
	if = { limit = { has_modifier = aet_intel_15 } remove_modifier = aet_intel_15 }
	if = { limit = { has_modifier = aet_intel_16 } remove_modifier = aet_intel_16 }
	if = { limit = { has_modifier = aet_intel_17 } remove_modifier = aet_intel_17 }
	if = { limit = { has_modifier = aet_intel_18 } remove_modifier = aet_intel_18 }
	if = { limit = { has_modifier = aet_intel_19 } remove_modifier = aet_intel_19 }
	if = { limit = { has_modifier = aet_intel_20 } remove_modifier = aet_intel_20 }
	if = { limit = { has_modifier = aet_intel_21 } remove_modifier = aet_intel_21 }
	if = { limit = { has_modifier = aet_intel_22 } remove_modifier = aet_intel_22 }
	if = { limit = { has_modifier = aet_intel_23 } remove_modifier = aet_intel_23 }
	if = { limit = { has_modifier = aet_intel_24 } remove_modifier = aet_intel_24 }
	if = { limit = { has_modifier = aet_intel_25 } remove_modifier = aet_intel_25 }
	if = { limit = { has_modifier = aet_intel_26 } remove_modifier = aet_intel_26 }
	if = { limit = { has_modifier = aet_intel_27 } remove_modifier = aet_intel_27 }
	if = { limit = { has_modifier = aet_intel_28 } remove_modifier = aet_intel_28 }
	if = { limit = { has_modifier = aet_intel_29 } remove_modifier = aet_intel_29 }
	if = { limit = { has_modifier = aet_intel_30 } remove_modifier = aet_intel_30 }
}

decrease_exp_attack_10 = {
	if = {
		limit = {
			check_variable = {
				which = aet_exp_attack
				value > 10
			}
		}
		change_variable = {
			which = aet_exp_attack
			value = -10
		}
	}
}

increase_exp_attack_10 = {
	change_variable = {
		which = aet_exp_attack
		value = 10
	}
}

decrease_exp_hp_10 = {
	if = {
		limit = {
			check_variable = {
				which = aet_exp_hp
				value > 10
			}
		}
		change_variable = {
			which = aet_exp_hp
			value = -10
		}
	}
}

increase_exp_hp_10 = {
	change_variable = {
		which = aet_exp_hp
		value = 10
	}
}

decrease_exp_smarts_10 = {
	if = {
		limit = {
			check_variable = {
				which = aet_exp_smarts
				value > 10
			}
		}
		change_variable = {
			which = aet_exp_smarts
			value = -10
		}
	}
}

increase_exp_smarts_10 = {
	change_variable = {
		which = aet_exp_smarts
		value = 10
	}
}

set_random_aet_resilience_value = {
	random_list = {
		1 = { set_variable = { which = aet_anomaly_resilience value = 50 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 60 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 70 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 80 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 90 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 100 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 110 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 120 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 130 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 140 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 150 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 160 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 170 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 180 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 190 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 200 } }
	}
}

set_random_aet_resilience_encounter = {
	random_list = {
		2 = { set_variable = { which = aet_anomaly_complexity value = 10 } }
		2 = { set_variable = { which = aet_anomaly_resilience value = 20 } }
		2 = { set_variable = { which = aet_anomaly_resilience value = 30 } }
		2 = { set_variable = { which = aet_anomaly_resilience value = 40 } }
		2 = { set_variable = { which = aet_anomaly_resilience value = 50 } }
		3 = { set_variable = { which = aet_anomaly_resilience value = 60 } }
		3 = { set_variable = { which = aet_anomaly_resilience value = 70 } }
		3 = { set_variable = { which = aet_anomaly_resilience value = 80 } }
		2 = { set_variable = { which = aet_anomaly_resilience value = 90 } }
		2 = { set_variable = { which = aet_anomaly_resilience value = 100 } }
		2 = { set_variable = { which = aet_anomaly_resilience value = 110 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 120 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 130 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 140 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 150 } }
	}
}

set_random_aet_resilience_value_civilization = {
	random_list = {
		1 = { set_variable = { which = aet_anomaly_resilience value = 20 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 40 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 60 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 80 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 100 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 120 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 140 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 160 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 180 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 200 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 220 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 240 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 260 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 280 } }
		1 = { set_variable = { which = aet_anomaly_resilience value = 300 } }
	}
}

set_random_aet_complexity_value = {
	random_list = {
		1 = { set_variable = { which = aet_anomaly_complexity value = 50 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 60 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 70 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 80 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 90 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 100 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 110 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 120 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 130 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 140 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 150 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 160 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 170 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 180 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 190 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 200 } }
	}
}

set_random_aet_complexity_value_100_200 = { #add or subtract later for other ranges
	random_list = {
		1 = { set_variable = { which = aet_anomaly_complexity value = 100 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 110 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 120 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 130 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 140 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 150 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 160 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 170 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 180 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 190 } }
		1 = { set_variable = { which = aet_anomaly_complexity value = 200 } }
	}
}

calculate_aet_success_chance_practicality = {
	set_variable = {
		which = aet_success_chance
		value = aet_exp_smarts
	}
	divide_variable = { #divide the team's smart by the complexity
		which = aet_success_chance
		value = aet_anomaly_complexity
	}
	divide_variable = { #divide by 1.4 again
		which = aet_success_chance
		value = 1.4
	}
	multiply_variable = { #times 100 for %
		which = aet_success_chance
		value = 100
	}
	#round it down
	if = { limit = { check_variable = { which = aet_success_chance value > 95 } } set_variable = { which = aet_success_chance value = 95 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 90 } } set_variable = { which = aet_success_chance value = 90 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 85 } } set_variable = { which = aet_success_chance value = 85 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 80 } } set_variable = { which = aet_success_chance value = 80 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 75 } } set_variable = { which = aet_success_chance value = 75 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 70 } } set_variable = { which = aet_success_chance value = 70 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 65 } } set_variable = { which = aet_success_chance value = 65 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 60 } } set_variable = { which = aet_success_chance value = 60 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 55 } } set_variable = { which = aet_success_chance value = 55 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 50 } } set_variable = { which = aet_success_chance value = 50 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 45 } } set_variable = { which = aet_success_chance value = 45 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 40 } } set_variable = { which = aet_success_chance value = 40 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 35 } } set_variable = { which = aet_success_chance value = 35 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 30 } } set_variable = { which = aet_success_chance value = 30 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 25 } } set_variable = { which = aet_success_chance value = 25 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 20 } } set_variable = { which = aet_success_chance value = 20 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 15 } } set_variable = { which = aet_success_chance value = 15 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 10 } } set_variable = { which = aet_success_chance value = 10 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 05 } } set_variable = { which = aet_success_chance value = 05 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 00 } } set_variable = { which = aet_success_chance value = 05 } }
}

calculate_aet_success_chance_strength = {
	set_variable = {
		which = aet_success_chance
		value = aet_exp_attack
	}
	divide_variable = {
		which = aet_success_chance
		value = aet_anomaly_resilience
	}
	multiply_variable = { #times 100 for %
		which = aet_success_chance
		value = 100
	}
	#round it down
	if = { limit = { check_variable = { which = aet_success_chance value > 95 } } set_variable = { which = aet_success_chance value = 95 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 90 } } set_variable = { which = aet_success_chance value = 90 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 85 } } set_variable = { which = aet_success_chance value = 85 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 80 } } set_variable = { which = aet_success_chance value = 80 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 75 } } set_variable = { which = aet_success_chance value = 75 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 70 } } set_variable = { which = aet_success_chance value = 70 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 65 } } set_variable = { which = aet_success_chance value = 65 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 60 } } set_variable = { which = aet_success_chance value = 60 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 55 } } set_variable = { which = aet_success_chance value = 55 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 50 } } set_variable = { which = aet_success_chance value = 50 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 45 } } set_variable = { which = aet_success_chance value = 45 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 40 } } set_variable = { which = aet_success_chance value = 40 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 35 } } set_variable = { which = aet_success_chance value = 35 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 30 } } set_variable = { which = aet_success_chance value = 30 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 25 } } set_variable = { which = aet_success_chance value = 25 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 20 } } set_variable = { which = aet_success_chance value = 20 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 15 } } set_variable = { which = aet_success_chance value = 15 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 10 } } set_variable = { which = aet_success_chance value = 10 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 05 } } set_variable = { which = aet_success_chance value = 05 } }
	else_if = { limit = { check_variable = { which = aet_success_chance value > 00 } } set_variable = { which = aet_success_chance value = 05 } }
	change_variable = {
		which = aet_success_chance
		value = 5
	}
}

calculate_aet_success_chance_strength_2 = { #if theres two success chances
	set_variable = {
		which = aet_success_chance_2
		value = aet_exp_attack
	}
	divide_variable = { #divide the team's smart by the complexity
		which = aet_success_chance_2
		value = aet_anomaly_resilience
	}
	multiply_variable = { #times 100 for %
		which = aet_success_chance_2
		value = 100
	}
	#round it down
	if = { limit = { check_variable = { which = aet_success_chance_2 value > 95 } } set_variable = { which = aet_success_chance_2 value = 95 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 90 } } set_variable = { which = aet_success_chance_2 value = 90 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 85 } } set_variable = { which = aet_success_chance_2 value = 85 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 80 } } set_variable = { which = aet_success_chance_2 value = 80 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 75 } } set_variable = { which = aet_success_chance_2 value = 75 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 70 } } set_variable = { which = aet_success_chance_2 value = 70 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 65 } } set_variable = { which = aet_success_chance_2 value = 65 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 60 } } set_variable = { which = aet_success_chance_2 value = 60 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 55 } } set_variable = { which = aet_success_chance_2 value = 55 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 50 } } set_variable = { which = aet_success_chance_2 value = 50 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 45 } } set_variable = { which = aet_success_chance_2 value = 45 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 40 } } set_variable = { which = aet_success_chance_2 value = 40 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 35 } } set_variable = { which = aet_success_chance_2 value = 35 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 30 } } set_variable = { which = aet_success_chance_2 value = 30 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 25 } } set_variable = { which = aet_success_chance_2 value = 25 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 20 } } set_variable = { which = aet_success_chance_2 value = 20 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 15 } } set_variable = { which = aet_success_chance_2 value = 15 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 10 } } set_variable = { which = aet_success_chance_2 value = 10 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 05 } } set_variable = { which = aet_success_chance_2 value = 05 } }
	else_if = { limit = { check_variable = { which = aet_success_chance_2 value > 00 } } set_variable = { which = aet_success_chance_2 value = 05 } }
	change_variable = {
		which = aet_success_chance_2
		value = 5
	}
}

execute_aet_expedition_anomaly = {
	random_list = {
		0 = {
			aet_give_result_good = yes
			modifier = { add = 5 check_variable = { which = aet_success_chance value = 05 } }
			modifier = { add = 10 check_variable = { which = aet_success_chance value = 10 } }
			modifier = { add = 15 check_variable = { which = aet_success_chance value = 15 } }
			modifier = { add = 20 check_variable = { which = aet_success_chance value = 20 } }
			modifier = { add = 25 check_variable = { which = aet_success_chance value = 25 } }
			modifier = { add = 30 check_variable = { which = aet_success_chance value = 30 } }
			modifier = { add = 35 check_variable = { which = aet_success_chance value = 35 } }
			modifier = { add = 40 check_variable = { which = aet_success_chance value = 40 } }
			modifier = { add = 45 check_variable = { which = aet_success_chance value = 45 } }
			modifier = { add = 50 check_variable = { which = aet_success_chance value = 50 } }
			modifier = { add = 55 check_variable = { which = aet_success_chance value = 55 } }
			modifier = { add = 60 check_variable = { which = aet_success_chance value = 60 } }
			modifier = { add = 65 check_variable = { which = aet_success_chance value = 65 } }
			modifier = { add = 70 check_variable = { which = aet_success_chance value = 70 } }
			modifier = { add = 75 check_variable = { which = aet_success_chance value = 75 } }
			modifier = { add = 80 check_variable = { which = aet_success_chance value = 80 } }
			modifier = { add = 85 check_variable = { which = aet_success_chance value = 85 } }
			modifier = { add = 90 check_variable = { which = aet_success_chance value = 90 } }
			modifier = { add = 95 check_variable = { which = aet_success_chance value = 95 } }
			modifier = { add = 100 check_variable = { which = aet_success_chance value > 95 } }
		}
		100 = {
			aet_give_result_bad = yes
			modifier = { add = -5 check_variable = { which = aet_success_chance value = 05 } }
			modifier = { add = -10 check_variable = { which = aet_success_chance value = 10 } }
			modifier = { add = -15 check_variable = { which = aet_success_chance value = 15 } }
			modifier = { add = -20 check_variable = { which = aet_success_chance value = 20 } }
			modifier = { add = -25 check_variable = { which = aet_success_chance value = 25 } }
			modifier = { add = -30 check_variable = { which = aet_success_chance value = 30 } }
			modifier = { add = -35 check_variable = { which = aet_success_chance value = 35 } }
			modifier = { add = -40 check_variable = { which = aet_success_chance value = 40 } }
			modifier = { add = -45 check_variable = { which = aet_success_chance value = 45 } }
			modifier = { add = -50 check_variable = { which = aet_success_chance value = 50 } }
			modifier = { add = -55 check_variable = { which = aet_success_chance value = 55 } }
			modifier = { add = -60 check_variable = { which = aet_success_chance value = 60 } }
			modifier = { add = -65 check_variable = { which = aet_success_chance value = 65 } }
			modifier = { add = -70 check_variable = { which = aet_success_chance value = 70 } }
			modifier = { add = -75 check_variable = { which = aet_success_chance value = 75 } }
			modifier = { add = -80 check_variable = { which = aet_success_chance value = 80 } }
			modifier = { add = -85 check_variable = { which = aet_success_chance value = 85 } }
			modifier = { add = -90 check_variable = { which = aet_success_chance value = 90 } }
			modifier = { add = -95 check_variable = { which = aet_success_chance value = 95 } }
			modifier = { add = -100 check_variable = { which = aet_success_chance value > 95 } }
		}
	}
}

randomize_aet_loc = {
	random_list = {
		1 = { set_variable = { which = aet_loc_value value = 1 } }
		1 = { set_variable = { which = aet_loc_value value = 2 } }
		1 = { set_variable = { which = aet_loc_value value = 3 } }
	}
}

randomize_aet_loc_4 = {
	random_list = {
		1 = { set_variable = { which = aet_loc_value value = 1 } }
		1 = { set_variable = { which = aet_loc_value value = 2 } }
		1 = { set_variable = { which = aet_loc_value value = 3 } }
		1 = { set_variable = { which = aet_loc_value value = 4 } }
	}
}

pit_aet_strength_against_failure_resilience = {
	set_variable = {
		which = aet_exp_integ_damage
		value = aet_anomaly_resilience
	}
	subtract_variable = { #calculate damage
		which = aet_exp_integ_damage
		value = aet_exp_attack
	}
}

aet_give_result_good = {
	if = {
		limit = {
			has_country_flag = aet_exp_ancient_ruins
		}
		remove_country_flag = aet_exp_ancient_ruins
		randomize_aet_loc = yes
		country_event = { id = giga_aeternum.43241 days = 40 random = 20 }
	}
	if = {
		limit = {
			has_country_flag = aet_exp_crashed_ship
		}
		remove_country_flag = aet_exp_crashed_ship
		randomize_aet_loc = yes
		country_event = { id = giga_aeternum.43251 days = 40 random = 20 }
	}
	if = {
		limit = {
			has_country_flag = aet_exp_crashed_freighter
		}
		remove_country_flag = aet_exp_crashed_freighter
		randomize_aet_loc_4 = yes
		country_event = { id = giga_aeternum.43261 days = 40 random = 20 }
	}
	if = {
		limit = {
			has_country_flag = aet_exp_civ_diplomacy
			OR = {
				has_country_flag = aet_exp_civ_primitive
				has_country_flag = aet_exp_civ_space
				has_country_flag = aet_exp_civ_fe
			}
		}
		remove_country_flag = aet_exp_civ_diplomacy
		randomize_aet_loc_4 = yes
		country_event = { id = giga_aeternum.43271 days = 90 random = 90 }
	}
	if = {
		limit = {
			has_country_flag = aet_exp_civ_conquest
			OR = {
				has_country_flag = aet_exp_civ_primitive
				has_country_flag = aet_exp_civ_space
				has_country_flag = aet_exp_civ_fe
			}
		}
		remove_country_flag = aet_exp_civ_conquest
		randomize_aet_loc_4 = yes
		country_event = { id = giga_aeternum.43273 days = 90 random = 90 }
	}
	if = {
		limit = {
			has_country_flag = aet_exp_giga_ocean
		}
		remove_country_flag = aet_exp_giga_ocean
		randomize_aet_loc_4 = yes
		country_event = { id = giga_aeternum.43281 days = 40 random = 20 }
	}
	if = {
		limit = {
			has_country_flag = aet_exp_giant_tank_diplomacy
		}
		remove_country_flag = aet_exp_giant_tank_diplomacy
		country_event = { id = giga_aeternum.43291 days = 40 random = 20 } #hi
	}
	if = {
		limit = {
			has_country_flag = aet_exp_giant_tank_boom
		}
		remove_country_flag = aet_exp_giant_tank_boom
		country_event = { id = giga_aeternum.43297 days = 40 random = 20 } #boom!
	}
	if = {
		limit = {
			has_country_flag = aet_random_hostile_encounter
		}
		set_variable = { which = aet_exp_integ_damage value = 0 }
		remove_country_flag = aet_random_hostile_encounter
		country_event = { id = giga_aeternum.4330 days = 20 random = 20 } #we won
	}
}

aet_give_result_bad = {
	if = {
		limit = {
			has_country_flag = aet_exp_ancient_ruins
		}
		remove_country_flag = aet_exp_ancient_ruins
		event_target:aet_exp_name_tool = { set_name = "Antique Ruins" }
		random_list = {
			1 = { country_event = { id = giga_aeternum.43253 days = 40 random = 20 } } #nothing
			2 = { country_event = { id = giga_aeternum.43242 days = 40 random = 20 } } #collapse (ruins)
		}
	}
	if = {
		limit = {
			has_country_flag = aet_exp_crashed_ship
		}
		remove_country_flag = aet_exp_crashed_ship
		event_target:aet_exp_name_tool = { set_name = "Crashed Starship" }
		country_event = { id = giga_aeternum.43253 days = 40 random = 20 }
	}
	if = {
		limit = {
			has_country_flag = aet_exp_crashed_freighter
		}
		remove_country_flag = aet_exp_crashed_freighter
		event_target:aet_exp_name_tool = { set_name = "Humongous Vessel" }
		random_list = {
			1 = { country_event = { id = giga_aeternum.43253 days = 40 random = 20 } } #nothing
			2 = { pit_aet_strength_against_failure_resilience = yes country_event = { id = giga_aeternum.43262 days = 20 random = 20 } } #pew pew
		}
	}
	if = {
		limit = {
			has_country_flag = aet_exp_civ_diplomacy
			OR = {
				has_country_flag = aet_exp_civ_primitive
				has_country_flag = aet_exp_civ_space
				has_country_flag = aet_exp_civ_fe
			}
		}
		remove_country_flag = aet_exp_civ_diplomacy
		randomize_aet_loc_4 = yes
		country_event = { id = giga_aeternum.43272 days = 40 random = 90 }
	}
	if = {
		limit = {
			has_country_flag = aet_exp_civ_conquest
			OR = {
				has_country_flag = aet_exp_civ_primitive
				has_country_flag = aet_exp_civ_space
				has_country_flag = aet_exp_civ_fe
			}
		}
		remove_country_flag = aet_exp_civ_conquest
		randomize_aet_loc_4 = yes
		country_event = { id = giga_aeternum.43274 days = 40 random = 90 }
	}
	if = {
		limit = {
			has_country_flag = aet_exp_giga_ocean
		}
		remove_country_flag = aet_exp_giga_ocean
		event_target:aet_exp_name_tool = { set_name = "Gigantic Ocean" }
		country_event = { id = giga_aeternum.43253 days = 40 random = 20 } #nothing
	}
	if = {
		limit = {
			OR = {
				has_country_flag = aet_exp_giant_tank_diplomacy
				has_country_flag = aet_exp_giant_tank_boom
			}
		}
		if = {
			limit = { has_country_flag = aet_exp_giant_tank_diplomacy }
			remove_country_flag = aet_exp_giant_tank_diplomacy
		}
		if = {
			limit = { has_country_flag = aet_exp_giant_tank_boom }
			remove_country_flag = aet_exp_giant_tank_boom
		}
		pit_aet_strength_against_failure_resilience = yes
		country_event = { id = giga_aeternum.43296 days = 40 random = 20 } #they shoot back ("ono", as rose would say)
	}
	if = {
		limit = {
			has_country_flag = aet_random_hostile_encounter
		}
		remove_country_flag = aet_random_hostile_encounter
		pit_aet_strength_against_failure_resilience = yes
		country_event = { id = giga_aeternum.4330 days = 40 random = 20 } #we lost
	}
}

clear_aet_birch_exp_modifier = {
	if = { limit = { has_modifier = aet_birch_world_poorly_mapped_1 } remove_modifier = aet_birch_world_poorly_mapped_1 }
	if = { limit = { has_modifier = aet_birch_world_poorly_mapped_2 } remove_modifier = aet_birch_world_poorly_mapped_2 }
	if = { limit = { has_modifier = aet_birch_world_poorly_mapped_3 } remove_modifier = aet_birch_world_poorly_mapped_3 }
	if = { limit = { has_modifier = aet_birch_world_poorly_mapped_4 } remove_modifier = aet_birch_world_poorly_mapped_4 }
}

clear_aet_birch_tech_modifier = {
	if = { limit = { has_modifier = aet_birch_world_tech_debuff_1 } remove_modifier = aet_birch_world_tech_debuff_1 }
	if = { limit = { has_modifier = aet_birch_world_tech_debuff_2 } remove_modifier = aet_birch_world_tech_debuff_2 }
	if = { limit = { has_modifier = aet_birch_world_tech_debuff_3 } remove_modifier = aet_birch_world_tech_debuff_3 }
	if = { limit = { has_modifier = aet_birch_world_tech_debuff_4 } remove_modifier = aet_birch_world_tech_debuff_4 }
}

spawn_aeternite_herc_fleet = { #warforge fleet (capital ships)
	event_target:birch_aeternum = {
		create_leader = {
			class = commander
			species = event_target:birch_aeternites
			name = random
			skill = 10
			effect = {
				save_global_event_target_as = aet_admiral
			}
		}
	}
	create_fleet = {
		name = "Alicenehkä"
		settings = {
			spawn_debris = no
			can_upgrade = no
			uses_naval_capacity = no
		}
		effect = {
			set_owner = event_target:birch_aeternum
			while = {
				count = 1
				create_ship = {
					name = random
					design = "Valistus-Herkuleen"
					prefix = no
					effect = {
						set_name = "Alicenehkä"
					}
				}
			}
			set_formation_scale = 1
			set_location = {
				target = PREV
				distance = 15
				angle = random
			}
			set_name = "Alicenehkä"
			assign_leader = event_target:aet_admiral
		}
	}
}

dismantle_aiondia_listeningpost = {
	event_target:aeternum_birch_world = {
		solar_system = {
			set_star_flag = beacon_destroyed
			if = {
				limit = { exists = starbase }
				starbase = {
					if = {					
						limit = { has_starbase_building = giga_aiondia_listening_post }
						remove_starbase_building = {
							building = giga_aiondia_listening_post
						}
					}
				}
			}
		}
	}
}